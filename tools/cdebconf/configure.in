
dnl Process this file with autoconf to produce a configure script.
dnl The ONLY thing this is used for is to configure for different
dnl linux architectures and configurations, it is not used to make the
dnl code more portable

AC_INIT(configure.in)
CFLAGS="-Wall $CFLAGS -D_GNU_SOURCE"
AC_CONFIG_AUX_DIR(.)
AC_CONFIG_HEADER(src/config.h:src/config.h.in)

AC_DEFINE_UNQUOTED(DEBCONF_VERSION,2.0)
AC_DEFINE_UNQUOTED(PACKAGE,"cdebconf")

dnl Checks for programs.
AC_PROG_MAKE_SET
AC_PROG_CC
AC_ISC_POSIX

AC_CHECK_PROG(HAVESED,sed,yes,no)

test "$HAVESED" = "yes" || exit 1

dnl setup source and build paths
TOPDIR=$(dirname $0)
if [[ "$TOPDIR" = "${TOPDIR#/}" ]]; then
	# not absolute, resolve it 
	TOPDIR=$(readlink -f $(dirname $(pwd)/$0))
fi
AC_SUBST(TOPDIR)
BUILDDIR=$(pwd)
AC_SUBST(BUILDDIR)

if [[ "$TOPDIR" != "$BUILDDIR" ]]; then
	echo "Symlinking source tree..."
	for f in $(find "$TOPDIR" -path "$BUILDDIR" -prune -o -path "*CVS*" -prune \
			-o -type f -print);
	do
		destdir=$(dirname $(echo $f | sed -e "s,$TOPDIR,$BUILDDIR,"))
		[[ -d $destdir ]] || mkdir -p $destdir
		[[ -e $destdir/$(basename $f) ]] || ln -s $f $destdir
	done
fi

dnl Enable debugging?
AC_ARG_WITH(debug,[  --without-debug         turn off debugging?])
if test "$with_debug" != "no"; then
  AC_DEFINE(DODEBUG)
  CFLAGS="$CFLAGS -g -D_DEBUG_"
fi

dnl Use rpath? (for testing mostly)
AC_ARG_WITH(depends,[  --with-rpath            use rpath? (for testing)])
if test "$with_rpath" != "no"; then
  RPATH="-Wl,-rpath,\$(shell pwd)"
  AC_SUBST(RPATH)
fi

dnl What db modules to build?
AC_ARG_WITH(db,[  --with-db               db modules to build])
if test -n "$with_db"; then
  DBMODULES=$with_db
else
  DBMODULES="rfc822db textdb perldb"
fi
AC_SUBST(DBMODULES)

dnl What frontend modules to build?
AC_ARG_WITH(frontend,[  --with-frontend         frontend modules to build])
if test -n "$with_frontend"; then
  FRONTENDMODULES="$with_frontend"
else
  FRONTENDMODULES="text slang"
fi
AC_SUBST(FRONTENDMODULES)


dnl debconf config file
DEBCONFCONFIG="/etc/cdebconf.conf"
AC_ARG_WITH(conffile,[  --with-conffile=PATH    cdebconf config file [/etc/debconf.conf]],
[case "$withval" in
  "") AC_MSG_ERROR(invalid conffile specified) ;;
  *) DEBCONFCONFIG="$withval" ;;
 esac])
AC_DEFINE_UNQUOTED(DEBCONFCONFIG, "$DEBCONFCONFIG") 

dnl Check for libraries
AC_CHECK_LIB(dl, dlopen)

dnl Frontends - which to include.

FRONTEND_MODULES=text

AC_CHECK_LIB(ncurses, initscr, FRONTEND_MODULES="$FRONTEND_MODULES ncurses",
 echo "*** Cannot build ncurses frontend ***")
AC_CHECK_LIB(bogl, bogl_flush, FRONTEND_MODULES="$FRONTEND_MODULES bogl",
 echo "*** Cannot build BOGL frontend ***")
AC_CHECK_LIB(slang, SLang_init_all, FRONTEND_MODULES="$FRONTEND_MODULES slang",
 echo "*** Cannot build SLang frontend ***")

AC_SUBST(FRONTEND_MODULES)

dnl Checks for header files.
AC_HEADER_DIRENT
AC_HEADER_STDC
AC_HEADER_SYS_WAIT
AC_CHECK_HEADERS(fcntl.h sys/ioctl.h unistd.h)

dnl Checks for typedefs, structures, and compiler characteristics.
AC_C_CONST
AC_TYPE_MODE_T
AC_TYPE_PID_T
AC_TYPE_SIZE_T

dnl Checks for typedefs, structures, and compiler characteristics.
AC_C_CONST
AC_C_INLINE
AC_HEADER_TIME

dnl Checks for library functions.
AC_PROG_GCC_TRADITIONAL
AC_TYPE_SIGNAL
AC_CHECK_FUNCS(socket strdup strstr strtol)

AC_OUTPUT(globalmakeflags src/makefile)
