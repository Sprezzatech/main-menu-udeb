#!/bin/sh
. /usr/share/debconf/confmodule
set -e

ISO_COUNT=0
ISO_MOUNT_COUNT=0
MOUNTABLE_DEVS_COUNT=0
TOPLEVEL_DIRS_COUNT=0

log () {
    logger -t hd-image-detect "$@"
}

# Finds all block devices that might have a filesystem on them.
block_devices () {
	for type in scsi ide; do
		if [ -d /dev/$type ]; then
			find /dev/$type -type b
		fi
	done
}

mount_device () {
	dev_to_mount=$1
	db_subst iso-scan/progress_mount DRIVE $dev_to_mount
	db_progress INFO iso-scan/progress_mount
	mount -t auto -o ro $dev_to_mount /hd-media 2>/dev/null
}
		
is_debian_iso () {
	test -e /cdrom/.disk/info
}

register_cd () {
	# Set the distribution used by base-installer, test in priority order
	for dist in stable testing unstable ; do
		if [ -e /cdrom/dists/$dist ] ; then
			CODENAME=`sed -n 's/^Codename: *//p' /cdrom/dists/$dist/Release`
			log "Detected ISO with '$CODENAME' distribution"
			db_set mirror/distribution $CODENAME
			db_subst iso-scan/success DISTRIBUTION $CODENAME
			
			DESCRIPTION=`sed -n 's/^Description: *//p' /cdrom/dists/$dist/Release`
			db_subst iso-scan/success DESCRIPTION $DESCRIPTION
			
			break
		fi
	done
}

# Try to mount a file as an iso, and see if it's a Debian cd.
try_iso () {
	iso_to_try=$1
	iso_device=$2
	if mount -t iso9660 -o loop,ro,exec $iso_to_try /cdrom 2>/dev/null; then
		log "Mounted $1"
		ISO_MOUNT_COUNT=$(expr $ISO_MOUNT_COUNT + 1)
		if is_debian_iso; then
			# This could be more sophisticated, and try to deal
			# with multiple Debian ISO's. For now, once we've got
			# a Debian ISO, any Debian ISO, we're done.
			register_cd $iso_to_try $iso_device
			db_progress STOP
			db_subst iso-scan/success FILENAME $iso_to_try
			db_subst iso-scan/success DEVICE $iso_device
			db_fset iso-scan/success seen false
			db_input high iso-scan/success || true
			db_go || true
			exit 0
		else
			log "Not a Debian ISO"
			umount /cdrom
		fi
	else
		log "Failed mounting $iso_to_try"
	fi
}

# Is a cdrom already mounted?  If so, assume it's the right one..
mount | grep -q 'on /cdrom' && exit 0

# Hopefully this will find the drive.
hw-detect || true

# Main-menu should set the title, but hw-detect clobbers that.
db_settitle debian-installer/iso-scan/title

# Find all block devices, and get a count of them, for use in progress bar.
DEVS=$(block_devices)
DEV_COUNT=0
for dev in $DEVS; do
	DEV_COUNT=$(expr $DEV_COUNT + 1)
done

log "Searching for Debian installation media..."
db_progress START 0 $DEV_COUNT iso-scan/progress_title

# Load up every filesystem known to man. The drive could have anything.
FS="ext2 ext3 reiserfs fat vfat xfs iso9660"
for fs in $FS; do
	modprobe $fs >/dev/null 2>&1 || true
done
modprobe loop >/dev/null

mkdir /cdrom 2>/dev/null || true
mkdir /hd-media 2>/dev/null || true

log "First pass: Look for ISOs near top-level of each filesystem."
for dev in $DEVS; do
	if mount_device $dev; then
		db_subst iso-scan/progress_scan DRIVE $dev
		log "Mounted $dev for first pass"
		MOUNTABLE_DEVS="$MOUNTABLE_DEVS $dev"
		MOUNTABLE_DEVS_COUNT=$(expr $MOUNTABLE_DEVS_COUNT + 1)
		cd /hd-media
		for dir in . *; do
			if [ -d "$dir" ]; then
				if [ "$dir" != "." ]; then 
					TOPLEVEL_DIRS_COUNT=$(expr $TOPLEVEL_DIRS_COUNT + 1)
				fi
				db_subst iso-scan/progress_scan DIRECTORY "$dir/"
				db_progress INFO iso-scan/progress_scan
				for iso in $dir/*.iso $dir/*.ISO; do
					if [ -e $iso ]; then
						log "Found ISO $iso on $dev"
						ISO_COUNT=$(expr $ISO_COUNT + 1)
						try_iso $iso $dev
					fi
				done
			fi
		done
		cd /
		umount /hd-media
	fi

	# It's possible that the ISO was written right to the front of a
	# device, and not to a filesystem. (Hey, we may even be spinning
	# a real CD here, though that would be pretty weird..)
	try_iso $dev $dev

	db_progress STEP 1
done

db_progress STOP

if [ "$MOUNTABLE_DEVS_COUNT" != 0 ]; then
	# Ask about the more expensive second pass.
	db_fset iso-scan/ask_second_pass seen false
	db_subst iso-scan/ask_second_pass NUM_FILESYSTEMS $MOUNTABLE_DEVS_COUNT
	db_subst iso-scan/ask_second_pass NUM_DIRS $TOPLEVEL_DIRS_COUNT
	db_input critical iso-scan/ask_second_pass || true
	db_go || true

	db_get iso-scan/ask_second_pass
	if [ "$RET" = true ]; then
		db_progress START 0 $TOPLEVEL_DIRS_COUNT iso-scan/progress_title
		log "Second pass: Search whole filesystems for ISOs."
		# To save time, only ones we mounted successfully before.
		for dev in $MOUNTABLE_DEVS; do
			if mount_device $dev; then
				db_subst iso-scan/progress_scan DRIVE $dev
				log "Mounted $dev for second pass"
				cd /hd-media
				for dir in *; do
					if [ -d "$dir" ]; then
						db_subst iso-scan/progress_scan DIRECTORY "$dir/"
						db_progress INFO iso-scan/progress_scan
						for iso in $(find $dir 2>/dev/null | grep -i '\.iso$'); do
							log "Found ISO $iso on $dev"
							ISO_COUNT=$(expr $ISO_COUNT + 1)
							try_iso $iso $dev
						done
						db_progress STEP 1
					fi
				done
				cd /
				umount /hd-media
			fi

		done

		db_progress STOP
	fi
fi

# Failure. Display the best message we can about what happened.
# Let them know the second pass failed too.
if [ "$ISO_COUNT" = 0 ]; then
	db_fset iso-scan/no-isos seen false
	db_subst iso-scan/no-isos NUM_FILESYSTEMS $MOUNTABLE_DEVS_COUNT
	db_input critical iso-scan/no-isos || true
elif [ "$ISO_MOUNT_COUNT" != "$ISO_COUNT" ]; then
	db_fset iso-scan/bad-isos seen false
	db_subst iso-scan/bad-isos ISO_COUNT $ISO_COUNT
	db_subst iso-scan/bad-isos ISO_MOUNT_FAILURES $(expr $ISO_COUNT - $ISO_MOUNT_COUNT)
	db_input critical iso-scan/bad-isos || true
else
	db_fset iso-scan/other-isos seen false
	db_subst iso-scan/other-isos ISO_COUNT $ISO_COUNT
	db_input critical iso-scan/other-isos || true
fi
db_go || true
log "Failing with ISO_COUNT = $ISO_COUNT, MOUNTABLE_DEVS_COUNT = $MOUNTABLE_DEVS_COUNT, ISO_MOUNT_COUNT = $ISO_MOUNT_COUNT"
