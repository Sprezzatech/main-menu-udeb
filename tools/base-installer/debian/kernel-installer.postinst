#! /bin/sh -e

. /usr/share/debconf/confmodule

logfile=/var/log/messages

logmsg() {
    echo "$*" >> $logfile
    echo "$*" 1>&2
}
error() {
    logmsg "error: kernel-installer: $*"
}
warning() {
    logmsg "warning: kernel-installer: $*"
}

if db_get debian-installer/kernel/initrd ; then
    if [ "$RET" = "true" ]; then
	do_initrd=yes
    else
	do_initrd=no
    fi
else
    warning "Failed to get debconf answer 'debian-installer/kernel/initrd'."
    warning "Using default do_initrd='yes'."
    do_initrd=yes
fi

cat > /target/etc/kernel-img.conf <<EOF
# Do not create symbolic links in /
do_symlinks = yes
relative_links = yes
image_in_boot = yes
do_bootloader = no
do_bootfloppy = no
do_initrd = $do_initrd
EOF

# Avoid possible root shell without giving passord while booting the
# 2.4 kernel
mkinitrdconf=/target/etc/mkinitrd/mkinitrd.conf
if [ -f $mkinitrdconf ] ; then
    sed 's/^DELAY=.*/DELAY=0/' < $mkinitrdconf > $mkinitrdconf.new &&
        mv $mkinitrdconf.new  $mkinitrdconf
else
    echo 'DELAY=0' >> $mkinitrdconf
fi

# undocumented hacks, copied from base-installer/debian/postinst, to
# prevent dash postinst prompting with "GET dash/sh"
unset DEBIAN_HAS_FRONTEND
unset DEBIAN_FRONTEND
unset DEBCONF_FRONTEND
unset DEBCONF_REDIR

if db_get debian-installer/kernel/image ; then
    if [ -z "$RET" ] ; then
	error "Empty value in 'debian-installer/kernel/image'!"
	error "Unable to install kernel."
	exit 1
    fi
    KERNEL="$RET"
else
    error "Unable to get debconf answer debian-installer/kernel/image."
    error "Unable to install kernel."
fi

PATH=$PATH:/target/usr/bin:/target/bin:/target/usr/sbin:/target/sbin \
LD_LIBRARY_PATH=/target/lib:/target/usr/lib \
/target/usr/bin/apt-get \
    -o Dir::State=/target/var/lib/apt \
    -o Dir::State::status=/target/var/lib/dpkg/status \
    -o Dir::Cache=/target/var/cache/apt \
    -o Dir::Etc=/target/etc/apt \
    -o Dir::Bin::methods=/target/usr/lib/apt/methods \
    -o Dir::Bin::gzip=/target/bin/gzip \
    -o Dir::Bin::dpkg=/target/usr/bin/dpkg \
    -o Dpkg::Options::=--root=/target \
    -y install "$KERNEL"

exit 0
