#!/bin/sh
set -e

. /usr/share/debconf/confmodule

db_capb backup

set -x

# This should match the INDENT variable in mktemplates.
INDENT="Â   "

localecode="debian-installer/locale"
languagecode="debian-installer/language"
countrycode="debian-installer/country"

for list in /etc/iso_3166.tab ; do 
	if [ -f "$list" ]; then
		countries="$list"
	fi
done

error() {
	logger -t countrychooser "error: $@"
	exit 1
}

log() {
	logger -t countrychooser "info: $@"
}

code2country() {
	COUNTRYCODE="$1"
	line=`grep "$COUNTRYCODE" $countries`

	if [ -n "$line" ]; then
		# Remember that country names may have spaces so the code
		# is different than in countrymap.
		printf "$INDENT"
		echo $line | cut -b 4-
	else
		error "Unable to locate info on country '$COUNTRYCODE'"
	fi
}

country2code() {
	COUNTRYNAME=$(echo "$1" | sed "s/^$INDENT//")
	line=`grep "$COUNTRYNAME$" $countries`

	if [ -n "$line" ]; then
		set $line
		if [ -n "$1" ]; then
			echo "$1"
		fi
	fi
}

# First grab back the country we got from languagechooser
# (or from elsewhere) and populate the debconf database with
# it so that it becomes the default choice
db_get "$countrycode"
if [ -n "$RET" ]; then
	# Remember which code was first used
	COUNTRYCODE_LANGUAGECHOOSER="$(code2country "$RET")"
	db_set "countrychooser/country-name" "$COUNTRYCODE_LANGUAGECHOOSER"
fi

while :; do
	#db_fset countrychooser/country-name seen false
	db_input critical "countrychooser/country-name" || [ $? -eq 30 ]
	if ! db_go; then
		exit 10 # back up
	fi

	db_get "countrychooser/country-name"
	CODE="$(country2code "$RET")" || true
	if [ -n "$CODE" ]; then
		break
	else
		# If the code cannot be found, the user probably
		# selected a while region.
		# TODO display error message?
		:
	fi
done

db_set "$countrycode"  "$CODE"
db_get "$languagecode" || true
if [ -n "$RET" ]; then
	LANGUAGECODE=$RET
	# Locale setting
	# Keep locale inherited from languagechooser
	# if the country wasn't changed. Otherwise,
	# add "language_COUNTRY" to the original locale
	# This allows keeping the fallback values
	# Make sure locale is at least "C"
	if [ "$LANGUAGECODE" != "C" ]; then
		db_get "$localecode"
		if [ -n "$RET" ]; then
			LOCALE="$RET"
		else
			LOCALE="C"
		fi
		if [ "$COUNTRYCODE" != "$COUNTRYCODE_LANGUAGECHOOSER" ]; then
			LOCALE=${LANGUAGECODE}_${COUNTRYCODE}:${LOCALE}
		fi
	else
		LOCALE=C
	fi
else
	LOCALE=C
fi
db_set "$localecode" "$LOCALE"

log "$countrycode = '$COUNTRYCODE'"
log "$localecode = '$LOCALE'"

exit 0
