#!/bin/sh
set -e

. /usr/share/debconf/confmodule

db_capb backup

# This should match the INDENT variable in mktemplates.
INDENT="Â   "

localecode="debian-installer/locale"
languagechooserlocalecode="languagechooser/locale"
languagecode="debian-installer/language"
countrycode="debian-installer/country"
languagechooserlanguage="languagechooser/language-name"

for list in /etc/iso_3166.tab ; do 
	if [ -f "$list" ]; then
		countries="$list"
	fi
done

error() {
	logger -t countrychooser "error: $@"
	exit 1
}

log() {
	logger -t countrychooser "info: $@"
}

code2country() {
	COUNTRYCODE="$1"
	line=`grep "$COUNTRYCODE" $countries`

	if [ -n "$line" ]; then
		# Remember that country names may have spaces so the code
		# is different than in countrymap.
		printf "$INDENT"
		echo $line | cut -b 4-
	else
		error "Unable to locate info on country '$COUNTRYCODE'"
	fi
}

country2code() {
	COUNTRYNAME=$(echo "$1" | sed "s/^$INDENT//")
	line=`grep "$COUNTRYNAME$" $countries`

	if [ -n "$line" ]; then
		set $line
		if [ -n "$1" ]; then
			echo "$1"
		fi
	fi
}

# First grab back the country we got from languagechooser
# (or from elsewhere) and populate the debconf database with
# it so that it becomes the default choice
db_get "$countrycode"
if [ -n "$RET" ]; then
	# Remember which code was first used
	COUNTRYCODE_LANGUAGECHOOSER="$(code2country "$RET")"
	db_set "countrychooser/country-name" "$COUNTRYCODE_LANGUAGECHOOSER"
fi

while :; do
	#db_fset countrychooser/country-name seen false
	db_input critical "countrychooser/country-name" || [ $? -eq 30 ]
	if ! db_go; then
		exit 10 # back up
	fi

	db_get "countrychooser/country-name"
	COUNTRYCODE="$(country2code "$RET")" || true
	if [ -n "$COUNTRYCODE" ]; then
		break
	else
		# If the code cannot be found, the user probably
		# selected a while region.
		# TODO display error message?
		:
	fi
done

db_set "$countrycode"  "$COUNTRYCODE"
log "$countrycode = '$COUNTRYCODE'"

# The code below tries to add lang_COUNTRY at the beginning of the language
# list we got from languagechooser
# Example:
#   -user chooses "Arabic" at languagechooser-->she gets "ar_EG:ar:en_US:en"
#    (see the languagelist file from languagechooser)
#   -shes chooses "Syria" as country-->then we end up with 
#    "ar_SY:ar_EG:ar:en_UC:en"
# We shouldn't just add this before the former list in case the country 
# is changed several times.
#
# First re-get the language list from languagechooser
db_get "$languagechooserlanguage"
# If we get nothing, do not change anything
if test "$RET" ; then
    LANGNAME="$RET"
    # languagemap is a script from languagechooser	    
    # languagemap returns the language list in LANGUAGELIST
    # languagemap returns the language alone in LANGUAGE
    # if languagemap couldn't be found
    # do nothing
    if . languagemap ; then
	# If the country was changed from the default one
	# then add xx_YY at the beginning of the languagelist we got
	# from languagechooser
	if [ "$COUNTRYCODE" != "$COUNTRYCODE_LANGUAGECHOOSER" -a -n "$COUNTRYCODE" -a -n $LANGUAGE ]; then
		LANGUAGELIST=${LANGUAGE}_${COUNTRYCODE}:${LANGUAGELIST}
		# Languagelist setting
		db_set "$languagecode" "$LANGUAGELIST"
		log "$languagecode = '$LANGUAGELIST'"
	fi

    fi
fi


exit 0
