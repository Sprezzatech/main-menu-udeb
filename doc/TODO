- micodebconf		[Glenn McGrath <bug1@netconnect.com.au>,
			 "Bernhard R. Link"
			 <brl@pcpool08.mathematik.uni-freiburg.de>,
			 Randolph Chung <tausq@debian.org>]
- microdpkg		[Randolph Chung <tausq@debian.org>]
- more detailed design docs that other people besides Joey Hess can
  understand		[Joey Hess <joeyh@debian.org and debian-boot]
 	- The main menu design has some issues. If a step is failing
	  because some step above it did something wrong, but thought it
	  succeeded (a disk was partitioned, but very badly, and installing
	  the base system to it fails), there is no way to force the user
	  to back up. This seems to preclude linear install mode. I posted
	  a longer example to -boot. Three possible fixes:
	  	- Detect loops, and have code to figure out what went wrong
		  and back up to the appropriate step that can fix it
		- Detect loops, and back up to the beginning of the menu
		- Detect whenever any menu item fails, and leave linear
		  mode.
	- Items on the main menu should be able to specify that they depend
	  on some package being configured. If it is not, they are not the
	  default. There are several ways to do this..
	- Need to define module subsystems for network/hardware support,
	  network configuration, target media support, etc.
- Cobble together a demonstration system that can install onto some very
  limited set of machines, in some very limited fashion. Here are the
  things we would need for such a system:
	- mini-debconf
	- one debconf ui
	- one retreiver and whatever it depends on
	- main menu
	- disk partitioner
	- disk formatter
	- base system extractor
	- lilo setup
	- reboot
