<!-- Start of file preparing/preparing.xml -->
<!-- $Id: preparing.xml 16467 2004-05-30 08:11:23Z mck-guest $ -->

<chapter id="preparing">
 <title>Before Installing &debian;</title>
<para>

This chapter deals with the preparation for installing Debian before you even
boot the installer. This includes backing up your data, gathering information
about your hardware, and locating any necessary information.

</para>


<!-- Start of file preparing/install-overview.xml -->
<!-- $Id: install-overview.xml 22664 2004-10-06 15:49:49Z fjpop-guest $ -->

 <sect1 id="install-overview">
 <title>Overview of the Installation Process</title> 
<para>

First, just a note about re-installations. With Debian, a
circumstance that will require a complete re-installation of your
system is very rare; perhaps mechanical failure of the hard disk would
be the most common case. 

</para><para>

Many common operating systems may require a complete installation to
be performed when critical failures take place or for upgrades to new
OS versions. Even if a completely new installation isn't required,
often the programs you use must be re-installed to operate properly in
the new OS.

</para><para>

Under &debian;, it is much more likely that your OS can be repaired
rather than replaced if things go wrong. Upgrades never require a
wholesale installation; you can always upgrade in-place. And the
programs are almost always compatible with successive OS releases.  If
a new program version requires newer supporting software, the Debian
packaging system ensures that all the necessary software is
automatically identified and installed. The point is, much effort has
been put into avoiding the need for re-installation, so think of it as
your very last option. The installer is <emphasis>not</emphasis>
designed to re-install over an existing system.

</para><para>

Here's a road map for the steps you will take during the installation
process. 

</para>

<orderedlist> 
<listitem><para>

Back up any existing data or documents on the hard disk where you
plan to install. 

</para></listitem>
<listitem><para>

Gather information about your computer and any needed documentation,
before starting the installation.

</para></listitem>
<listitem><para>

Create partition-able space for Debian on your hard disk.

</para></listitem>
<listitem><para>

Locate and/or download the installer software and any specialized
driver files your machine requires (except Debian CD users).

</para></listitem>
<listitem><para>

Set up boot tapes/floppies/USB sticks, or place boot files (most Debian
CD users can boot from one of the CDs).

</para></listitem>
<listitem><para>

Boot the installation system.

</para></listitem>
<listitem arch="not-s390"><para>

Select installation language.

</para></listitem>
<listitem arch="not-s390"><para>

Activate the ethernet network connection, if available.

</para></listitem>

<listitem arch="s390"><para>

Configure one network interface.

</para></listitem>
<listitem arch="s390"><para>

Open a ssh connection to the new system.

</para></listitem>
<listitem arch="s390"><para>

Attach one or more DASDs (Direct Access Storage Device).

</para></listitem>

<listitem><para>

Create and mount the partitions on which Debian will be installed.

</para></listitem>
<listitem><para>

Watch the automatic download/install/setup of the 
<firstterm>base system</firstterm>.

</para></listitem>
<listitem><para>

Install a <firstterm>boot loader</firstterm>
which can start up &debian; and/or your existing system.

</para></listitem>
<listitem><para>

Load the newly installed system for the first time, and make some
initial system settings.

</para></listitem>
<listitem arch="s390"><para>

Open a ssh connection to the new system.

</para></listitem>
<listitem><para>

Install additional software (<firstterm>tasks</firstterm>
and/or <firstterm>packages</firstterm>), at your discretion.

</para></listitem>
</orderedlist>

<para>

If you have problems during the installation, it helps to know which
packages are involved in which steps. Introducing the leading software
actors in this installation drama:

</para><para>

The installer software, <classname>debian-installer</classname>, is
the primary concern of this manual. It detects hardware and loads
appropriate drivers, uses <classname>dhcp-client</classname> to set up the
network connection, and runs <classname>debootstrap</classname> to install
the base system packages. Many more actors play smaller parts in this process,
but <classname>debian-installer</classname> has completed its task when
you load the new system for the first time.

</para><para>

Upon loading the new base system, <classname>base-config</classname>
supervises adding users, setting a time zone (via
<classname>tzsetup</classname>), and setting up the
package installation system (using <classname>apt-setup</classname>). It then
launches <classname>tasksel</classname> which can be used to select large
groups of related programs, and in turn can run <classname>aptitude</classname>
which allows you to choose individual software packages.

</para><para>

When <classname>debian-installer</classname> finishes, before the
first system load, you have only a very basic command line driven
system. The graphical interface which displays windows on your monitor
will not be installed unless you select it during the final steps,
with either <classname>tasksel</classname> or
<classname>aptitude</classname>.  It's optional because many &debian;
systems are servers which don't really have any need for a graphical
user interface to do their job.

</para><para arch="not-s390">

Just be aware that the X system is completely separate from
<classname>debian-installer</classname>, and in fact is much more
complicated. Installation and trouble shooting of the X window
installation is not within the scope of this manual.

</para>
 </sect1>

<!--   End of file preparing/install-overview.xml -->

<!-- Start of file preparing/backup.xml -->
<!-- $Id: backup.xml 12756 2004-04-06 22:23:56Z fjpop-guest $ -->

 <sect1 id="backup">
 <title>Back Up Your Existing Data!</title>
<para>

Before you start, make sure to back up every file that is now on your
system. If this is the first time a non-native operating system has
been installed on your computer, it's quite likely you will need to
re-partition your disk to make room for &debian;. Anytime you
partition your disk, you should count on losing everything on the
disk, no matter what program you use to do it. The programs used in
installation are quite reliable and most have seen years of use; but
they are also quite powerful and a false move can cost you. Even after
backing up be careful and think about your answers and actions. Two
minutes of thinking can save hours of unnecessary work.

</para><para>

If you are creating a multi-boot system, make sure that you have the
distribution media of any other present operating systems on hand.
Especially if you repartition your boot drive, you might find that you
have to reinstall your operating system's boot loader, or in many
cases the whole operating system itself and all files on the affected
partitions.

</para>

<para arch="m68k">

With the exception of the BVM and Motorola VMEbus computers, the only
supported installation method for m68k systems is booting from a local
disk or floppy using an AmigaOS/TOS/MacOS-based bootstrap, for these
machines you will need the original operating system in order to boot
Linux. In order to boot Linux on the BVM and Motorola VMEbus machines
you will need the ``BVMBug'' or ``16xBug'' boot ROMs.

</para>

 </sect1>
<!--   End of file preparing/backup.xml -->

<!-- Start of file preparing/needed-info.xml -->
<!-- $Id: needed-info.xml 25496 2005-02-07 14:56:06Z fjpop-guest $ -->

 <sect1 id="needed-info">
 <title>Information You Will Need</title>

  <sect2>
  <title>Documentation</title>

   <sect3>
   <title>Installation Manual</title>

<para>

This file you are now reading, in plain ASCII, HTML or PDF format.

</para>

<itemizedlist>

&list-install-manual-files;

</itemizedlist>
</sect3>


   <sect3><title>Hardware documentation</title>
<para>

Often contains useful information on configuring or using your hardware.

</para>

 <!-- We need the arch dependence for the whole list to ensure proper xml
      as long as not architectures have a paragraph -->
 <itemizedlist arch="i386;m68k;alpha;sparc;mips;mipsel">
<listitem arch="i386"><para> 

<ulink url="&url-hardware-howto;">Linux Hardware Compatibility HOWTO</ulink>

</para></listitem>

<listitem arch="m68k"><para> 

<ulink url="&url-m68k-faq;">Linux/m68k FAQ</ulink>

</para></listitem>

<listitem arch="alpha"><para> 

<ulink url="&url-alpha-faq;">Linux/Alpha FAQ</ulink>

</para></listitem>

<listitem arch="sparc"><para>

<ulink url="&url-sparc-linux-faq;">Linux for SPARC Processors FAQ</ulink>

</para></listitem>

<listitem arch="mips;mipsel"><para>

<ulink url="&url-mips-howto;">Linux/Mips Howto</ulink>

</para></listitem>

</itemizedlist>
   </sect3>


   <sect3 arch="s390">
   <title>&arch-title; Hardware References</title>
<para>

      
Installation instructions and device drivers (DASD, XPRAM, Console,
      tape, z90 crypto, chandev, network) for Linux on &arch-title; using
      kernel 2.4

</para>

<itemizedlist>
<listitem><para>

<ulink url="http://oss.software.ibm.com/developerworks/opensource/linux390/docu/l390dd08.pdf">Device Drivers and Installation Commands</ulink>

</para></listitem>
</itemizedlist>

<para>

IBM Redbook describing how Linux can be combined with z/VM on
zSeries and &arch-title; hardware.

</para>

<itemizedlist>
<listitem><para>

<ulink url="http://www.redbooks.ibm.com/pubs/pdfs/redbooks/sg244987.pdf">
Linux for &arch-title;</ulink>

</para></listitem>
</itemizedlist>

<para>

IBM Redbook describing the Linux distributions available for the
mainframe. It has no chapter about Debian but the basic installation
concepts are the same across all &arch-title; distributions.

</para>

<itemizedlist>
<listitem><para>

<ulink url="http://www.redbooks.ibm.com/pubs/pdfs/redbooks/sg246264.pdf">
Linux for IBM eServer zSeries and &arch-title;: Distributions</ulink>

</para></listitem>
</itemizedlist>
   </sect3>

  </sect2>

  <sect2 id="fsohi">
  <title>Finding Sources of Hardware Information</title>
<para>

In many cases, the installer will be able to automatically detect your
hardware. But to be prepared, we do recommend familiarizing
yourself with your hardware before the install.

</para><para>

Hardware information can be gathered from:

</para>

<itemizedlist>
<listitem><para>

The manuals that come with each piece of hardware.

</para></listitem>
<listitem><para>

The BIOS setup screens of your computer. You can view these screens
when you start your computer by pressing a combination of keys. Check
your manual for the combination. Often, it is the <keycap>Delete</keycap> key.

</para></listitem>
<listitem><para>

The cases and boxes for each piece of hardware.

</para></listitem>

<listitem arch="i386"><para>

The System window in the Windows Control Panel.
  

</para></listitem>
<listitem><para>

System commands or tools in another operating system, including file
manager displays. This source is especially useful for information
about RAM and hard drive memory.

</para></listitem>
<listitem><para>

Your system administrator or Internet Service Provider. These
sources can tell you the settings you need to set up your
networking and e-mail.

</para></listitem>
</itemizedlist>

<para>

<table>
<title>Hardware Information Needed for an Install</title>
<tgroup cols="2">
<thead>
<row>
  <entry>Hardware</entry><entry>Information You Might Need</entry>
</row>
</thead>

<tbody>
<row arch="not-s390">
  <entry morerows="5">Hard Drives</entry>
  <entry>How many you have.</entry>
</row>
<row arch="not-s390"><entry>Their order on the system.</entry></row>
<row arch="not-s390">
  <entry>Whether IDE or SCSI (most computers are IDE).</entry>
</row>
<row arch="not-s390"><entry>Available free space.</entry></row>
<row arch="not-s390"><entry>Partitions.</entry></row>
<row arch="not-s390">
  <entry>Partitions where other operating systems are installed.</entry>
</row>

<row arch="not-s390">
  <entry morerows="5">Monitor</entry>
  <entry>Model and manufacturer.</entry>
</row>
<row arch="not-s390"><entry>Resolutions supported.</entry></row>
<row arch="not-s390"><entry>Horizontal refresh rate.</entry></row>
<row arch="not-s390"><entry>Vertical refresh rate.</entry></row>
<row arch="not-s390">
  <entry>Color depth (number of colors) supported.</entry>
</row>
<row arch="not-s390"><entry>Screen size.</entry></row>

<row arch="not-s390">
  <entry morerows="3">Mouse</entry>
  <entry>Type: serial, PS/2, or USB.</entry>
</row>
<row arch="not-s390"><entry>Port.</entry></row>
<row arch="not-s390"><entry>Manufacturer.</entry></row>
<row arch="not-s390"><entry>Number of buttons.</entry></row>

<row arch="not-s390">
  <entry morerows="1">Network</entry>
  <entry>Model and manufacturer.</entry>
</row>
<row arch="not-s390"><entry>Type of adapter.</entry></row>

<row arch="not-s390">
  <entry morerows="1">Printer</entry>
  <entry>Model and manufacturer.</entry>
</row>
<row arch="not-s390"><entry>Printing resolutions supported.</entry></row>

<row arch="not-s390">
  <entry morerows="2">Video Card</entry>
  <entry>Model and manufacturer.</entry>
</row>
<row arch="not-s390"><entry>Video RAM available.</entry></row>
<row arch="not-s390">
  <entry>Resolutions and color depths supported (these should be
  checked against your monitor's capabilities).</entry> 
</row>

<row arch="s390">
  <entry morerows="1">DASD</entry>
  <entry>Device number(s).</entry>
</row>
<row arch="s390"><entry>Available free space.</entry></row>

<row arch="s390">
  <entry morerows="2">Network</entry>
  <entry>Type of adapter.</entry>
</row>
<row arch="s390"><entry>Device numbers.</entry></row>
<row arch="s390"><entry>Relative adapter number for OSA cards.</entry></row>

</tbody></tgroup></table>

</para>
  </sect2>

  <sect2>
  <title>Hardware Compatibility</title>

<para>

Many brand name products work without trouble on Linux. Moreover,
hardware for Linux is improving daily. However, Linux still does not
run as many different types of hardware as some operating systems.

</para><para arch="i386"> 

In particular, Linux usually cannot run hardware that requires a
running version of Windows to work.

</para><para arch="i386">

Although some Windows-specific hardware can be made to run on Linux,
doing so usually requires extra effort. In addition, Linux drivers
for Windows-specific hardware are usually specific to one Linux
kernel. Therefore, they can quickly become obsolete.

</para><para arch="i386">

So called win-modems are the most common type of this hardware.
However, printers and other equipment may also be Windows-specific.

</para><para>

You can check hardware compatibility by:

<itemizedlist>
<listitem><para>

Checking manufacturers' web sites for new drivers.

</para></listitem>
<listitem><para>

Looking at web sites or manuals for information about emulation.
Lesser known brands can sometimes use the drivers or settings for
better-known ones.

</para></listitem>
<listitem><para>

Checking hardware compatibility lists for Linux on web sites
dedicated to your architecture.

</para></listitem>
<listitem><para>

Searching the Internet for other users' experiences.

</para></listitem>
</itemizedlist>

</para>
  </sect2>

  <sect2>
  <title>Network Settings</title>

<para>

If your computer is connected to a network 24 hours a day (i.e., an
Ethernet or equivalent connection &mdash; not a PPP connection), you
should ask your network's system administrator for this information.

<itemizedlist>
<listitem><para>

Your host name (you may be able to decide this on your own).

</para></listitem>
<listitem><para>

Your domain name. 

</para></listitem>
<listitem><para>

Your computer's IP address. 

</para></listitem>
<listitem><para>

The netmask to use with your network. 

</para></listitem>
<listitem><para>

The IP address of the default gateway system you should route to, if
your network <emphasis>has</emphasis> a gateway.

</para></listitem>
<listitem><para>

The system on your network that you should use as a DNS (Domain Name
Service) server.

</para></listitem>
</itemizedlist>

</para><para condition="supports-dhcp">

On the other hand, if your administrator tells you that a DHCP server
is available and is recommended, then you don't need this information
because the DHCP server will provide it directly to your computer
during the installation process.

</para><para>

If you use a wireless network, you should also find out:

<itemizedlist>
<listitem><para>

ESSID of your wireless network.

</para></listitem>
<listitem><para>

WEP security key (if applicable).

</para></listitem>
</itemizedlist>

</para>
  </sect2>

 </sect1>
<!--   End of file preparing/needed-info.xml -->

<!-- Start of file preparing/minimum-hardware-reqts.xml -->
<!-- $Id: minimum-hardware-reqts.xml 24840 2005-01-09 03:34:52Z fjpop-guest $ -->

 <sect1 id="minimum-hardware-reqts">
<title>Meeting Minimum Hardware Requirements</title>
<para>

Once you have gathered information about your computer's hardware,
check that your hardware will let you do the type of installation
that you want to do.

</para><para arch="not-s390">

Depending on your needs, you might manage with less than some of the
recommended hardware listed in the table below. However, most users
risk being frustrated if they ignore these suggestions. 

</para><para arch="i386">

A Pentium 100 is the minimum recommended for desktop 
systems, and a Pentium II-300 for a Server.

</para><para arch="m68k">

A 68030 or better processor is recommended for m68k
installs. You may get by with a little less drive space than shown.

</para><para arch="powerpc">

Any OldWorld or NewWorld PowerPC can serve well 
as a Desktop System. For servers, a minimum 132-Mhz machine is 
recommended.

</para>

<table>
<title>Recommended Minimum System Requirements</title>
<tgroup cols="3">
<thead>
<row>
  <entry>Install Type</entry><entry>RAM</entry><entry>Hard Drive</entry>
</row>
</thead>

<tbody>
<row>
  <entry>No desktop</entry>
  <entry>24 megabytes</entry>
  <entry>450 megabytes</entry>
</row><row>
  <entry>With Desktop</entry>
  <entry>64 megabytes</entry>
  <entry>1 gigabyte</entry>
</row><row>
  <entry>Server</entry>
  <entry>128 megabytes</entry>
  <entry>4 gigabytes</entry>
</row>

</tbody></tgroup></table>

<para>

Here is a sampling of some common Debian system configurations.
You can also get an idea of the disk space used by related groups
of programs by referring to <xref linkend="tasksel-size-list"/>.

</para>
<variablelist>

<varlistentry>
 <term>Standard Server</term>
 <listitem><para>

This is a small server profile, useful for a stripped down server
which does not have a lot of niceties for shell users.  It includes an
FTP server, a web server, DNS, NIS, and POP. For these 100MB of disk
space would suffice, and then you would need to add space
for any data you serve up.

</para></listitem>
</varlistentry>

<varlistentry arch="not-s390">
 <term>Desktop</term>
 <listitem><para>

A standard desktop box, including the X window system, full desktop
environments, sound, editors, etc.  You'll need about 2GB using the
standard desktop task, though it can be done in far less.

</para></listitem>
</varlistentry>

<varlistentry arch="not-s390">
 <term>Work Console</term>
 <listitem><para>

A more stripped-down user machine, without the X window system or X
applications.  Possibly suitable for a laptop or mobile computer.  The
size is around 140MB. 

</para></listitem>
</varlistentry>

<varlistentry>
 <term>Developer</term>
 <listitem><para>

A desktop setup with all the development packages, such as Perl, C,
C++, etc.  Size is around 475MB.  Assuming you are adding X11 and some
additional packages for other uses, you should plan around 800MB for
this type of machine.

</para></listitem>
</varlistentry>

</variablelist><para>

Remember that these sizes don't include all the other materials which
are usually to be found, such as user files, mail, and data.  It is
always best to be generous when considering the space for your own
files and data.  Notably, the <filename>/var</filename> partition contains
a lot of state information specific to Debian in addition to its regular
contents like logfiles.  The
<command>dpkg</command> files (with information on all installed
packages) can easily consume 20MB. Also,
<command>apt-get</command> puts downloaded packages here before they are
installed. You should
usually allocate at least 100MB for <filename>/var</filename>.

</para>

 </sect1>

<!--   End of file preparing/minimum-hardware-reqts.xml -->

<!-- Start of file preparing/non-debian-partitioning.xml -->
<!-- $Id: non-debian-partitioning.xml 25496 2005-02-07 14:56:06Z fjpop-guest $ -->

 <sect1 id="non-debian-partitioning">
 <title>Pre-Partitioning for Multi-Boot Systems</title>
<para>

Partitioning your disk simply refers to the act of breaking up your
disk into sections. Each section is then independent of the others.
It's roughly equivalent to putting up walls inside a house; if you add
furniture to one room it doesn't affect any other room.

</para><para arch="s390">

Whenever this section talks about ``disks'' you should translate this
into a DASD or VM minidisk in the &arch-title; world. Also a machine means
an LPAR or VM guest in this case.

</para><para>

If you already have an operating system on your system

<phrase arch="i386">
(Windows 9x, Windows NT/2000/XP, OS/2, MacOS, Solaris, FreeBSD, &hellip;)
</phrase>

<phrase arch="alpha">
(Tru64 (Digital UNIX), OpenVMS, Windows NT, FreeBSD, &hellip;)
</phrase>

<phrase arch="s390">
(VM, z/OS, OS/390, &hellip;)
</phrase>

<phrase arch="m68k">
(Amiga OS, Atari TOS, Mac OS, &hellip;)
</phrase>

and want to stick Linux on the same disk, you will need to repartition
the disk. Debian requires its own hard disk partitions. It cannot be
installed on Windows or MacOS partitions. It may be able to share some
partitions with other Linux systems, but that's not covered here. At
the very least you will need a dedicated partition for the Debian
root.

</para><para>

You can find information about your current partition setup by using
a partitioning tool for your current operating system

<phrase arch="i386">, such as fdisk or PartitionMagic</phrase>

<phrase arch="powerpc">, such as Drive Setup, HD Toolkit, or MacTools</phrase>

<phrase arch="m68k">, such as HD SC Setup, HDToolBox, or SCSITool</phrase>

<phrase arch="s390">, such as the VM diskmap</phrase>
<!-- FIXME: remove space in front of . -->
. Partitioning tools always provide a way to show existing partitions
without making changes.

</para><para>

In general, changing a partition with a file system already on
it will destroy any information there. Thus you should always make
backups before doing any repartitioning.  Using the analogy of the
house, you would probably want to move all the furniture out of the
way before moving a wall or you risk destroying it.

</para><para arch="hppa" condition="FIXME">

<emphasis>FIXME: write about HP-UX disks?</emphasis>

</para><para>

If your computer has more than one hard disk, you may want to dedicate
one of the hard disks completely to Debian. If so, you don't need to
partition that disk before booting the installation system; the
installer's included partitioning program can handle the job nicely.

</para><para>

If your machine has only one hard disk, and you would like to
completely replace the current operating system with &debian;,
you also can wait to partition as part of the installation process
(<xref linkend="partman"/>), after you have booted the
installation system.  However this only works if you plan to boot the
installer system from tapes, CD-ROM or files on a connected machine.
Consider: if you boot from files placed on the hard disk, and then
partition that same hard disk within the installation system, thus
erasing the boot files, you'd better hope the installation is
successful the first time around.  At the least in this case, you
should have some alternate means of reviving your machine like the
original system's installation tapes or CDs.

</para><para>

If your machine already has multiple partitions, and enough space can
be provided by deleting and replacing one or more of them, then you
too can wait and use the Debian installer's partitioning program. You
should still read through the material below, because there may be
special circumstances like the order of the existing partitions within
the partition map, that force you to partition before installing
anyway.

</para><para arch="i386">

If your machine has a FAT filesystem, as used by DOS and older versions of
Windows, you can wait and use Debian installer's partitioning program to
resize the FAT filesystem.

</para><para>

If none of the above apply, you'll need to partition your hard disk before
starting the installation to create partition-able space for
Debian. If some of the partitions will be owned by other operating
systems, you should create those partitions using native operating
system partitioning programs. We recommend that you do
<emphasis>not</emphasis> attempt to create partitions for &debian;
using another operating system's tools. Instead, you should just
create the native operating system's partitions you will want to
retain.

</para><para>

If you are going to install more than one operating system on the same
machine, you should install all other system(s) before proceeding with
Linux installation. Windows and other OS installations may destroy
your ability to start Linux, or encourage you to reformat non-native
partitions.

</para><para>

You can recover from these actions or avoid them, but installing
the native system first saves you trouble.

</para><para arch="powerpc">

In order for OpenFirmware to automatically boot &debian; the Linux
partitions should appear before all other partitions on the disk,
especially MacOS boot partitions. This should be kept in mind when
pre-partitioning; you should create a Linux placeholder partition to
come <emphasis>before</emphasis> the other bootable partitions on the
disk. (The small partitions dedicated to Apple disk drivers are not
bootable.) You can delete the placeholder with the Linux partition
tools later during the actual install, and replace it with Linux
partitions.

</para><para>

If you currently have one hard disk with one partition (a common setup
for desktop computers), and you want to multi-boot the native
operating system and Debian, you will need to:

  <orderedlist>
<listitem><para>

Back up everything on the computer.

</para></listitem>
<listitem><para>

Boot from the native operating system installer media such as CD-ROM
or tapes.

<phrase arch="powerpc">When booting from a MacOS CD, hold the
<keycap>c</keycap> key while 
booting to force the CD to become the active MacOS system.</phrase>

</para></listitem>
<listitem><para>

Use the native partitioning tools to create native system
partition(s). Leave either a place holder partition or free space for
&debian;.

</para></listitem>
<listitem><para>

Install the native operating system on its new partition.

</para></listitem>
<listitem><para>

Boot back into the native system to verify everything's OK,
    and to download the Debian installer boot files.

</para></listitem>
<listitem><para>

Boot the Debian installer to continue installing Debian.

</para></listitem>
</orderedlist>

</para>


<!-- Start of file preparing/nondeb-part/alpha.xml -->
<!-- $Id: alpha.xml 23681 2004-11-08 07:55:34Z vorlon $ -->


  <sect2 arch="alpha"><title>Partitioning in Tru64 UNIX</title>
<para>

Tru64 UNIX, formerly known as Digital UNIX, which is in turn formerly
known as OSF/1, uses the partitioning scheme similar to the BSD `disk
label', which allows for up to eight partitions per disk drive.  The
partitions are numbered `1' through to `8' in
Linux and ``lettered'' `a' through to `h' in UNIX.
Linux kernels 2.2 and higher always correspond `1' to
`a', `2' to `b' and so on.  For
example, <filename>rz0e</filename> in Tru64 UNIX would most likely be called
<filename>sda5</filename> in Linux.

</para><para>

Partitions in a Tru64 disk label may overlap.  Moreover, if this disk
will be used from Tru64, the `c' partition is required to span the
entire disk (thus overlapping all other non-empty partitions).  Under
Linux this makes <filename>sda3</filename> identical to
<filename>sda</filename> (<filename>sdb3</filename> to
<filename>sdb</filename>, if present, and so on).  However, the partman
partitioning tool used by &d-i; cannot handle overlapping partitions at
present.  As a result, it is currently not recommended to share disks
between Tru64 and Debian.  Partitions on Tru64 disks can be mounted
under Debian after installation has been completed.

</para><para>

Another conventional requirement is for the `a' partition to start from
the beginning of the disk, so that it always includes the boot block
with the disk label. If you intend to boot Debian from that disk, you
need to size it at least 2MB to fit aboot and perhaps a kernel.
Note that this partition is only required for compatibility; you must
not put a file system onto it, or you'll destroy data.

</para><para>

It is possible, and indeed quite reasonable, to share a swap partition
between UNIX and Linux.  In this case it will be needed to do a
<command>mkswap</command> on that partition every time the system is rebooted
from UNIX into Linux, as UNIX will damage the swap signature.  You may
want to run <command>mkswap</command> from the Linux start-up scripts before
adding swap space with <command>swapon -a</command>.

</para><para>

If you want to mount UNIX partitions under Linux, note that Digital UNIX
can use two different file system types, UFS and AdvFS, of which Linux
only understands the former.

</para>
  </sect2>

  <sect2 arch="alpha"><title>Partitioning in Windows NT</title>

<para>

Windows NT uses the PC-style partition table.  If you are manipulating
existing FAT or NTFS partitions, it is recommended that you use the
native Windows NT tools (or, more conveniently, you can also
repartition your disk from the AlphaBIOS setup menu).  Otherwise, it
is not really necessary to partition from Windows; the Linux
partitioning tools will generally do a better job.  Note that when you
run NT, the Disk Administrator may offer you to write a ``harmless
signature'' on non-Windows disks if you have any.  <emphasis>Never</emphasis>
let it do that, as this signature will destroy the partition
information.

</para><para>

If you plan to boot Linux from an ARC/AlphaBIOS/ARCSBIOS console, you
will need a (small) FAT partition for MILO.  5 MB is quite
sufficient.  If Windows NT is installed, its 6 MB bootstrap partition
can be employed for this purpose.  Debian &releasename; does not support
installing MILO.  If you already have MILO installed on your system, or
install MILO from other media, Debian can still be booted from ARC.

</para>
  </sect2>
<!--   End of file preparing/nondeb-part/alpha.xml -->

<!-- Start of file preparing/nondeb-part/i386.xml -->
<!-- $Id: i386.xml 24663 2004-12-31 18:38:22Z fjpop-guest $ -->


  <sect2 arch="i386"><title>Partitioning From DOS or Windows</title>
<para>

If you are manipulating existing FAT or NTFS partitions, it is
recommended that you either use the scheme below or native Windows or
DOS tools.  Otherwise, it is not really necessary to partition from DOS
or Windows; the Linux partitioning tools will generally do a better
job.

</para><para>

But if you have a large IDE disk, and are using neither LBA addressing,
overlay drivers (sometimes provided by hard disk manufacturers), nor a
new (post 1998) BIOS that supports large disk access extensions, then
you must locate your Debian boot partition carefully. In this case,
you will have to put the boot partition into the first 1024 cylinders
of your hard drive (usually around 524 megabytes, without BIOS
translation). This may require that you move an existing FAT or NTFS
partition.

</para>

   <sect3 id="lossless">
   <title>Lossless Repartitioning When Starting From DOS, Win-32 or OS/2
   </title>

<para>

One of the most common installations is onto a system that already
contains DOS (including Windows 3.1), Win32 (such as Windows 95, 98, Me,
NT, 2000, XP), or OS/2, and it is desired to put Debian onto the same disk
without destroying the previous system. Note that the installer supports
resizing of FAT and NTFS filesystems as used by DOS and Windows. Simply
start the installer, select the option to <menuchoice> <guimenuitem>Manually
edit partition table</guimenuitem> </menuchoice>, select the partition to
resize, and specify its new size.
So in most cases you should not need to use the method described below.

</para><para>

Before going any further, you should have decided how you will be
dividing up the disk. The method in this section will only split a
partition into two pieces. One will contain the original OS and the
other will be used for Debian.  During the installation of Debian, you
will be given the opportunity to use the Debian portion of the disk as you
see fit, i.e., as swap or as a file system.

</para><para>

The idea is to move all the data on the partition to the beginning,
before changing the partition information, so that nothing will be
lost.  It is important that you do as little as possible between the
data movement and repartitioning to minimize the chance of a file
being written near the end of the partition as this will decrease the
amount of space you can take from the partition.

</para><para>

The first thing needed is a copy of <command>fips</command> which is
available in the <filename>tools/</filename> directory on your nearest Debian
mirror. Unzip the archive and copy the files
<filename>RESTORRB.EXE</filename>, <filename>FIPS.EXE</filename> and
<filename>ERRORS.TXT</filename> to a bootable floppy.  A bootable floppy can
be created using the command <filename>sys a:</filename> under DOS.
<command>fips</command> comes with very good documentation which you may
want to read.  You will definitely need to read the documentation if
you use a disk compression driver or a disk manager.  Create the disk
and read the documentation <emphasis>before</emphasis> you defragment the disk.

</para><para>

The next thing needed is to move all the data to the beginning of the
partition. <command>defrag</command>, which comes standard with DOS 6.0 and
later, can easily do the job.  See the <command>fips</command> documentation
for a list of other software that may do the trick.  Note that if you
have Windows 9x, you must run <command>defrag</command> from there, since
DOS doesn't understand VFAT, which is used to support for long
filenames, used in Windows 95 and higher.

</para><para>

After running the defragmenter (which can take a while on a large
disk), reboot with the <command>fips</command> disk you created in the
floppy drive.  Simply type <filename>a:\fips</filename> and follow the directions.

</para><para>

Note that there are many other other partition managers out there, in
case <command>fips</command> doesn't do the trick for you.

</para>
   </sect3>

   <sect3 id="partitioning-for-dos"><title>Partitioning for DOS</title>

<para>

If you are partitioning for DOS drives, or changing the size of DOS
partitions, using Linux tools, many people experience problems working
with the resulting FAT partitions.  For instance, some have reported
slow performance, consistent problems with <command>scandisk</command>, or
other weird errors in DOS or Windows.

</para><para>

Apparently, whenever you create or resize a partition for DOS use,
it's a good idea to fill the first few sectors with zeros.  Do this
prior to running DOS's <command>format</command> command, from Linux:

<informalexample><screen>
# dd if=/dev/zero of=/dev/hdXX bs=512 count=4
</screen></informalexample>

</para>
   </sect3>
  </sect2>
<!--   End of file preparing/nondeb-part/i386.xml -->

<!-- Start of file preparing/nondeb-part/m68k.xml -->
<!-- $Id: m68k.xml 11648 2004-03-22 00:37:46Z joeyh $ -->


  <sect2 arch="m68k"><title>Partitioning in AmigaOS</title>
<para>

If you are running AmigaOS, you can use the <command>HDToolBox</command>
program to adjust your native partitions prior to installation.

</para>
  </sect2>

  <sect2 arch="m68k"><title>Partitioning in Atari TOS</title>
<para>

Atari partition IDs are three ASCII characters, use ``LNX'' for data
and ``SWP'' for swap partitions. If using the low memory installation
method, a small Minix partition is also needed (about 2 MB), for which
the partition ID is ``MNX''.  Failure to set the appropriate partition
IDs not only prevents the Debian installation process from recognizing
the partitions, but also results in TOS attempting to use the Linux
partitions, which confuses the hard disk driver and renders the whole
disk inaccessible.

</para><para>

There are a multitude of third party partitioning tools available (the
Atari <command>harddisk</command> utility doesn't permit changing the
partition ID); this manual cannot give detailed descriptions for all
of them. The following description covers <command>SCSITool</command> (from
Hard+Soft GmBH).

<orderedlist>
<listitem><para>

Start <command>SCSITool</command> and select the disk you want to partition
(<guimenu>Disk</guimenu> menu, item <guimenuitem>select</guimenuitem>).

</para></listitem>
<listitem><para>

From the <guimenu>Partition</guimenu> menu, select either
<guimenuitem>New</guimenuitem> to add new partitions or change the
existing partition sizes, or <guimenuitem>Change</guimenuitem> to
change one specific partition.  Unless you have already created
partitions with the right sizes and only want to change the partition
ID, <guimenuitem>New</guimenuitem> is probably the best choice.

</para></listitem>
<listitem><para>

For the <guimenuitem>New</guimenuitem> choice, select
<guilabel>existing</guilabel> in the dialog box
prompting the initial settings. The next window shows a list of
existing partitions which you can adjust using the scroll buttons, or
by clicking in the bar graphs. The first column in the partition list
is the partition type; just click on the text field to edit it.  When
you are finished changing partition settings, save the changes by
leaving the window with the <guibutton>OK</guibutton> button.

</para></listitem>
<listitem><para>

For the <guimenuitem>Change</guimenuitem> option, select the partition
to change in the selection list, and select <guilabel>other
systems</guilabel> in the dialog box.  The 
next window lists detailed information about the location of this
partition, and lets you change the partition ID.  Save changes by
leaving the window with the <guibutton>OK</guibutton> button.

</para></listitem>
<listitem><para>

Write down the Linux names for each of the partitions you created or
changed for use with Linux &mdash; see <xref linkend="device-names"/>.

</para></listitem>
<listitem><para>

Quit <command>SCSITool</command> using the
<guimenuitem>Quit</guimenuitem> item from the <guimenu>File</guimenu>
menu.  The computer will reboot to make sure the changed partition
table is used by TOS. If you changed any TOS/GEM partitions, they will
be invalidated and have to be reinitialized (we told you to back up
everything on the disk, didn't we?).

</para></listitem>
</orderedlist>

</para><para>

There is a partitioning tool for Linux/m68k called
<command>atari-fdisk</command> in the installation system, but for now we
recommend you partition your disk using a TOS partition editor or some
disk tool. If your partition editor doesn't have an option to edit the
partition type, you can do this crucial step at a later stage (from
the booted temporary install RAMdisk).  <command>SCSITool</command> is only
one of the partition editors we know of which supports selection of
arbitrary partition types. There may be others; select the tool that
suits your needs.

</para>
</sect2>

  <sect2 arch="m68k"><title>Partitioning in MacOS</title>
<para>

Partitioning tools for Macintosh tested include <command>pdisk</command>,
<command>HD SC Setup</command> 7.3.5 (Apple), <command>HDT</command> 1.8 (FWB),
<command>SilverLining</command> (LaCie), and <command>DiskTool</command> (Tim
Endres, GPL). Full versions are required for <command>HDT</command> and
<command>SilverLining</command>. The Apple tool requires a patch in order
to recognize third-party disks (a description on how to patch <command>HD
SC Setup</command> using <command>ResEdit</command> can be found at 
<ulink url="http://www.euronet.nl/users/ernstoud/patch.html"></ulink>).

</para><para>

For IDE based Macs, you need to use <command>Apple Drive Setup</command> to create
empty space for the Linux partitions, and complete the partitioning under
Linux, or use the MacOS version of pdisk available from the MkLinux FTP
server.

</para>
</sect2>

<!--   End of file preparing/nondeb-part/m68k.xml -->

<!-- Start of file preparing/nondeb-part/sparc.xml -->
<!-- $Id: sparc.xml 11648 2004-03-22 00:37:46Z joeyh $ -->


  <sect2 arch="sparc"><title>Partitioning from SunOS</title>

<para>

It's perfectly fine to partition from SunOS; in fact, if you intend to
run both SunOS and Debian on the same machine, it is recommended that
you partition using SunOS prior to installing Debian.  The Linux
kernel understands Sun disk labels, so there are no problems there.
Just make sure you leave room for the Debian root partition within the
first 1GB area of the boot disk. You can also place the kernel image on a
UFS partition if that is easier than putting the root partition there.
SILO supports booting Linux and SunOS from either EXT2 (Linux), UFS
(SunOS), romfs and iso9660 (CDROM) partitions.

</para>
  </sect2>

  <sect2 arch="sparc"><title>Partitioning from Linux or another OS</title>

<para>

Whatever system you are using to partition, make sure you create a
``Sun disk label'' on your boot disk.  This is the only kind of
partition scheme that the OpenBoot PROM understands, and so it's the
only scheme from which you can boot.  In <command>fdisk</command>, the
<keycap>s</keycap> key is used to create Sun disk labels. You only need to do this
on drives that do not already have a Sun disk label. If you are using a
drive that was previously formatted using a PC (or other architecture) you
must create a new disk label, or problems with the disk geometry will most
likely occur.

</para><para>

You will probably be using <command>SILO</command> as your boot loader (the
small program which runs the operating system kernel).
<command>SILO</command> has certain requirements for partition sizes and
location; see <xref linkend="partitioning"/>.  

</para>
  </sect2>
<!--   End of file preparing/nondeb-part/sparc.xml -->

<!-- Start of file preparing/nondeb-part/powerpc.xml -->
<!-- $Id: powerpc.xml 11648 2004-03-22 00:37:46Z joeyh $ -->


  <sect2 arch="powerpc"><title>MacOS/OSX Partitioning</title>

<para>

The <application>Apple Drive Setup</application> application can be found in the
<filename>Utilities</filename> folder on the MacOS CD. It will not adjust existing
partitions; it is limited to partitioning the entire disk at once. The
disk driver partitions don't show up in <application>Drive Setup</application>.

</para><para>

Remember to create a placeholder partition for GNU/Linux, preferably 
positioned first in the disk layout. it doesn't matter what type it 
is, it will be deleted and replaced later inside the &debian; installer.

</para><para>

If you are planning to install both MacOS 9 and OS X, it is best to
create separate partitions for OS 9 and OS X. If they are installed on
the same partition, <application>Startup Disk</application> (and reboot) must be used to select
between the two; the choice between the two systems can't be made at
boot time. With separate partitions, separate options for OS 9 and OS
X will appear when holding the <keycap>option</keycap> key at boot time, and separate
options can be installed in the <application>yaboot</application> boot menu as well. Also,
Startup Disk will de-bless all other mountable partitions, which can
affect GNU/Linux booting. Both OS 9 and OS X partitions will be 
accessible from either OS 9 or OS X.

</para><para>

GNU/Linux is unable to access information on HFS+ (aka MacOS Extended)
or UFS partitions. OS X requires one of these two types for its boot
partition. MacOS 9 can be installed on either HFS (aka MacOS Standard)
or HFS+. To share information between the MacOS and GNU/Linux systems,
an exchange partition is handy. HFS and MS-DOS FAT partitions are
supported by both MacOS and Linux. 

</para>
  </sect2>
<!--   End of file preparing/nondeb-part/powerpc.xml -->

 </sect1>
<!--   End of file preparing/non-debian-partitioning.xml -->

<!-- Start of file preparing/pre-install-bios-setup.xml -->
<!-- $Id: pre-install-bios-setup.xml 25496 2005-02-07 14:56:06Z fjpop-guest $ -->

 <sect1 id="pre-install-bios-setup">
 <title>Pre-Installation Hardware and Operating System Setup</title>
<para>

This section will walk you through pre-installation hardware setup, if
any, that you will need to do prior to installing Debian.  Generally,
this involves checking and possibly changing firmware settings for
your system.  The ``firmware'' is the core software used by the
hardware; it is most critically invoked during the bootstrap process
(after power-up). Known hardware issues affecting the reliability of
&debian; on your system are also highlighted.

</para>


<!-- Start of file preparing/bios-setup/i386.xml -->
<!-- $Id: i386.xml 18674 2004-07-28 20:51:03Z joeyh $ -->


  <sect2 arch="i386" id="bios-setup"><title>Invoking the BIOS Set-Up Menu</title>

<para>

BIOS provides the basic functions needed to boot your machine to allow
your operating system to access your hardware.  Your system probably
provides a BIOS set-up menu, which is used to configure the BIOS.
Before installing, you <emphasis>must</emphasis> ensure that your BIOS
is setup correctly; not doing so can lead to intermittent crashes or
an inability to install Debian.

</para><para>

The rest of this section is lifted from the 
<ulink url="&url-pc-hw-faq;"></ulink>, answering the question, "How do I
enter the CMOS configuration menu?".  How you access the BIOS (or
``CMOS'') configuration menu depends on who wrote your BIOS software:

</para>

<!-- From: burnesa@cat.com (Shaun Burnet) -->
<variablelist>

<varlistentry>
 <term>AMI BIOS</term>
 <listitem><para>

<keycap>Delete</keycap> key during the POST (power on self test)

</para></listitem>
</varlistentry>

<varlistentry>
 <term>Award BIOS</term>
 <listitem><para>

<keycombo>
  <keycap>Ctrl</keycap><keycap>Alt</keycap><keycap>Esc</keycap>
</keycombo>, or <keycap>Delete</keycap> key during the POST

</para></listitem>
</varlistentry>

<varlistentry><term>DTK BIOS</term>
 <listitem><para>

<keycap>Esc</keycap> key during the POST

</para></listitem>
</varlistentry>

<varlistentry><term>IBM PS/2 BIOS</term>
 <listitem><para>

<keycombo>
  <keycap>Ctrl</keycap><keycap>Alt</keycap><keycap>Insert</keycap>
</keycombo>
after
<keycombo>
  <keycap>Ctrl</keycap><keycap>Alt</keycap><keycap>Delete</keycap>
</keycombo>

</para></listitem>
</varlistentry>

<varlistentry>
 <term>Phoenix BIOS</term>
 <listitem><para>

<keycombo>
  <keycap>Ctrl</keycap><keycap>Alt</keycap><keycap>Esc</keycap>
</keycombo>
or
<keycombo>
  <keycap>Ctrl</keycap><keycap>Alt</keycap><keycap>S</keycap>
</keycombo>
or
<keycap>F1</keycap>

</para></listitem>
</varlistentry>
</variablelist>

<para>

Information on invoking other BIOS routines can be found in 
<ulink url="&url-invoking-bios-info;"></ulink>.

</para><para>

Some &arch-title; machines don't have a CMOS configuration menu in the
BIOS.  They require a software CMOS setup program.  If you don't have
the Installation and/or Diagnostics diskette for your machine, you can
try using a shareware/freeware program.  Try looking in 
<ulink url="&url-simtel;"></ulink>.

</para>
  </sect2>

  <sect2 arch="i386" id="boot-dev-select"><title>Boot Device Selection</title>

<para>

Many BIOS set-up menus allow you to select the devices that will be
used to bootstrap the system. Set this to look for a bootable
operating system on <filename>A:</filename> (the first floppy disk),
then optionally the first CD-ROM device (possibly appearing as
<filename>D:</filename> or <filename>E:</filename>), and then from
<filename>C:</filename> (the first hard disk).  This setting enables
you to boot from either a floppy disk or a CD-ROM, which are the two
most common boot devices used to install Debian.

</para><para>

If you have a newer SCSI controller and you have a CD-ROM device
attached to it, you are usually able to boot from the CD-ROM.  All you
have to do is enable booting from a CD-ROM in the SCSI-BIOS of your
controller. 

</para><para>

Other popular option is to boot from a USB storage (also called USB
memory stick or USB key).  Some BIOSes can boot USB storage directly,
and some cannot. You may need to configure your BIOS to boot from
a <quote>Removable drive</quote> or even a <quote>USB-ZIP</quote> to
get it to boot from the USB device.

</para><para>

Here are some details about how to set the boot order. Remember to
reset the boot order after Linux is installed, so that you restart
your machine from the hard drive.

</para>

   <sect3 id="ctbooi">
   <title>Changing the Boot Order on IDE Computers</title>

<orderedlist>
<listitem><para>

As your computer starts, press the keys to enter the BIOS 
utility. Often, it is the <keycap>Delete</keycap> key. However,
consult the hardware documentation for the exact keystrokes.

</para></listitem>
<listitem><para>

Find the boot sequence in the setup utility. Its location depends on
your BIOS, but you are looking for a field that lists drives.

</para><para>

   
Common entries on IDE machines are C, A, cdrom or A, C, cdrom.

</para><para>

   
C is the hard drive, and A is the floppy drive.

</para></listitem>   
<listitem><para>

Change the boot sequence setting so that the CD-ROM or the
floppy is first. Usually, the <keycap>Page Up</keycap> or
<keycap>Page Down</keycap> keys cycle 
through the possible choices.

</para></listitem>
<listitem><para>

Save your changes. Instructions on the screen tell you how to
save the changes on your computer.

</para></listitem>
</orderedlist>
   </sect3>

   <sect3 id="ctboos">
   <title>Changing the Boot Order on SCSI Computers</title>
<para>

<orderedlist>
<listitem><para>

As your computer starts, press the keys to enter the SCSI setup
utility.

</para><para>

You can start the SCSI setup utility after the memory check and
the message about how to start the BIOS utility displays when you
start your computer.

</para><para>

The keystrokes you need depend on the utility. Often, it is
<keycombo><keycap>Ctrl</keycap><keycap>F2</keycap></keycombo>.
However, consult your hardware documentation for the
exact keystrokes.

</para></listitem>
<listitem><para>

Find the utility for changing the boot order.

</para></listitem>
<listitem><para>

Set the utility so that the SCSI ID of the CD drive is first on
the list.

</para></listitem>
<listitem><para>

Save your changes. Instructions on the screen tell you how to
save the changes on your computer. Often, you must press
<keycap>F10</keycap>.

</para></listitem>
</orderedlist>

</para>
   </sect3>
  </sect2>

  <sect2 arch="i386">
  <title>Miscellaneous BIOS Settings</title>

   <sect3 id="cd-settings"><title>CD-ROM Settings</title>
<para>

Some BIOS systems (such as Award BIOS) allow you to automatically set
the CD speed.  You should avoid that, and instead set it to, say, the
lowest speed.  If you get <userinput>seek failed</userinput> error
messages, this may be your problem.

</para>
   </sect3>

   <sect3><title>Extended vs. Expanded Memory</title>
<para>

If your system provides both ex<emphasis>ten</emphasis>ded and
ex<emphasis>pan</emphasis>ded memory, set it so that there is as much
extended and as little expanded memory as possible. Linux requires
extended memory and cannot use expanded memory.

</para>
   </sect3>

   <sect3><title>Virus Protection</title>
<para>

Disable any virus-warning features your BIOS may provide. If you have
a virus-protection board or other special hardware, make sure it is
disabled or physically removed while running GNU/Linux. These aren't
compatible with GNU/Linux; moreover, due to the file system
permissions and protected memory of the Linux kernel, viruses are
almost unheard of.

<footnote>
<para>

After installation you can enable Boot Sector protection if you
want. This offers no additional security in Linux but if you also run
Windows it may prevent a catastrophe. There is no need to tamper with
the Master Boot Record (MBR) after the boot manager has been set up.

</para>
</footnote>

</para>
   </sect3>

   <sect3><title>Shadow RAM</title>
<para>

Your motherboard may provide <emphasis>shadow RAM</emphasis> or BIOS
caching. You may see settings for ``Video BIOS Shadow'', ``C800-CBFF
Shadow'', etc. <emphasis>Disable</emphasis> all shadow RAM.  Shadow
RAM is used to accelerate access to the ROMs on your motherboard and
on some of the controller cards. Linux does not use these ROMs once it
has booted because it provides its own faster 32-bit software in place
of the 16-bit programs in the ROMs. Disabling the shadow RAM may make
some of it available for programs to use as normal memory.  Leaving
the shadow RAM enabled may interfere with Linux access to hardware
devices.

</para>
   </sect3>

   <sect3><title>Memory Hole</title>
<para>

If your BIOS offers something like ``15-16 MB Memory Hole'', please
disable that. Linux expects to find memory there if you have that much
RAM.

</para><para>

We have a report of an Intel Endeavor motherboard on which there is an
option called ``LFB'' or ``Linear Frame Buffer''. This had two
settings: ``Disabled'' and ``1 Megabyte''. Set it to ``1 Megabyte''.
When disabled, the installation floppy was not read correctly, and the
system eventually crashed. At this writing we don't understand what's
going on with this particular device &mdash; it just worked with that
setting and not without it.

</para>
   </sect3>

<!-- no other platforms other than x86 provide this sort of thing, AFAIK -->

   <sect3><title>Advanced Power Management</title>
<para>

If your motherboard provides Advanced Power Management (APM),
configure it so that power management is controlled by APM. Disable
the doze, standby, suspend, nap, and sleep modes, and disable the hard
disk's power-down timer.  Linux can take over control of these modes,
and can do a better job of power-management than the BIOS.

</para>
   </sect3>
  </sect2>
<!--   End of file preparing/bios-setup/i386.xml -->

<!-- Start of file preparing/bios-setup/m68k.xml -->
<!-- $Id: m68k.xml 18722 2004-07-29 19:21:55Z smarenka $ -->


  <sect2 arch="m68k" id="firmware-revs">
  <title>Firmware Revisions and Existing OS Setup</title>

<para>

&arch-title; machines are generally self-configuring and do not require
firmware configuration.  However, you should make sure that you have
the appropriate ROM and system patches.  On the Macintosh, MacOS
version >= 7.1 is recommended because version 7.0.1 contains a bug in
the video drivers preventing the boot loader from deactivating the
video interrupts, resulting in a boot hang.  On the BVM VMEbus systems 
you should make sure you are using BVMBug revision G or higher boot ROMs.  
The BVMBug boot ROMs do not come as standard on the BVM systems but are 
available from BVM on request free of charge.

</para>

  </sect2>

<!--   End of file preparing/bios-setup/m68k.xml -->

<!-- Start of file preparing/bios-setup/powerpc.xml -->
<!-- $Id: powerpc.xml 24663 2004-12-31 18:38:22Z fjpop-guest $ -->


  <sect2 arch="powerpc" id="invoking-openfirmware">
  <title>Invoking OpenFirmware</title>
<para>

There is normally no need to set up the BIOS (called OpenFirmware) on
&arch-title; systems. PReP and CHRP are equipped with OpenFirmware,
but unfortunately, the means you use to invoke it vary from
manufacturer to manufacturer.  You'll have to consult the hardware
documentation which came with your machine.

</para><para>

On &arch-title; Macintoshes, you invoke OpenFirmware with
<keycombo><keycap>Command</keycap> <keycap>option</keycap>
<keycap>O</keycap> <keycap>F</keycap></keycombo> while booting.  Generally it
will check for these keystrokes after the chime, but the exact timing
varies from model to model.  See 
<ulink url="&url-netbsd-powerpc-faq;"></ulink> for more hints.

</para><para>

The OpenFirmware prompt looks like this:

<informalexample><screen>
ok
0 &gt;
</screen></informalexample>

Note that on older model &arch-title; Macs, the default and sometimes
hardwired I/O for OpenFirmware user interaction is through the serial
(modem) port. If you invoke OpenFirmware on one of these machines, you
will just see a black screen. In that case, a terminal program running
on another computer, connected to the modem port, is needed to
interact with OpenFirmware. 

</para><para>

The OpenFirmware on OldWorld Beige G3 machines, OF versions 2.0f1
and 2.4, is broken. These machines will most likely not be able to
boot from the hard drive unless the firmware is patched. A firmware
patch is included in the <application>System Disk 2.3.1</application> 
utility, available from Apple at 
<ulink url="ftp://ftp.apple.com/developer/macosxserver/utilities/SystemDisk2.3.1.smi.bin"></ulink>.
After unpacking the utility in MacOS, and launching it, select the
Save button to have the firmware patches installed to nvram.

</para>
  </sect2>
<!--   End of file preparing/bios-setup/powerpc.xml -->

<!-- Start of file preparing/bios-setup/sparc.xml -->
<!-- $Id: sparc.xml 24663 2004-12-31 18:38:22Z fjpop-guest $ -->


  <sect2 arch="sparc" id="invoking-openboot"><title>Invoking OpenBoot</title>

<para>

OpenBoot provides the basic functions needed to boot the &arch-title;
architecture.  This is rather similar in function to the BIOS in the
x86 architecture, although much nicer.  The Sun boot PROMs have a
built-in forth interpreter which lets you do quite a number of things
with your machine, such as diagnostics, simple scripts, etc.

</para><para>

To get to the boot prompt you need to hold down the
<keycap>Stop</keycap> key (on older type 4 keyboards, use the
<keycap>L1</keycap> key, if you have a PC keyboard adapter, use
the <keycap>Break</keycap> key) and press the
<keycap>A</keycap> key. The boot PROM will give you a prompt,
either <userinput>ok</userinput> or <userinput>&gt;</userinput>. It is
preferred to have the <userinput>ok</userinput> prompt. So if you get
the old style prompt, hit the <keycap>n</keycap> key to get the new
style prompt. 

</para><para>

If you are using a serial console, send a break to the machine. With Minicom,
use <keycap>Ctrl-A F</keycap>, with cu, hit <keycap>Enter</keycap>, then type
<userinput>%~break</userinput>. Consult the documentation of your terminal
emulator if you are using a different program.

</para>
  </sect2>

  <sect2 arch="sparc" id="boot-dev-select-sun">
  <title>Boot Device Selection</title>

<para>

You can use OpenBoot to boot from specific devices, and also to change
your default boot device.  However, you need to know some details
about how OpenBoot names devices; it's much different from Linux
device naming, described in <xref linkend="device-names"/>.
Also, the command will vary a bit, depending on what version of
OpenBoot you have.  More information about OpenBoot can be found in
the <ulink url="&url-openboot;">Sun OpenBoot Reference</ulink>.

</para><para>

Typically, with newer revisions, you can use OpenBoot device such as
``floppy'', ``cdrom'', ``net'', ``disk'', or ``disk2''.  These have
the obvious meanings; the ``net'' device is for booting from the
network.  Additionally, the device name can specify a particular
partition of a disk, such as ``disk2:a'' to boot disk2, first
partition.  Full OpenBoot device names have the form

<informalexample>
<screen>
<replaceable>driver-name</replaceable>@
<replaceable>unit-address</replaceable>:
<replaceable>device-arguments</replaceable>
</screen></informalexample>.

In older revisions of OpenBoot, device naming is a bit different: the
floppy device is called ``/fd'', and SCSI disk devices are of the form
``sd(<replaceable>controller</replaceable>,
<replaceable>disk-target-id</replaceable>,
<replaceable>disk-lun</replaceable>)''.  The command
<userinput>show-devs</userinput> in newer OpenBoot revisions is useful
for viewing the currently configured devices.  For full information,
whatever your revision, see the 
<ulink url="&url-openboot;">Sun OpenBoot Reference</ulink>.

</para><para>

To boot from a specific device, use the command <userinput>boot
<replaceable>device</replaceable></userinput>.  You can set this
behavior as the default using the <userinput>setenv</userinput>
command.  However, the name of the variable to set changed between
OpenBoot revisions.  In OpenBoot 1.x, use the command
<userinput>setenv boot-from
<replaceable>device</replaceable></userinput>.  In later revisions of
OpenBoot, use the command <userinput>setenv boot-device
<replaceable>device</replaceable></userinput>. Note, this is also
configurable using the <command>eeprom</command> command on Solaris,
or modifying the appropriate files in
<filename>/proc/openprom/options/</filename>, for example under Linux:

<informalexample><screen>
# echo disk1:1 &gt; /proc/openprom/options/boot-device
</screen></informalexample> 

and under Solaris:

<informalexample><screen>
eeprom boot-device=disk1:1
</screen></informalexample> 

</para>
  </sect2>
<!--   End of file preparing/bios-setup/sparc.xml -->

<!-- Start of file preparing/bios-setup/s390.xml -->
<!-- $Id: s390.xml 25496 2005-02-07 14:56:06Z fjpop-guest $ -->


  <sect2 arch="s390"><title>BIOS Setup</title>
<para>

In order to install &debian; on a &arch-title; or zSeries
machine you have first boot a kernel into the system.  The boot
mechanism of this platform is inherently different to other ones,
especially from PC-like systems: there are no floppy devices available
at all. You will notice another big difference while you work with
this platform: most (if not all) of the time you will work remote,
with the help of some client session software like telnet, or a
browser.  This is due to that special system architecture where the
3215/3270 console is line-based instead of character-based.

</para><para>

Linux on this platform runs either natively on the bare machine, in a
so-called LPAR (Logical Partition) or in a virtual machine supplied by
the VM system.  You can use a boot tape on all of those systems; you
may use some other boot media, too, but those may not be generally
available.  For example, you can use the virtual card reader of a
virtual machine, or boot from the HMC (Hardware Management Console) of
an LPAR if the HMC and this option is available for you.

</para><para>

Before you actually perform an installation, you have to go over some
design and preparation steps.  IBM has made documentation available
about the whole process, e.g. how to prepare an installation medium
and how actually boot from that medium.  Duplicating that information
here is neither possible nor necessary.  However, we will describe
here which kind of Debian-specific data is needed and where do you
find them.  Based on both sources of information you have to prepare
your machine and the installation medium and to perform a boot from
it.  When you see the welcome message in your client session join this
document again for the Debian-specific installation steps.

</para>
  </sect2>

  <sect2 arch="s390">
  <title>Native and LPAR installations</title>
<para>

Please refer to chapter 5 of the 
<ulink url="http://www.redbooks.ibm.com/pubs/pdfs/redbooks/sg244987.pdf">
Linux for &arch-title;</ulink> 
Redbook and chapter 3.2 of the 
<ulink url="http://www.redbooks.ibm.com/pubs/pdfs/redbooks/sg246264.pdf">
Linux for IBM eServer zSeries and &arch-title;: Distributions</ulink> 
Redbook on how to set up an LPAR for Linux.

</para>
  </sect2>

  <sect2 arch="s390">
  <title>Installation as a VM guest</title>

<para>

Please refer to chapter 6 of the 
<ulink url="http://www.redbooks.ibm.com/pubs/pdfs/redbooks/sg244987.pdf">
Linux for &arch-title;</ulink> 
Redbook and chapter 3.1 of the 
<ulink url="http://www.redbooks.ibm.com/pubs/pdfs/redbooks/sg246264.pdf">
Linux for IBM eServer zSeries and  &arch-title;: Distributions</ulink> 
Redbook on how to set up a VM guest for running Linux.

</para><para>

You need to copy all the files from the <filename>vmrdr</filename>
sub-directory to your CMS disk. Be sure to transfer
<filename>kernel.debian</filename> and
<filename>initrd.debian</filename> in binary mode with a fixed record
length of 80 characters.

</para>
  </sect2>

  <sect2 arch="s390">
  <title>Setting up an installation server</title>

<para>

If you don't have a connection to the Internet (either directly or via
a web proxy) you need to create a local installation server that can
be accessed from your S/390. This server keeps all the packages
you want to install and must make them available using NFS, HTTP or
FTP.

</para><para>

The installation server needs to copy the exact directory structure
from any &debian; mirror but of only the s390 and
architecture-independent files are required. You can also copy the
contents of all installation CDs into such a directory tree.

</para><para condition="FIXME">

<emphasis>FIXME: more information needed &mdash; from a Redbook?</emphasis>

</para>
  </sect2>
<!--   End of file preparing/bios-setup/s390.xml -->

  <sect2><title>Hardware Issues to Watch Out For</title>
<para arch="not-s390">

Many people have tried operating their 90 MHz CPU at 100 MHz, etc.  It
sometimes works, but is sensitive to temperature and other factors and
can actually damage your system. One of the authors of this document
over-clocked his own system for a year, and then the system started
aborting the <command>gcc</command> program with an unexpected signal
while it was compiling the operating system kernel. Turning the CPU
speed back down to its rated value solved the problem.

</para><para arch="not-s390">

The <command>gcc</command> compiler is often the first thing to die
from bad memory modules (or other hardware problems that change data
unpredictably) because it builds huge data structures that it
traverses repeatedly.  An error in these data structures will cause it
to execute an illegal instruction or access a non-existent
address. The symptom of this will be <command>gcc</command> dying from
an unexpected signal.

</para><para arch="m68k">

Atari TT RAM boards are notorious for RAM problems under Linux; if you
encounter any strange problems, try running at least the kernel in
ST-RAM.  Amiga users may need to exclude RAM using a booter memfile.

<phrase condition="FIXME"><emphasis>

FIXME: more description of this needed.

</emphasis></phrase>

</para><para arch="i386">

The very best motherboards support parity RAM and will actually tell
you if your system has a single-bit error in RAM. Unfortunately, they
don't have a way to fix the error, thus they generally crash
immediately after they tell you about the bad RAM. Still, it's better
to be told you have bad memory than to have it silently insert errors
in your data. Thus, the best systems have motherboards that support
parity and true-parity memory modules; see 
<xref linkend="Parity-RAM"/>.

</para><para arch="i386">

If you do have true-parity RAM and your motherboard can handle it, be
sure to enable any BIOS settings that cause the motherboard to
interrupt on memory parity errors.

</para>

   <sect3 arch="i386"><title>The Turbo Switch</title>
<para>

Many systems have a <emphasis>turbo</emphasis> switch that controls
the speed of the CPU.  Select the high-speed setting. If your BIOS
allows you to disable software control of the turbo switch (or
software control of CPU speed), do so and lock the system in
high-speed mode. We have one report that on a particular system, while
Linux is auto-probing (looking for hardware devices) it can
accidentally touch the software control for the turbo switch.

</para>
   </sect3>

   <sect3 arch="i386"><title>Cyrix CPUs and Floppy Disk Errors</title>
<para>

Many users of Cyrix CPUs have had to disable the cache in their
systems during installation, because the floppy disk has errors if
they do not.  If you have to do this, be sure to re-enable your cache
when you are finished with installation, as the system runs
<emphasis>much</emphasis> slower with the cache disabled.

</para><para>

We don't think this is necessarily the fault of the Cyrix CPU. It may
be something that Linux can work around. We'll continue to look into
the problem.  For the technically curious, we suspect a problem with
the cache being invalid after a switch from 16-bit to 32-bit code.

</para>
   </sect3>

   <sect3 arch="i386"><title>Peripheral Hardware Settings</title>
<para>

You may have to change some settings or jumpers on your computer's
peripheral cards.  Some cards have setup menus, while others rely on
jumpers.  This document cannot hope to provide complete information on
every hardware device; what it hopes to provide is useful tips.

</para><para>

If any cards provide ``mapped memory'', the memory should be mapped
somewhere between 0xA0000 and 0xFFFFF (from 640K to just below 1
megabyte) or at an address at least 1 megabyte greater than the total
amount of RAM in your system.

</para>
   </sect3>

   <sect3 arch="i386" id="usb-keyboard-config">
   <title>USB BIOS support and keyboards</title>
<para>

If you have no AT-style keyboard and only a USB model, you may need
to enable legacy AT keyboard emulation in your BIOS setup. Only do this if
the installation system fails to use your keyboard in USB mode. Conversely,
for some systems (especially laptops) you may need to disable legacy USB
support if your keyboard does not respond.
Consult your main board manual and look in the BIOS for "Legacy keyboard
emulation" or "USB keyboard support" options.

</para>
   </sect3>

   <sect3><title>More than 64 MB RAM</title>
<para>

The Linux Kernel cannot always detect what amount of RAM you have.  If
this is the case please look at <xref linkend="boot-parms"/>.

</para>
   </sect3>
  </sect2>
 </sect1>
<!--   End of file preparing/pre-install-bios-setup.xml -->

</chapter>
<!--   End of file preparing/preparing.xml -->
