# SOME DESCRIPTIVE TITLE.
# Copyright (C) YEAR Free Software Foundation, Inc.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2001-02-09 01:25+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: application/x-xml2pot; charset=UTF-8\n"
"Content-Transfer-Encoding: ENCODING\n"

#: post-install.xml:5
#, no-c-format
#. Tag: title
msgid "Next Steps and Where to Go From Here"
msgstr ""

#: post-install.xml:13
#, no-c-format
#. Tag: title
msgid "If You Are New to Unix"
msgstr ""

#: post-install.xml:14
#, no-c-format
#. Tag: para
msgid "If you are new to Unix, you probably should go out and buy some books and do some reading. The <ulink url=\"ftp://rtfm.mit.edu/pub/usenet/news.answers/unix-faq/faq/\"> Unix FAQ</ulink> contains a number of references to books and Usenet news groups which should help you out. You can also take a look at the <ulink url=\"http://www.camelcity.com/~noel/usenet/cuuf-FAQ.htm\"> User-Friendly Unix FAQ</ulink>."
msgstr ""

#: post-install.xml:25
#, no-c-format
#. Tag: para
msgid "Linux is an implementation of Unix. The <ulink url=\"http://www.tldp.org/\">Linux Documentation Project (LDP)</ulink> collects a number of HOWTOs and online books relating to Linux. Most of these documents can be installed locally; just install the <classname>doc-linux-html</classname> package (HTML versions) or the <classname>doc-linux-text</classname> package (ASCII versions), then look in <filename>/usr/share/doc/HOWTO</filename>. International versions of the LDP HOWTOs are also available as Debian packages."
msgstr ""

#: post-install.xml:46
#, no-c-format
#. Tag: title
msgid "Orienting Yourself to Debian"
msgstr ""

#: post-install.xml:47
#, no-c-format
#. Tag: para
msgid "Debian is a little different from other distributions. Even if you're familiar with Linux in other distributions, there are things you should know about Debian to help you to keep your system in a good, clean state. This chapter contains material to help you get oriented; it is not intended to be a tutorial for how to use Debian, but just a very brief glimpse of the system for the very rushed."
msgstr ""

#: post-install.xml:58
#, no-c-format
#. Tag: title
msgid "Debian Packaging System"
msgstr ""

#: post-install.xml:59
#, no-c-format
#. Tag: para
msgid "The most important concept to grasp is the Debian packaging system. In essence, large parts of your system should be considered under the control of the packaging system. These include: <itemizedlist> <listitem><para> <filename>/usr</filename> (excluding <filename>/usr/local</filename>) </para></listitem> <listitem><para> <filename>/var</filename> (you could make <filename>/var/local</filename> and be safe in there) </para></listitem> <listitem><para> <filename>/bin</filename> </para></listitem> <listitem><para> <filename>/sbin</filename> </para></listitem> <listitem><para> <filename>/lib</filename> </para></listitem> </itemizedlist> For instance, if you replace <filename>/usr/bin/perl</filename>, that will work, but then if you upgrade your <classname>perl</classname> package, the file you put there will be replaced. Experts can get around this by putting packages on ``hold'' in <command>aptitude</command>."
msgstr ""

#: post-install.xml:100
#, no-c-format
#. Tag: para
msgid "One of the best installation methods is apt. You can use the command line version <command>apt-get</command> or full-screen text version <application>aptitude</application>. Note apt will also let you merge main, contrib, and non-free so you can have export-restricted packages as well as standard versions."
msgstr ""

#: post-install.xml:111
#, no-c-format
#. Tag: title
msgid "Application Version Management"
msgstr ""

#: post-install.xml:112
#, no-c-format
#. Tag: para
msgid "Alternative versions of applications are managed by update-alternatives. If you are maintaining multiple versions of your applications, read the update-alternatives man page."
msgstr ""

#: post-install.xml:122
#, no-c-format
#. Tag: title
msgid "Cron Job Management"
msgstr ""

#: post-install.xml:123
#, no-c-format
#. Tag: para
msgid "Any jobs under the purview of the system administrator should be in <filename>/etc</filename>, since they are configuration files. If you have a root cron job for daily, weekly, or nightly runs, put them in <filename>/etc/cron.{daily,weekly,monthly}</filename>. These are invoked from <filename>/etc/crontab</filename>, and will run in alphabetic order, which serializes them."
msgstr ""

#: post-install.xml:132
#, no-c-format
#. Tag: para
msgid "On the other hand, if you have a cron job that (a) needs to run as a special user, or (b) needs to run at a special time or frequency, you can use either <filename>/etc/crontab</filename>, or, better yet, <filename>/etc/cron.d/whatever</filename>. These particular files also have an extra field that allows you to stipulate the user under which the cron job runs."
msgstr ""

#: post-install.xml:141
#, no-c-format
#. Tag: para
msgid "In either case, you just edit the files and cron will notice them automatically. There is no need to run a special command. For more information see cron(8), crontab(5), and <filename>/usr/share/doc/cron/README.Debian</filename>."
msgstr ""

#: post-install.xml:158
#, no-c-format
#. Tag: title
msgid "Reactivating DOS and Windows"
msgstr ""

#: post-install.xml:159
#, no-c-format
#. Tag: para
msgid "After installing the base system and writing to the <emphasis>Master Boot Record</emphasis>, you will be able to boot Linux, but probably nothing else. This depends what you have chosen during the installation. This chapter will describe how you can reactivate your old systems so that you can also boot your DOS or Windows again."
msgstr ""

#: post-install.xml:167
#, no-c-format
#. Tag: para
msgid "<command>LILO</command> is a boot manager with which you can also boot other operating systems than Linux, which complies to PC conventions. The boot manager is configured via <filename>/etc/lilo.conf</filename> file. Whenever you edited this file you have to run <command>lilo</command> afterwards. The reason for this is that the changes will take place only when you call the program."
msgstr ""

#: post-install.xml:177
#, no-c-format
#. Tag: para
msgid "Important parts of the <filename>lilo.conf</filename> file are the lines containing the <userinput>image</userinput> and <userinput>other</userinput> keywords, as well as the lines following those. They can be used to describe a system which can be booted by <command>LILO</command>. Such a system can include a kernel (<userinput>image</userinput>), a root partition, additional kernel parameters, etc. as well as a configuration to boot another, non-Linux (<userinput>other</userinput>) operating system. These keywords can also be used more than once. The ordering of these systems within the configuration file is important because it determines which system will be booted automatically after, for instance, a timeout (<userinput>delay</userinput>) presuming <command>LILO</command> wasn't stopped by pressing the <keycap>shift</keycap> key."
msgstr ""

#: post-install.xml:193
#, no-c-format
#. Tag: para
msgid ""
      "After a fresh install of Debian, just the current system is configured for booting with <command>LILO</command>. If you want to boot another Linux kernel, you have to edit the configuration file <filename>/etc/lilo.conf</filename> to add the following lines: <informalexample><screen>\n"
      "&additional-lilo-image;\n"
      "</screen></informalexample> For a basic setup just the first two lines are necessary. If you want to know more about the other two options please have a look at the <command>LILO</command> documentation. This can be found in <filename>/usr/share/doc/lilo/</filename>. The file which should be read is <filename>Manual.txt</filename>. To have a quicker start into the world of booting a system you can also look at the <command>LILO</command> man pages <filename>lilo.conf</filename> for an overview of configuration keywords and <filename>lilo</filename> for description of the installation of the new configuration into the boot sector."
msgstr ""

#: post-install.xml:213
#, no-c-format
#. Tag: para
msgid "Notice that there are other boot loaders available in &debian;, such as GRUB (in <classname>grub</classname> package), CHOS (in <classname>chos</classname> package), Extended-IPL (in <classname>extipl</classname> package), loadlin (in <classname>loadlin</classname> package) etc."
msgstr ""

#: post-install.xml:228
#, no-c-format
#. Tag: title
msgid "Further Reading and Information"
msgstr ""

#: post-install.xml:229
#, no-c-format
#. Tag: para
msgid "If you need information about a particular program, you should first try <userinput>man <replaceable>program</replaceable></userinput>, or <userinput>info <replaceable>program</replaceable></userinput>."
msgstr ""

#: post-install.xml:235
#, no-c-format
#. Tag: para
msgid "There is lots of useful documentation in <filename>/usr/share/doc</filename> as well. In particular, <filename>/usr/share/doc/HOWTO</filename> and <filename>/usr/share/doc/FAQ</filename> contain lots of interesting information. To submit bugs, look at <filename>/usr/share/doc/debian/bug*</filename>. To read about Debian-specific issues for particular programs, look at <filename>/usr/share/doc/(package name)/README.Debian</filename>."
msgstr ""

#: post-install.xml:246
#, no-c-format
#. Tag: para
msgid "The <ulink url=\"http://www.debian.org/\">Debian web site</ulink> contains a large quantity of documentation about Debian. In particular, see the <ulink url=\"http://www.debian.org/doc/FAQ/\">Debian FAQ</ulink> and the <ulink url=\"http://lists.debian.org/\">Debian Mailing List Archives</ulink>. The Debian community is self-supporting; to subscribe to one or more of the Debian mailing lists, see the <ulink url=\"http://www.debian.org/MailingLists/subscribe\"> Mail List Subscription</ulink> page."
msgstr ""

#: post-install.xml:259
#, no-c-format
#. Tag: para
msgid "A general source of information on GNU/Linux is the <ulink url=\"http://www.tldp.org/\">Linux Documentation Project</ulink>. There you will find the HOWTOs and pointers to other very valuable information on parts of a GNU/Linux system."
msgstr ""

#: post-install.xml:274
#, no-c-format
#. Tag: title
msgid "Compiling a New Kernel"
msgstr ""

#: post-install.xml:275
#, no-c-format
#. Tag: para
msgid "Why would someone want to compile a new kernel? It is often not necessary since the default kernel shipped with Debian handles most configurations. However, it is useful to compile a new kernel in order to:"
msgstr ""

#: post-install.xml:283
#, no-c-format
#. Tag: para
msgid "handle special hardware needs, or hardware conflicts with the pre-supplied kernels"
msgstr ""

#: post-install.xml:289
#, no-c-format
#. Tag: para
msgid "handle hardware or options not included in the stock kernel, such as APM or SMP"
msgstr ""

#: post-install.xml:295
#, no-c-format
#. Tag: para
msgid "optimize the kernel by removing useless drivers to speed up boot time"
msgstr ""

#: post-install.xml:301
#, no-c-format
#. Tag: para
msgid "use options of the kernel which are not supported by the default kernel (such as high memory support)"
msgstr ""

#: post-install.xml:307
#, no-c-format
#. Tag: para
msgid "run an updated or development kernel"
msgstr ""

#: post-install.xml:312
#, no-c-format
#. Tag: para
msgid "impress your friends, try new things"
msgstr ""

#: post-install.xml:321
#, no-c-format
#. Tag: title
msgid "Kernel Image Management"
msgstr ""

#: post-install.xml:322
#, no-c-format
#. Tag: para
msgid "Don't be afraid to try compiling the kernel. It's fun and profitable."
msgstr ""

#: post-install.xml:326
#, no-c-format
#. Tag: para
msgid "To compile a kernel the Debian way, you need some packages: <classname>kernel-package</classname>, <classname>kernel-source-&kernelversion;</classname> (the most recent version at the time of this writing), <classname>fakeroot</classname> and a few others which are probably already installed (see <filename>/usr/share/doc/kernel-package/README.gz</filename> for the complete list)."
msgstr ""

#: post-install.xml:336
#, no-c-format
#. Tag: para
msgid "This method will make a .deb of your kernel source, and, if you have non-standard modules, make a synchronized dependent .deb of those too. It's a better way to manage kernel images; <filename>/boot</filename> will hold the kernel, the System.map, and a log of the active config file for the build."
msgstr ""

#: post-install.xml:344
#, no-c-format
#. Tag: para
msgid "Note that you don't <emphasis>have</emphasis> to compile your kernel the <quote>Debian way</quote>; but we find that using the packaging system to manage your kernel is actually safer and easier. In fact, you can get your kernel sources right from Linus instead of <classname>kernel-source-&kernelversion;</classname>, yet still use the <classname>kernel-package</classname> compilation method."
msgstr ""

#: post-install.xml:353
#, no-c-format
#. Tag: para
msgid "Note that you'll find complete documentation on using <classname>kernel-package</classname> under <filename>/usr/share/doc/kernel-package</filename>. This section just contains a brief tutorial."
msgstr ""

#: post-install.xml:360
#, no-c-format
#. Tag: para
msgid "Hereafter, we'll assume you have free rein over your machine and will extract your kernel source to somewhere in your home directory<footnote> <para> There are other locations where you can extract kernel sources and build your custom kernel, but this is easiest as it does not require special permissions. </para> </footnote>. We'll also assume that your kernel version is &kernelversion;. Make sure you are in the directory to where you want to unpack the kernel sources, extract them using <userinput>tar xjf /usr/src/kernel-source-&kernelversion;.tar.bz2</userinput> and change to the directory <filename>kernel-source-&kernelversion;</filename> that will have been created."
msgstr ""

#: post-install.xml:380
#, no-c-format
#. Tag: para
msgid "Now, you can configure your kernel. Run <userinput>make xconfig</userinput> if X11 is installed, configured and being run; run <userinput>make menuconfig</userinput> otherwise (you'll need <classname>libncurses5-dev</classname> installed). Take the time to read the online help and choose carefully. When in doubt, it is typically better to include the device driver (the software which manages hardware peripherals, such as Ethernet cards, SCSI controllers, and so on) you are unsure about. Be careful: other options, not related to a specific hardware, should be left at the default value if you do not understand them. Do not forget to select <quote>Kernel module loader</quote> in <quote>Loadable module support</quote> (it is not selected by default). If not included, your Debian installation will experience problems."
msgstr ""

#: post-install.xml:395
#, no-c-format
#. Tag: para
msgid "Clean the source tree and reset the <classname>kernel-package</classname> parameters. To do that, do <userinput>make-kpkg clean</userinput>."
msgstr ""

#: post-install.xml:400
#, no-c-format
#. Tag: para
msgid "Now, compile the kernel: <userinput>fakeroot make-kpkg --revision=custom.1.0 kernel_image</userinput>. The version number of <quote>1.0</quote> can be changed at will; this is just a version number that you will use to track your kernel builds. Likewise, you can put any word you like in place of <quote>custom</quote> (e.g., a host name). Kernel compilation may take quite a while, depending on the power of your machine."
msgstr ""

#: post-install.xml:410
#, no-c-format
#. Tag: para
msgid "If you require PCMCIA support, you'll also need to install the <classname>pcmcia-source</classname> package. Unpack the gzipped tar file as root in the directory <filename>/usr/src</filename> (it's important that modules are found where they are expected to be found, namely, <filename>/usr/src/modules</filename>). Then, as root, do <userinput>make-kpkg modules_image</userinput>."
msgstr ""

#: post-install.xml:419
#, no-c-format
#. Tag: para
msgid "Once the compilation is complete, you can install your custom kernel like any package. As root, do <userinput>dpkg -i ../kernel-image-&kernelversion;-<replaceable>subarchitecture</replaceable>_custom.1.0_&architecture;.deb</userinput>. The <replaceable>subarchitecture</replaceable> part is an optional sub-architecture, <phrase arch=\"i386\"> such as <quote>i586</quote>, </phrase> depending on what kernel options you set. <userinput>dpkg -i kernel-image...</userinput> will install the kernel, along with some other nice supporting files. For instance, the <filename>System.map</filename> will be properly installed (helpful for debugging kernel problems), and <filename>/boot/config-&kernelversion;</filename> will be installed, containing your current configuration set. Your new <classname>kernel-image-&kernelversion;</classname> package is also clever enough to automatically use your platform's boot-loader to run an update on the booting, allowing you to boot without re-running the boot loader. If you have created a modules package, e.g., if you have PCMCIA, you'll need to install that package as well."
msgstr ""

#: post-install.xml:440
#, no-c-format
#. Tag: para
msgid "It is time to reboot the system: read carefully any warning that the above step may have produced, then <userinput>shutdown -r now</userinput>."
msgstr ""

#: post-install.xml:445
#, no-c-format
#. Tag: para
msgid "For more information on <classname>kernel-package</classname>, read the fine documentation in <filename>/usr/share/doc/kernel-package</filename>."
msgstr ""

