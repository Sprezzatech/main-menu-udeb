<?xml version="1.0" encoding="EUC-JP"?>
<!-- retain these comments for translator revision tracking -->
<!-- original version: 26932 -->

 <sect2 arch="alpha" id="alpha-firmware">
 <title>Alpha コンソールファームウェア</title>
<para>

<!--
Console firmware is stored in a flash ROM and started when an Alpha
system is powered up or reset.  There are two different console
specifications used on Alpha systems, and hence two classes of console
firmware available:
-->
コンソールファームウェアはフラッシュ ROM に収められており、
Alpha システムに電源が入ったときやリセットが行われたとき起動されます。
Alpha システムで用いられているコンソールの仕様には異なるものが 2 つあり、
コンソールファームウェアとしても以下の 2 種類が利用できます。

</para>

<itemizedlist>
<listitem><para>

<!--
  <emphasis>SRM console</emphasis>, based on the Alpha Console Subsystem
  specification, which provides an operating environment for OpenVMS, Tru64
  UNIX, and Linux operating systems.
-->
  <emphasis>SRM コンソール</emphasis>は、
  Alpha コンソールサブシステム仕様に基づいたもので、
  OpenVMS、Tru64 UNIX、Linux といった OS 用の
  動作環境を提供します。

</para></listitem>
<listitem><para>

<!--
  <emphasis>ARC, AlphaBIOS, or ARCSBIOS console</emphasis>, based on the
  Advanced RISC Computing (ARC) specification, which provides an operating
  environment for Windows NT.
-->
  <emphasis>ARC, AlphaBIOS, ARCSBIOS コンソール</emphasis>は、
  Advanced RISC Computing (ARC) コンソールサブシステム仕様に基づいたもので、
  Windows NT 用の動作環境を提供します。

</para></listitem>
</itemizedlist>

<para>

<!--
From the user's perspective, the most important difference between SRM
and ARC is that the choice of console constrains the possible
disk-partitioning scheme for the hard disk which you wish to boot off
of.
-->
ユーザから見た SRM と ARC の最も重要な相違点は、
選択するコンソールによって、
起動可能なディスクパーティション構造が異なってくる点です。

</para><para>

<!--
ARC requires that you use an MS-DOS partition table (as created by
<command>cfdisk</command>) for the boot disk.  Therefore MS-DOS partition
tables are the ``native'' partition format when booting from ARC.  In
fact, since AlphaBIOS contains a disk partitioning utility, you may
prefer to partition your disks from the firmware menus before
installing Linux.
-->
ARC では、起動ディスクには (<command>cfdisk</command> などで作成した)
MS-DOS パーティションテーブルを使わなければなりません。
そのため ARC から起動する場合は、MS-DOS パーティションテーブルが
「ネイティブ」なパーティションフォーマットになります。
実際 AlphaBIOS にはディスクパーティションユーティリティが含まれているので、
Linux をインストールする前に、ファームウェアのメニューから
ディスクのパーティションを作成するといいかも知れません。

</para><para>

<!--
Conversely, SRM is <emphasis>incompatible</emphasis> with MS-DOS partition tables.
<footnote><para>Specifically, the bootsector format required by the Console
Subsystem Specification conflicts with the placement of the DOS
partition table.</para></footnote> Since Tru64 Unix uses the BSD disklabel format,
this is the ``native'' partition format for SRM installations.
-->
逆に、SRM は MS-DOS パーティションテーブルとは<emphasis>非互換</emphasis>です。
<footnote><para>
特に、コンソールサブシステム仕様が要求するブートセクタの
フォーマットは、DOS パーティションテーブルの場所と衝突します。
</para></footnote>
Tru64 Unix は BSD ディスクラベルフォーマットを利用するので、
SRM をインストールする場合はこちらが
「ネイティブ」なパーティションフォーマットとなります。

</para><para>

<!--
GNU/Linux is the only operating system on Alpha that can be booted from
both console types, but &debian; &release; only supports booting on
SRM-based systems.  If you have an Alpha for which no version of SRM is
available, if you will be dual-booting the system with Windows NT, or if
your boot device requires ARC console support for BIOS initialization,
you will not be able to use the &debian; &release; installer.  You can
still run &debian; &release; on such systems by using other install
media; for instance, you can install Debian woody with MILO and upgrade.
-->
GNU/Linux は、いずれのコンソールからも起動できる
唯一の Alpha 用オペレーティングシステムですが、
&debian; &release; は SRM ベースシステムでの起動のみをサポートしています。
SRM が有効でないバージョンの Alpha をお持ちの場合や、
Windows NT とのデュアルブートにしたい場合、
起動デバイスが BIOS の初期化に ARC コンソールを必要とする場合の時には、
&debian; &release; インストーラを使用できません。
そのようなシステムでは 他のインストールメディアを使用して、
&debian; &release; を実行できます。
(例えば、Debian woody を MILO でインストールし、アップグレードする)

</para><para>

<!--
Because <command>MILO</command> is not available for any of the Alpha
systems currently in production (as of February 2000), and because it
is no longer necessary to buy an OpenVMS or Tru64 Unix license to have
SRM firmware on your older Alpha, it is recommended that you use SRM
when possible.
-->
<command>MILO</command> が、
現在生産中 (2000年2月現在) の Alpha システムでどれにも利用できず、
古い Alpha 用に (SRM ファームウェアを持つ) OpenVMS や 
Tru64 Unix ライセンスをもう購入する必要がないため、
可能であれば、SRM を使用することをお奨めします。

</para><para>

<!--
The following table summarizes available and supported system
type/console combinations (see <xref linkend="alpha-cpus"/> for the
system type names).  The word `ARC' below denotes any of the
ARC-compliant consoles.
-->
以下の表は、利用可能かつサポートされている
システムおよびコンソールの組合せをまとめたものです
(機種名については <xref linkend="alpha-cpus"/> をご覧ください)。
以下に示されている `ARC' という単語は、
ARC 互換な任意のコンソールを指しています。

</para><para>

<informaltable><tgroup cols="2">
<thead>
<row>
  <entry>システムの種類</entry>
  <entry>サポートするコンソール</entry>
</row>
</thead>

<tbody>
<row>
  <entry>alcor</entry>
  <entry>ARC か SRM</entry>
</row><row>
  <entry>avanti</entry>
  <entry>ARC か SRM</entry>
</row><row>
  <entry>book1</entry>
  <entry>SRM のみ</entry>
</row><row>
  <entry>cabriolet</entry>
  <entry>ARC か SRM</entry>
</row><row>
  <entry>dp264</entry>
  <entry>SRM のみ</entry>
</row><row>
  <entry>eb164</entry>
  <entry>ARC か SRM</entry>
</row><row>
  <entry>eb64p</entry>
  <entry>ARC か SRM</entry>
</row><row>
  <entry>eb66</entry>
  <entry>ARC か SRM</entry>
</row><row>
  <entry>eb66p</entry>
  <entry>ARC か SRM</entry>
</row><row>
  <entry>jensen</entry>
  <entry>SRM のみ</entry>
</row><row>
  <entry>lx164</entry>
  <entry>ARC か SRM</entry>
</row><row>
  <entry>miata</entry>
  <entry>ARC か SRM</entry>
</row><row>
  <entry>mikasa</entry>
  <entry>ARC か SRM</entry>
</row><row>
  <entry>mikasa-p</entry>
  <entry>SRM のみ</entry>
</row><row>
  <entry>nautilus</entry>
  <entry>ARC (マザーボードのマニュアル参照) か SRM</entry>
</row><row>
  <entry>noname</entry>
  <entry>ARC か SRM</entry>
</row><row>
  <entry>noritake</entry>
  <entry>SRM のみ</entry>
</row><row>
  <entry>noritake-p</entry>
  <entry>SRM のみ</entry>
</row><row>
  <entry>pc164</entry>
  <entry>ARC か SRM</entry>
</row><row>
  <entry>rawhide</entry>
  <entry>SRM のみ</entry>
</row><row>
  <entry>ruffian</entry>
  <entry>ARC のみ</entry>
</row><row>
  <entry>sable</entry>
  <entry>SRM のみ</entry>
</row><row>
  <entry>sable-g</entry>
  <entry>SRM のみ</entry>
</row><row>
  <entry>sx164</entry>
  <entry>ARC か SRM</entry>
</row><row>
  <entry>takara</entry>
  <entry>ARC か SRM</entry>
</row><row>
  <entry>xl</entry>
  <entry>ARC のみ</entry>
</row><row>
  <entry>xlt</entry>
  <entry>ARC のみ</entry>
</row>

</tbody>
</tgroup>
</informaltable>

</para><para>

<!--
Generally, none of these consoles can boot Linux directly, so the
assistance of an intermediary bootloader is required.  For the SRM
console, <command>aboot</command>, a small, platform-independent
bootloader, is used.  See the (unfortunately outdated) <ulink
url="&url-srm-howto;">SRM HOWTO</ulink> for more information on
<command>aboot</command>.
-->
一般に Linux を直接起動できるコンソールはありませんので、
中間に挟まるブートローダの補助が必要になります。
SRM コンソールでは、<command>aboot</command> 
(小さくプラットフォームに依存しないブートローダ) を使います。
<command>aboot</command> についての詳細は、
(残念ながら古くなっていますが) <ulink url="&url-srm-howto;">SRM HOWTO</ulink> 
をご覧ください。

</para><para condition="FIXME">

<!--
The following paragraphs are from the woody install manual, and are
included here for reference; they may be useful to someone at a later
date when Debian supports MILO-based installs again.
-->
以下の段落は woody インストールマニュアルから、参考のために収録しています。
後日、MILO ベースのインストールが再度サポートされたときに有用かもしれません。

</para><para condition="FIXME">

<!--
Generally, none of these consoles can boot Linux directly, so the
assistance of an intermediary bootloader is required.  There are two
mainstream Linux loaders: <command>MILO</command> and <command>aboot</command>.
-->
一般に Linux を直接起動できるコンソールはありませんので、
中間に挟まるブートローダの補助が必要になります。
主な Linux ローダには <command>MILO</command> と <command>aboot</command>
の 2 つがあります。


</para><para condition="FIXME">

<!--
<command>MILO</command> is itself a console, which replaces ARC or SRM in
memory.  <command>MILO</command> can be booted from both ARC and SRM and is
the only way to bootstrap Linux from the ARC console.
<command>MILO</command> is platform-specific (a different <command>MILO</command>
is needed for each system type) and exist only for those systems, for
which ARC support is shown in the table above.  See also the
(unfortunately outdated) 
<ulink url="&url-milo-howto;">MILO HOWTO</ulink>.
-->
<command>MILO</command> はそれ自身がコンソールであり、
メモリ上で ARC や SRM に置き換わります。
<command>MILO</command> は ARC と SRM のどちらからでも起動でき、
ARC コンソールから Linux を起動する唯一の方法でもあります。
<command>MILO</command> はプラットフォームに依存し
(それぞれのシステムに応じて異なる <command>MILO</command> が必要になります)、
上記の表で ARC がサポートされているシステム向けのものしか存在しません。
(残念ながら古くなっていますが) <ulink url="&url-milo-howto;">MILO HOWTO</ulink>
もご覧ください。

</para><para condition="FIXME">

<!--
<command>aboot</command> is a small, platform-independent bootloader, which
runs from SRM only.  See the (also unfortunately outdated) <ulink
url="&url-srm-howto;">SRM HOWTO</ulink> for more information on
<command>aboot</command>.
-->
<command>aboot</command> は小さな、プラットフォームに依存しないブートローダです。
こちらは SRM からのみ動作します。
<command>aboot</command> に関するより詳しい情報については、
(これも残念なことに古くなっていますが)
<ulink url="&url-srm-howto;">SRM HOWTO</ulink>
をご覧ください。

</para><para condition="FIXME">

<!--
Thus, three scenarios are generally possible, depending on the
system's console firmware and whether or not <command>MILO</command> is
available:
-->
まとめると、
システムのコンソールファームウェアによって、
また <command>MILO</command> が利用できるかどうかによって、
一般に以下の 3 つの方法があります。

<informalexample><screen>
SRM -&gt; aboot
SRM -&gt; MILO
ARC -&gt; MILO
</screen></informalexample>

<!--
Because <command>MILO</command> is not available for any of the Alpha
systems currently in production (as of February 2000), and because it
is no longer necessary to buy an OpenVMS or Tru64 Unix license to have
SRM firmware on your older Alpha, it is recommended that you use SRM and
<command>aboot</command> on new installations of GNU/Linux, unless you wish
to dual-boot with Windows NT.
-->
<command>MILO</command> は現行 (2000 年 2 月現在)
の Alpha システムのすべてで利用できるわけではありませんし、
古い Alpha に SRM ファームウェアを用意する際に
OpenVMS や Tru64 Unix のライセンスを購入する必要も現在はありませんから、
GNU/Linux を新たにインストールするにあたっては、
SRM と <command>aboot</command> の利用をお勧めします
(ただし Windows NT とのデュアルブートが必要ない場合)。

</para><para>

<!--
The majority of AlphaServers and all current server and workstation
products contain both SRM and AlphaBIOS in their firmware.  For
"half-flash" machines such as the various evaluation boards, it is
possible to switch from one version to another by reflashing the
firmware.  Also, once SRM is installed, it is possible to run
ARC/AlphaBIOS from a floppy disk (using the <command>arc</command>
command).  For the reasons mentioned above, we recommend switching to
SRM before installing &debian;.
-->
大部分の AlphaServer や、
現行のサーバ・ワークステーション製品のすべてには、
ファームウェアに SRM と AlphaBIOS の両方が含まれています。
各種の拡張ボードのような、"half-flash" なマシンならば、
ファームウェアを更新して、
別のファームウェアに切り替えることもできます。
また、一度 SRM をインストールすれば、
フロッピーディスクから ARC/AlphaBIOS を実行することができます
(<command>arc</command> コマンドを使います)。
上述の理由から、&debian; のインストールのまえに、
SRM へと切り替えることをお勧めします。

</para><para>

<!--
As on other architectures, you should install the newest available
revision of the firmware <footnote><para>Except on Jensen, where
Linux is not supported on firmware versions newer than 1.7 &mdash; see
<ulink url="&url-jensen-howto;"></ulink> for more
information</para></footnote> before installing &debian;.  For
Alpha, firmware updates can be obtained from 
<ulink url="&url-alpha-firmware;">Alpha Firmware Updates</ulink>.
-->
他のアーキテクチャの場合と同様、&debian; をインストールする前に、
入手できる限りの最新のファームウェア
<footnote><para>ただし Jensen は例外で、
バージョン 1.7 以降のファームウェアでは
Linux がサポートされていません。
詳しくは <ulink url="&url-jensen-howto;"></ulink> をご覧ください。
</para></footnote> 
をインストールしてください。
Alpha の最新ファームウェアは
<ulink url="&url-alpha-firmware;">Alpha Firmware Updates</ulink>
から入手できます。

</para>
 </sect2>


  <sect2 arch="alpha"><title>TFTP での起動</title>
<para>

<!--
In SRM, Ethernet interfaces are named with the <userinput>ewa</userinput>
prefix, and will be listed in the output of the <userinput>show dev</userinput> command,
like this (edited slightly):
-->
SRM では、イーサネットインターフェースには
<userinput>ewa</userinput> という文字列からはじまる名前がつけられていて、
<userinput>show dev</userinput> コマンドを使うと以下のようにリスト表示されます
(多少、編集しています):

<informalexample><screen>
&gt;&gt;&gt; show dev
ewa0.0.0.9.0               EWA0              08-00-2B-86-98-65
ewb0.0.0.11.0              EWB0              08-00-2B-86-98-54
ewc0.0.0.2002.0            EWC0              00-06-2B-01-32-B0
</screen></informalexample>

<!--
You first need to set the boot protocol:
-->
まず、ブートプロトコルを設定します。

<informalexample><screen>
&gt;&gt;&gt; set ewa0_protocol bootp
</screen></informalexample>

<!--
Then check the medium type is correct:
-->
次にメディアのタイプが正しいかどうか確認します。

<informalexample><screen>
&gt;&gt;&gt; set ewa0_mode <replaceable>mode</replaceable>
</screen></informalexample>

<!--
You can get a listing of valid modes with <userinput>&gt;&gt;&gt;set ewa0_mode</userinput>.
-->
妥当なモードの一覧は <userinput>&gt;&gt;&gt;set ewa0_mode</userinput> 
で取得できます。

</para><para>

<!--
Then, to boot from the first Ethernet interface, you would type:
-->
確認できたら、次のように入力すれば 1 番目の
イーサネットインターフェースから起動できます。

<informalexample><screen>
&gt;&gt;&gt; boot ewa0 -flags ""
</screen></informalexample>

<!--
This will boot using the default kernel parameters as included in the
netboot image.
-->
これは netboot イメージに含まれているカーネルを、
デフォルトのカーネルパラメータで起動します。

</para><para>

<!--
If you wish to use a serial console, you <emphasis>must</emphasis>
pass the <userinput>console=</userinput> parameter to the kernel.
This can be done using the <userinput>-flags</userinput> argument to
the SRM <userinput>boot</userinput> command.  The serial ports are
named the same as their corresponding files in
<userinput>/dev</userinput>.  Also, when specifying additional kernel
parameters, you must repeat certain default options that are needed by
the &d-i; images.  For example, to boot from <userinput>ewa0</userinput>
and use a console on the first serial port, you would type: 
-->
シリアルコンソールを使いたい場合は、カーネルに <userinput>console=</userinput> 
パラメータを渡さなければ<emphasis>なりません</emphasis>。
これには SRM の <userinput>boot</userinput> コマンドで 
<userinput>-flags</userinput> 引数を使います。
シリアルポートの名前は、
<userinput>/dev</userinput> 以下に置かれているファイルのものと同じです。
また、追加のカーネルパラメータを指定するときには、
&d-i; イメージに必要なデフォルトオプションを必ず繰り返さなければなりません。
例えば <userinput>ewa0</userinput> から起動し、
1 番目のシリアルポートからコンソールを利用するには、
以下のように入力します。

<informalexample><screen>
&gt;&gt;&gt; boot ewa0 -flags &quot;root=/dev/ram ramdisk_size=16384 console=ttyS0&quot;
</screen></informalexample>

</para>
  </sect2>

  <sect2 arch="alpha"><title>SRM コンソールでの CD-ROM からの起動</title>
<para>

<!--
Type
-->
以下のように入力してください。

<informalexample><screen>
&gt;&gt;&gt; boot xxxx -flags 0
</screen></informalexample>

<!--
where <replaceable>xxxx</replaceable> is your CD-ROM drive in SRM notation.
-->
ここで <replaceable>xxxx</replaceable> には、
SRM における CD-ROM ドライブの呼び名を入れます。

</para>
  </sect2>

  <sect2 arch="alpha" condition="FIXME">
  <title>ARC コンソールや AlphaBIOS コンソールでの CD-ROM からの起動</title>
<para>

<!--
To boot a CD-ROM from the ARC console, find your sub-architecture code
name (see <xref linkend="alpha-cpus"/>), then enter
<filename>\milo\linload.exe</filename> as the boot loader and
<filename>\milo\<replaceable>subarch</replaceable></filename> (where
<replaceable>subarch</replaceable> is the proper subarchitecture name)
as the OS Path in the `OS Selection Setup' menu. Ruffians make an
exception: You need to use <filename>\milo\ldmilo.exe</filename> as
boot loader.
-->
ARC コンソールで CD-ROM から起動するには、
まずサブアーキテクチャのコード名を探します
(<xref linkend="alpha-cpus"/> を参照)。
見つかったら `OS Selection Setup' メニューの
ブートローダに <filename>\milo\linload.exe</filename> を入力し、OS Path に 
<filename>\milo\<replaceable>subarch</replaceable></filename> を入力します
(<replaceable>subarch</replaceable> にはサブアーキテクチャの名前を入れます)。
Ruffians は例外で、ブートローダに
<filename>\milo\ldmilo.exe</filename> を用いる必要があります。

</para>
  </sect2>


  <sect2 arch="alpha" condition="supports-floppy-boot">
  <title>SRM コンソールでのフロッピーからの起動</title>
<para>

<!--
At the SRM prompt (<prompt>&gt;&gt;&gt;</prompt>), issue the following
command:
-->
SRM プロンプト (<prompt>&gt;&gt;&gt;</prompt>) で、
以下のコマンドを実行してください。

<informalexample><screen>
&gt;&gt;&gt; boot dva0 -flags 0
</screen></informalexample>

<!--
possibly replacing <filename>dva0</filename> with the actual device
name.  Usually, <filename>dva0</filename> is the floppy; type
-->
場合によっては <filename>dva0</filename> を、
実際のデバイス名に置き換えてください。
通常 <filename>dva0</filename> がフロッピーです。

<informalexample><screen>
&gt;&gt;&gt; show dev
</screen></informalexample>

<!--
to see the list of devices (e.g., if you want to boot from a CD).
Note that if you are booting via MILO, <command>-flags</command> argument
is ignored, so you can just type <command>boot dva0</command>.
If everything works OK, you will eventually see the Linux kernel boot.
-->
と入力すれば、デバイスの一覧を見ることができます
(例えば CD から起動したい場合など)。
MILO から起動する場合、
<command>-flags</command> 引数は無視されてしまいますので、
単に <command>boot dva0</command> と入力すれば結構です。
すべてが順調に動作したら、Linux カーネルの起動を確認できると思います。

</para><para>

<!--
If you want to specify kernel parameters when booting via
<command>aboot</command>, use the following command:
-->
<command>aboot</command> から起動する場合に、
カーネルパラメータを指定したければ、
以下のコマンドを用いてください (1 行で入力してください)。

<informalexample><screen>
&gt;&gt;&gt; boot dva0 -file linux.bin.gz -flags "root=/dev/fd0 load_ramdisk=1 arguments"
</screen></informalexample>

<!--
(typed on one line), substituting, if necessary, the actual SRM boot
device name for <filename>dva0</filename>, the Linux boot device name for
<filename>fd0</filename>, and the desired kernel parameters for
<filename>arguments</filename>.
-->
必要なら、
<filename>dva0</filename> となっている SRM でのブートデバイス名や、
<filename>fd0</filename> となっている Linux でのブートデバイス名などを置き換えたり、
<filename>arguments</filename> の箇所にお望みのカーネル引数を指定してください。

</para><para>

<!--
If you want to specify kernel parameters when booting via
<command>MILO</command>, you will have to interrupt bootstrap once you get
into MILO.  See <xref linkend="booting-from-milo"/>.
-->
<command>MILO</command> から起動する場合に、
カーネルパラメータを指定したければ、
MILO に入ったところで一度ブートストラップを中断する必要があります。
<xref linkend="booting-from-milo"/> を参照してください。

</para>
  </sect2>


  <sect2 arch="alpha" condition="supports-floppy-boot">
  <title>ARC コンソールや AlphaBIOS コンソールでのフロッピーからの起動</title>

<para>

<!--
In the OS Selection menu, set <command>linload.exe</command> as the boot
loader, and <command>milo</command> as the OS Path.  Bootstrap using the
newly created entry.
-->
OS 選択メニューで、ブートローダに <command>linload.exe</command> を、
OS Path に <command>milo</command> を指定してください。
この新しく作成したエントリで起動してください。

</para>
  </sect2>

 <sect2 arch="alpha" condition="FIXME" id="booting-from-milo"><title>MILO による起動</title>
<para>

<!--
MILO contained on the bootstrap media is configured to proceed straight
to Linux automatically.  Should you wish to intervene, all you need is to
press space during MILO countdown.
-->
ブートストラップメディアに含まれている MILO は、
そのまま Linux を自動的に起動するように設定されています。
これを中断したい場合は、
MILO のカウントダウンの間にスペースキーを押します。

</para><para>

<!--
If you want to specify all the bits explicitly (for example, to supply
additional parameters), you can use a command like this:
-->
いろいろな内容を直接指定したい場合
(例えばパラメータの追加など) には、
次のようなコマンドが使えます。

<informalexample><screen>
MILO> boot fd0:linux.bin.gz root=/dev/fd0 load_ramdisk=1 <!-- arguments -->
</screen></informalexample>

<!--
If you are booting from something other than a floppy, substitute
<filename>fd0</filename> in the above example with the appropriate device name
in Linux notation.  The <command>help</command> command would give you a brief
MILO command reference.
-->
フロッピー以外のメディアから起動する場合は、
上記の例にある <filename>fd0</filename> の箇所を、
Linux での適切なデバイス名に変更してください。
<command>help</command> コマンドを使えば、
MILO の簡単なコマンドリファレンスを参照できます。

</para>
 </sect2>
