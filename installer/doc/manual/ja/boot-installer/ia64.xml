<?xml version="1.0" encoding="EUC-JP"?>
<!-- retain these comments for translator revision tracking -->
<!-- original version: 18660 -->

  <sect2 arch="ia64"><title>CD-ROM からの起動</title>

&boot-installer-intro-cd.xml;

  <note>
  <title>CD の内容</title>

<para>
<!--
There are three basic variations of Debian Install CDs.
The <emphasis>Business Card</emphasis> CD has a minimal installation
that will fit on the small form factor CD media.
It requires a network connection in order to install the rest of the
base installation and make a usable system.
The <emphasis>Network Install</emphasis> CD has all of the packages
for a base install but requires a network connection to a Debian
mirror site in order to install the
extra packages one would want for a complete system .
The set of Debian CDs can install a complete system from the wide
range of packages without needing access to the network.
-->
基本的な Debian インストール CD が 3 種類あります。
<emphasis>Business Card</emphasis> CD は、小さいフォームファクタの 
CD メディアに合うような最小インストールを持っています。
それは基本インストールの残りをインストールし、
使用可能なシステムを作るためにネットワーク接続が必要です。
<emphasis>Network Install</emphasis> CD は、
基本インストールのパッケージをすべて持っていますが、
完全なシステムが欲しい場合は、特別パッケージをインストールするのに 
Debian ミラーサイトへのネットワーク接続が必要です。
Debian CD セットは、ネットワークへのアクセスを必要とせずに、
広範囲のパッケージから完全なシステムをインストールできます。

</para>
  </note>

<para>

<!--
The IA-64 uses the next generation Extensible Firmware Interface (EFI)
from Intel.
Unlike the traditional x86 BIOS which knows little about the boot
device other than the partition table and Master Boot Record (MBR),
the EFI can read and write files from FAT16 or FAT32 formatted disk
partitions.
This simplifies the often arcane process of starting a system.
The system boot loader and the EFI firmware that supports it have
a full filesystem to store the files necessary for booting the
machine.
This means that the system disk on an IA-64 system has an additional
disk partition dedicated to the EFI instead of the simple MBR or boot
block on more conventional systems. 
-->
IA-64 では、Intel の Extensible Firmware Interface (EFI) を使用しています。
パーティションテーブルやマスターブートレコード (MBR) 以外に起動デバイスのことを
ほとんど知らない従来の x86 BIOS と異なり、
EFI は FAT16 や FAT32 でフォーマットしたディスクパーティションから、
ファイルを読み書きすることができます。
これは、しばしば不可解なシステムの起動プロセスを単純にします。
システムブートローダーやそれをサポートする EFI ファームウェアは、
機械を起動することに必要なファイルを格納するためには十分な、
ファイルシステムを持っています。
これは、IA-64 システム上のシステムディスクは、
(従来のシステムの単純な MBR やブートブロックに代わる) EFI 専用の
追加ディスクパーティションを持つことを意味します。

</para><para>

<!--
The Debian CD contains a small version of the EFI partition where
<command>elilo</command>, its configuration file, the installer's kernel,
 and initial filesystem (initrd) are located.
The running system also contains an EFI partition where the necessary
files for booting the system reside.
These files are readable from the EFI Shell as described below.
-->
Debian CD には、<command>elilo</command> やその設定ファイル、
インストーラーのカーネルや初期ファイルシステム (initrd) が存在する、
小さな EFI パーティションを含んでいます。
稼働中のシステムは、システムを起動するのに必要なファイルが存在する、
EFI パーティションを含んでいます。
これらのファイルは下に記述したように EFI シェルから読むことができます。

</para><para>

<!--
Most of the details of how the <command>elilo</command> actually loads and
starts a system for the most part transparent to the system installer.
However, the installer must set up an EFI partition prior to installing
the base system.  Otherwise, the installation of <command>elilo</command>
will fail, rendering the system un-bootable.
The EFI partition is allocated and formatted in the partitioning step
of the installation prior to loading any packages on the system disk.
The partitioning task also verifies that a suitable EFI partition is
present before allowing the installation to proceed.
-->
システムインストーラに透過的な部分の大半は、
ほとんどがどのように <command>elilo</command> が実際にロードし、
システムを起動するかといったものの詳細です。
しかしインストーラは、基本システムをインストールするに先立ち、
EFI パーティションをセットアップする必要があります。
そうでなければ、<command>elilo</command>のインストールが失敗し、
システムが起動不可能になります。
EFI パーティションは、システムディスクにパッケージをロードする前に、
インストーラのパーティション分割時に割当・フォーマットが行われます。
さらにパーティション分割タスクでは、インストールプロセスが先に進む前に、
適切な EFI パーティションが存在していることを確認します。

</para>

  <sect3 arch="ia64" id="boot-from-cd">
  <title>EFI シェルからの起動</title>
<para>

<!--
The EFI Boot Manager is started as the last step of the firmware
initialization.
It displays a menu list from which the user can select
an option.
Depending on the model of system and what other software has been
loaded on the system, this menu may be different from one system
to another.
In any event, there should be one option called
<command>EFI Shell [Built-in]</command>.
Boot the Debian Installer CD with the following steps:
-->
ファームウェアの最終ステップとして、EFI Boot Manager が起動されます。
ここでは、オプションを選択できるようにメニューリストが表示されます。 
システムの型番や、システムに他のソフトウェアが読み込まれるかによりますが、
このメニューは他のシステムとは異なっているかもしれません。
どんな場合でも、
<command>EFI Shell [Built-in]</command> というオプションがあるはずです。
以下のようにして Debian インストーラ CD を起動してください。

</para>

<itemizedlist>

<listitem><para>
<!--
Insert the CD in the DVD/CD drive.
-->
DVD/CD ドライブに CD を挿入する。
</para></listitem>

<listitem><para>
<!--
Select <command>EFI Shell</command> from the menu.
The EFI Shell will read all of the bootable devices and display
them to the console before displaying its command prompt.
The recognized bootable partitions on devices will show a device name of
<filename>fs<emphasis>n</emphasis>:</filename>.
All other recognized partitions will be named
<filename>blk<emphasis>n</emphasis>:</filename>.
If you inserted the CD just before entering the shell, this may
take a few extra seconds as it initializes the CD drive.
-->
メニューより <command>EFI Shell</command> を選択する。
EFI シェルは起動可能なデバイスをすべて読むことができ、
コマンドプロンプトを表示する前そのデバイスをにコンソールに表示する。
認識したそのデバイスの起動可能パーティションは、
<filename>fs<emphasis>n</emphasis>:</filename>
というデバイス名で表し、
その他の認識したパーティションは、
<filename>blk<emphasis>n</emphasis>:</filename>
と表す。
シェルが起動する前に CD を挿入した場合、
CD ドライブを初期化するのに数秒よけいにかかる可能性がある。
</para>
</listitem>

<listitem><para>
<!--
Examine the output from the shell looking for the CDROM drive.
It is most likely the <filename>fs0:</filename> device although
other devices with bootable partitions will also show up as
<filename>fs<emphasis>n</emphasis></filename>.
-->
CDROM ドライブを探すシェルからの出力を検討する。
<filename>fs0:</filename> デバイスとなる可能性が高いが、
<filename>fs<emphasis>n</emphasis></filename> という、
起動可能パーティションを持つ他のデバイスとして表される。

</para></listitem>

<listitem><para>
<!--
Enter <command>fs<emphasis>n</emphasis>:</command> to select that
device where <emphasis>n</emphasis> is the partition number for the
CDROM.  The shell will now display the partition number as its prompt.
-->
デバイスを選ぶのに <command>fs<emphasis>n</emphasis>:</command> と入力する。
<emphasis>n</emphasis> には CDROM のパーティション番号を指定する。
シェルのプロンプトにパーティション番号が表示される。

</para></listitem>

<listitem><para>
<!--
Enter <command>elilo</command>.
This will start the boot loader.
<classname>elilo</classname> will display its prompt and wait for
a kernel name to load.
It will pick the default kernel if it receives no input within
the timelimit (~20 seconds).
-->
<command>elilo</command> と入力する。
これでブートローダが起動される。
<classname>elilo</classname> は自身のプロンプトを表示し、
ロードするカーネル名の入力待ち状態となる。
制限時間 (20 秒) 入力がなければ、デフォルトカーネルを選択したと見なす。
</para></listitem>

<listitem><para>
<!--
Select a boot option, typically <classname>linux</classname> or
<classname>linux26</classname>.
Simply press <emphasis>Enter</emphasis> or wait for the timeout
to take the default.
It will display messages as it uncompresses the kernel and loads
and uncompresses the initial root filesystem.
-->
<classname>linux</classname> や <classname>linux26</classname> といった、
ブートオプションを選択する。
単に <emphasis>Enter</emphasis> を押すか、タイムアウトまで待てば、
デフォルトを選択する。
カーネルの展開・ロードや、
初期 root ファイルシステムの展開といったメッセージを表示する。
</para></listitem>

</itemizedlist>

<para> 

<!--
These steps start the installer kernel.
You can also enter the shorter 
<command>fs<emphasis>n</emphasis>:elilo</command> command at
the shell prompt.
Once the kernel finishes its initialization along with the usual console
messages, it will start the Debian Installer.
-->
以上の手順でインストーラカーネルを起動します。
シェルプロンプトでもっと短く、
<command>fs<emphasis>n</emphasis>:elilo</command> と入力することもできます。
いったん通常のコンソールメッセージとともにカーネルの初期化が終われば、
Debian インストーラが起動します。

</para>

  </sect3>
  </sect2>

  <sect2 arch="ia64" id="boot-tftp"><title>TFTP での起動</title>

<para>
<!--
Booting an IA64 system from the network is similar to a CD boot.
The only difference is how the installation kernel is loaded.
The EFI Boot Manager can load and start programs from servers on
the network.
Once the installation kernel is loaded and starts, the system install
will proceed thru the same steps as the CD install with the exception
that the packages of the base install will be loaded from the network
rather than the CD drive.
-->
IA64 システムをネットワークから起動するのは、CD から起動するのに似ています。
違いは、カーネルをどのようにロードするのかと言ったことだけです。
EFI ブートマネージャは、ネットワーク上のサーバからプログラムをロードし、
実行することができます。
いったんインストールカーネルをロードし起動してしまえば、
基本インストールを CD ドライブからでなくネットワークから読み込むことを除けば、
CD インストールと同じ手順で、システムのインストールを行うことになります。

</para>

&boot-installer-intro-net.xml;

<para>

<!--
Network booting an ia64 system requires two architecture-specific actions.
On the boot server, DHCP and TFTP must be configured to deliver  
<command>elilo</command>.
On the client a new boot option must be defined in the EFI boot manager
to enable loading over a network.
-->
ia64 システムでのネットワークブートは、
2 つのアーキテクチャ特有のアクションが必要です。
ブートサーバでは、elilo に伝えるために DHCP と TFTPを設定しなければなりません。
クライアントでは、新しいブートオプションを、
ネットワーク越しのロードができるよう EFI ブートマネージャに定義しなければなりません。

</para>
  <sect3 arch="ia64" id="boot-tftp-server">
  <title>サーバの設定</title>
<para>

<!--
A suitable TFTP entry for network booting an ia64 system looks something
like this:
-->
ia64 システムのネットワークブート用の適切な TFTP エントリは、
以下のようになります:

<informalexample><screen>

host mcmuffin {
        hardware ethernet 00:30:6e:1e:0e:83;
        fixed-address 10.0.0.21;
        filename "elilo.efi";
}

</screen></informalexample>

<!--
Note that the goal is to get <command>elilo.efi</command> running on
the client.
-->
<command>elilo.efi</command> をクライアントで実行することが目的なのに、
注意してください。

</para><para>

<!--
Create an <filename>ia64/</filename> subdirectory in your tftpboot
directory, and populate it with the <filename>vmlinuz</filename> and
<filename>initrd.gz</filename> files from the Debian installer netboot
directory.
-->
tftpboot ディレクトリに <filename>ia64/</filename> サブディレクトリを作成し、
Debian インストーラ の netboot ディレクトリから、
<filename>vmlinuz</filename> ファイルと 
<filename>initrd.gz</filename> ファイルを移してください。


</para><para>

<!--
Copy <filename>elilo.efi</filename> to your tftpboot directory and
make it world readable.  This file can usually be found in the elilo
package in IA64 distributions, or in
<filename>/usr/lib/elilo</filename> or in a subdirectory of
<filename>/boot/efi</filename>.  A suitable copy is provided in the
Debian installer netboot directory.
-->
<filename>elilo.efi</filename> を tftpboot ディレクトリにコピーし、
誰でも読めるようにしてください。
たいていこのファイルは、IA64 版の elilo パッケージの中か、
<filename>/usr/lib/elilo</filename> ないし <filename>/boot/efi</filename> 
のサブディレクトリにあります。
適切なコピーは Debian インストーラの netboot ディレクトリの中にあります。

</para><para>

<!--
Create an <filename>elilo.conf</filename> file in your tftpboot
directory.  This will
be loaded by <command>elilo.efi</command> once it is running on the
client, and controls what
happens next, including the choice of kernel, initrd image, etc.  An
example file is provided in the Debian installer netboot directory, review
the contents and update as needed for your choice of paths, etc.
-->
tftpboot ディレクトリに <filename>elilo.conf</filename> ファイルを作成してください。
これは、クライアントで起動するときに <command>elilo.efi</command> に一度読み込まれ、
次になにが起きるか (カーネル・ initrd イメージの選択など) を制御するものです。
シリアルコンソールで起動する手頃な例として、以下のようにするといいでしょう。

<!--
It is possible to have different config files for different clients by naming
them using the client's IP address in hex with the suffix
<filename>.conf</filename> instead of <filename>elilo.conf</filename>.
See documentation provided in the <classname>elilo</classname> package
for details.
-->
<filename>elilo.conf</filename> の代わりに、
名前にクライアントのIPアドレス (16 進) を使用して、
拡張子 <filename>.conf</filename> を持つ、
別のクライアント用の config ファイルを持つことができます。
詳細は、<classname>elilo</classname> パッケージで提供されるドキュメントを、
参照してください。

</para>
  </sect3>
  <sect3 arch="ia64" id="boot-tftp-client">
  <title>クライアントの設定</title>
<para>

<!--
To configure the client to support TFTP booting, start by booting to
EFI and entering the <guimenu>Boot Option Maintenance Menu</guimenu>.
-->
TFTP ブートをサポートするクライアントを設定するのは、
EFI を起動し、<guimenu>Boot Option Maintenance Menu</guimenu> 
へ入ることで始めてください。

<itemizedlist>
<listitem><para>

<!--
Add a boot option.
-->
起動オプションを加える。
</para><para>

</para></listitem>
<listitem><para>

<!--
Select the line saying <guimenuitem>Load File
[Acpi()/.../Mac()]</guimenuitem> and press &enterkey;.
-->
<guimenuitem>Load File [Acpi()/.../Mac()]</guimenuitem> という行を選択し、
&enterkey; を押す。

</para></listitem>
<listitem><para>

<!--
Name the entry <userinput>Netboot</userinput> or something similar,
save, and exit back to the boot options menu.  
-->
このエントリに <userinput>Netboot</userinput> や似た名前を指定し、
保存後、ブートオプションメニューへ抜ける。

</para></listitem>
</itemizedlist>

<!--
You should see the new boot option you just created, and selecting it
should initiate a DHCP query, leading to a TFTP load of
<filename>elilo.efi</filename> from the server.
-->
今作成した新しい起動オプションが、
サーバから <filename>elilo.efi</filename> を読み込むような TFTP を導く、
DHCP クエリを始めるようになっているか、確認した方がいいでしょう。

</para><para>

<!--
The boot loader will display its prompt after it has downloaded and
processed its configuration file.
At this point, the installation proceeds with the same steps as a
CD install.  Select a boot option as in above and when the kernel
has completed installing itself from the network, it will start the
Debian Installer.
-->
その設定ファイルをダウンロードし処理した後に、
ブートローダは自身のプロンプトを表示します。
ポイントは CD でインストールするのと同様の手順で、
インストールが行われると言うことです。
上述のように起動オプションを選択し、
ネットワークからカーネルの読み込みが完了すれば、
Debian インストーラを起動します。

</para><para>
<!--
Proceed to the next chapter to continue the installation where
you will set up the language locale, network, and the disk partitions.
-->
言語ロケール、ネットワーク、ディスクパーティションをセットアップするよう、
インストールを続けるのには、次章に進んでください。

</para>
  </sect3>
  </sect2>
