<!-- original version: 11648 -->

 <sect1 id="supported-peripherals">
 <title>Peripherie und andere Hardware</title>
<para>

Linux unterstützt eine breite Auswahl an Hardware-Geräten wie Mäuse,
Drucker, Scanner, PCMCIA und USB Geräte. Die meisten dieser Geräte
werden während der Installation des Systems nicht benötigt.

</para><para arch="i386">

USB Hardware funktioniert im allgemeinen ausgezeichnet, nur einige
USB Keyboards können zusätzliche Konfiguration benötigen (siehe
<xref linkend="usb-keyboard-config"/>).

</para><para>

Dieser Abschnitt beinhaltet Informationen über Peripherie, die im
Speziellen <emphasis>nicht</emphasis> vom Installationssystem unterstützt
wird, obwohl sie unter Linux unterstützt werden können.

</para><para arch="i386">

Siehe wiederum im
<ulink url="&url-hardware-howto;">Linux Hardware Compatibility HOWTO</ulink>
um herauszufinden, ob Ihre spezielle Hardware von Linux unterstützt wird.

</para><para arch="i386">

Beachten Sie, dass der mitgelieferte Kernel keine seriellen Ports mit
Nummern höher als 4 (<filename>/dev/ttyS3</filename>) unterstützt. Sie
müssen entweder verfügbare Ports verwenden, oder sich einen angepassten
Kernel kompilieren (siehe <xref linkend="rescue-replace-kernel"/>).

</para><para arch="s390">

Paketinstallationen von XPRAM und Bandlaufwerk werden von diesem System nicht
unterstützt. Alle Pakete, die Sie installieren wollen, müssen auf einem
DASD oder über das Netzwerk mittels NFS, HTTP oder FTP verfügbar sein.

</para>
</sect1>

 <sect1 arch="not-s390"><title>Hardware speziell für GNU/Linux kaufen</title>

<para>

Es gibt einige Anbieter, die Systeme mit Debian oder anderen GNU/Linux
Distributionen vorinstalliert anbieten. Sie bezahlen möglicherweise mehr
für dieses Privileg, aber sie können damit sicher gehen, dass Ihre Hardware
von GNU/Linux gut unterstützt wird.

</para><para arch="m68k"> 

Unglücklicherweise ist es sehr schwierig, Anbieter zu finden, die neue
&arch-title; Geräte überhaupt verkaufen.

</para><para arch="i386"> 

Wenn Sie ein Gerät mit mitgeliefertem Windows kaufen, lesen Sie die
Software-Lizenz aufmerksam durch, die Sie mit Windows erhalten; es ist
durchaus möglich, dass Sie die Lizenz ablehnen und dafür eine
Rückvergütung vom Händler erhalten können. Siehe
<ulink url="&url-windows-refund;"></ulink> für komplette Informationen.

</para><para>

Ob Sie nun ein System mit mitgeliefertem Linux, oder sogar ein gebrauchtes
System kaufen, es ist trotzdem wichtig, zu überprüfen, ob Ihre Hardware
vom Linux Kernel unterstützt wird. Überprüfen Sie, ob Ihre Hardware
in den oben angegebenen Referenzen aufgelistet ist. Lassen Sie Ihren
Verkäufer wissen, dass Sie für ein Linux System einkaufen. Unterstützen
Sie Linux-freundliche Hardware-Verkäufer.

</para>

  <sect2><title>Vermeiden Sie proprietäre und geschlossene Hardware</title>
<para>

Einige Hardware-Hersteller werden einfach nicht erzählen, wie Treiber für
ihre Hardware zu schreiben sind. Andere gewähren keinen Zugriff auf die
Dokumentation ohne ein Geheimhaltungsvertrag, das uns davon abhält,
den Linux Quellcode zu veröffentlichen.

</para><para arch="m68k"> 

Ein anderes Beispiel ist die proprietäre Hardware in der älteren
Macintosh Linie. In der Tat wurden keinerlei Spezifikationen oder
Dokumentationen jemals für irgendwelche Macintosh Hardware herausgegeben,
besonders der ADB Controller (von Maus und Keyboard verwendet), der
Diskettenlaufwerk Controller, und jegliche Beschleunigungs- und
CLUT Manipulation der Video Hardware (obwohl wir nun CLUT Manipulation
auf nahezu allen internen Video Chips unterstützen). Kurz gesagt, das erklärt,
warum der Macintosh Linux Port hinter den anderen nachhinkt.

</para><para>

Da wir keinen Zugang zu den Dokumentationen dieser Geräte erhalten haben,
funktionieren sie einfach unter Linux nicht. Sie können helfen, indem Sie
die Hersteller solcher Hardware bitten, die Dokumentation zu veröffentlichen.
Wenn genügend Leute fragen, werden sie begreifen, dass die Free Software
Community einen wichtigen Markt darstellt.

</para>
</sect2>


  <sect2 arch="i386"><title>Windows-spezifische Hardware</title>
<para>

Ein beunruhigender Trend ist die Verbreitung von Windows-spezifischen
Modems und Druckern. In einigen Fällen werden sie speziell konstruiert
um mit dem Microsoft Windows Betriebssystem zu funktionieren und tragen
die Legende ``WinModem'' oder ``Speziell für Windows-basierte Computer
entwickelt''. Das wird im allgemeinen erreicht, indem eingebaute
Prozessoren aus der Hardware entfernt werden, und die Arbeit an einen
Windows Treiber übergeben wird, der vom Prozessor ausgeführt wird. Diese
Strategie macht Hardware billiger, aber die Einsparungen werden oft
<emphasis>nicht</emphasis> an den Benutzer weitergegeben oder diese
Hardware kann sogar teurer sein als gleichwertige Geräte, die ihre
eingebettete Intelligenz behalten.

</para><para>

Sie sollten Windows-spezifische Hardware aus zwei Gründen meiden. Der
erste ist dass die Hersteller grundsätzlich die Ressourcen zur Verfügung
stellen, um einen Linux Treiber zu schreiben. Im allgemeinen sind
die Hardware- und Software-Schnittstelle des Geräts proprietär, und
Dokumentation ist, wenn überhaupt, dann nur mit Geheimhaltungsvertrag
nicht verfügbar. Das verhindert die Verwendung für Freie Software,
da Programmierer freier Software den Quellcode ihrer Software offen
legen. Der zweite Grund ist dass das Betriebssystem die Arbeit des
eingebetteten Prozessors übernehmen muss, oftmals mit
<emphasis>Echtzeit</emphasis> Priorität, und der Prozessor für
den Betrieb Ihrer Programme nicht verfügbar ist, während er diese
Geräte ansteuert. Da der typische Windows Benutzer nicht so intensiv
Multi-Tasking betreibt wie ein Linux Benutzer, hoffen die Hersteller,
dass der Windows Benutzer die Belastung einfach nicht bemerkt, die
diese Hardware der CPU auferlegt. Jedes Multi-Tasking Betriebssystem,
sogar Windows 2000 oder XP, leidet unter reduzierter Performance, wenn
Peripherie-Hersteller mit der eingebetteten Rechenleistung ihrer Hardware
geizen.

</para><para>

Sie können dieser Situation entgegenwirken, indem Sie diese Hersteller
ermuntern, die Dokumentation und andere zur Programmierung ihrer
Hardware notwendige Ressourcen zu veröffentlichen, aber die beste Strategie
ist einfach, diese Art von Hardware zu vermeiden, bis sie in der
<ulink url="&url-hardware-howto;">Linux Hardware Compatibility HOWTO</ulink>
als funktionierend aufgelistet ist.

</para>
</sect2>


  <sect2 id="Parity-RAM">
  <title>Fake or <quote>Virtual</quote> Parity RAM</title>
<para>

If you ask for Parity RAM in a computer store, you'll probably get
<emphasis>virtual parity</emphasis> memory modules instead of
<emphasis>true parity</emphasis> ones. Virtual parity SIMMs can often
(but not always) be distinguished because they only have one more chip
than an equivalent non-parity SIMM, and that one extra chip is smaller
than all the others. Virtual-parity SIMMs work exactly like non-parity
memory.  They can't tell you when you have a single-bit RAM error the
way true-parity SIMMs do in a motherboard that implements
parity. Don't ever pay more for a virtual-parity SIMM than a
non-parity one. Do expect to pay a little more for true-parity SIMMs,
because you are actually buying one extra bit of memory for every 8
bits.

</para><para>

Wenn Sie komplette Informationen zum Thema &arch-title; RAM haben wollen,
und welches das beste RAM zum kaufen ist, siehe
<ulink url="&url-pc-hw-faq;">PC Hardware FAQ</ulink>.

</para><para arch="alpha"> 

Die meisten, wenn nicht alle Alpha Systeme, benötigen True-Parity RAM.

</para>

  </sect2>

 </sect1>
