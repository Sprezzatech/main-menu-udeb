<!-- retain these comments for translator revision tracking -->
<!-- original version: 23213 -->

 <sect1 condition="supports-tftp" id="install-tftp">
 <title>Dateien vorbereiten für TFTP-Netzwerk-Boot</title>
<para>

Wenn Ihr Rechner mit einem Netzwerk (Local Area Network, LAN) verbunden ist,
sind Sie vielleicht in der Lage, über das Netzwerk per TFTP von einem
anderen Rechner aus zu booten. Wenn Sie dies vorhaben, müssen
die Boot-Dateien in speziellen Verzeichnissen auf diesem entfernten Rechner
abgelegt werden und der Rechner muss für das Booten Ihrer Maschine
speziell konfiguriert werden.

</para><para>

Sie müssen einen TFTP-Server einrichten und in manchen Fällen auch
einen BOOTP-Server 
<phrase condition="supports-rarp">oder einen RARP-Server</phrase>
<phrase condition="supports-dhcp">oder einen DHCP-Server</phrase>.

</para><para>

<phrase condition="supports-rarp">Das Reverse-Address-Resolution-Protocol (RARP)
ist eine Möglichkeit, dem Client mitzuteilen, welche IP-Adresse er selbst
verwenden soll. Ein anderer Weg wäre, das BOOTP-Protokoll zu verwenden. </phrase>

<phrase condition="supports-bootp">BOOTP ist ein IP-Protokoll, dass einem
Computer seine IP-Adresse mitteilt und wo er im Netzwerk ein Boot-Image 
findet. </phrase>

<phrase arch="m68k">Noch eine andere Möglichkeit auf VMEbus-Systemen:
die IP-Adresse kann manuell im Boot-ROM eingestellt werden. </phrase>

<phrase condition="supports-dhcp">Das Dynamic-Host-Configuration-Protocol
(DHCP) ist eine flexiblere, rückwärts-kompatible Erweiterung von BOOTP.
Einige Systeme können nur per DHCP konfiguriert werden. </phrase>

</para><para arch="powerpc">

Auf PowerPCs, wenn Sie einen NewWorld-PowerMac haben, ist es eine
gute Idee, DHCP statt BOOTP zu benutzen. Einige der Maschinen der letzten
Generationen können nicht per BOOTP starten.

</para><para arch="alpha"> 

Im Gegensatz zu Open-Firmware auf Sparc- und PowerPC-Maschinen kann
die SRM-Konsole RARP <emphasis>nicht</emphasis> nutzen, um eine IP-Adresse
zu beziehen; deswegen müssen Sie BOOTP verwenden, wenn Sie Ihren Alpha-Rechner
per Netzwerk booten wollen. Sie können ebenfalls die IP-Konfiguration für 
Netzwerk-Schnittstellen direkt in der SRM-Konsole eingeben.

<footnote>
<para>

Alpha-Systeme können auch per Netzwerk gebootet werden, indem man das
DECNet MOP (Maintenance-Operations-Protocol) benutzt, aber dies wird
hier nicht behandelt. Wahrscheinlich wird ein OpenVMS-Service vor Ort
Sie gerne unterstützen, wenn Sie Probleme haben, Linux mit MOP auf
Ihrem Alpha zu booten.

</para>
</footnote></para><para arch="hppa"> 

Einige ältere HPPA-Maschinen (wie z.B. 715/75) funktionieren eher 
mit RBOOTD als mit BOOTP. Ein RBOOTD-Paket ist auf der Parisc-Linux-Website 
verfügbar.

</para><para>

Das Trivial-File-Transfer-Protocol (TFTP) wird benutzt, um dem Client
das Boot-Image zur Verfügung zu stellen. Theoretisch kann jeder Server
auf jeder Plattform benutzt werden, der diese Protokolle implementiert hat.
In den Beispielen in diesem Abschnitt geben wir Kommandos für
SunOS 4.x, SunOS 5.x (a.k.a. Solaris) und GNU/Linux an.

</para>

&tftp-rarp.xml;
&tftp-bootp.xml;
&tftp-dhcp.xml;

  <sect2 id="tftpd">
  <title>Den TFTP-Server aktivieren</title>
<para>

Um den TFTP-Server einzurichten, sollten Sie als erstes sicherstellen,
dass <command>tftpd</command> aktiv ist. Dies können Sie mit einer Zeile
wie der folgenden in <filename>/etc/inetd.conf</filename> erreichen:

<informalexample><screen>

tftp dgram udp wait nobody /usr/sbin/tcpd in.tftpd /tftpboot

</screen></informalexample>

Debian-Pakete richten dies generell korrekt ein, wenn Sie installiert werden.

</para><para>

Schauen Sie sich die Datei an und merken Sie sich das Verzeichnis, das
als Argument hinter <command>in.tftpd</command> eingetragen ist; Sie
werden es später brauchen. Das Argument <userinput>-l</userinput>
aktiviert bei einigen Version von <command>in.tftpd</command> das
Logging, sodass alle Anfragen im Systemlog protokolliert werden;
dies ist sinnvoll für die Fehlersuche bei Bootproblemen.
Wenn Sie <filename>/etc/inetd.conf</filename> ändern mussten,
ist es nötig, dem laufenden <command>inetd</command>-Prozess
mitzuteilen, dass sich die Konfig-Datei geändert hat.
Auf einem Debian-Rechner erledigen Sie das mit 
<userinput>/etc/init.d/inetd reload</userinput>; auf anderen Maschinen
müssen Sie die Prozess-ID von <command>inetd</command> herausfinden 
und <userinput>kill -HUP <replaceable>inetd-pid</replaceable></userinput>
ausführen.

</para><note arch="i386"><para>

Um die Pre-Boot-Execution-Environment- (PXE-) Methode von TFTP zu nutzen,
benötigen Sie einen TFTP-Server mit Unterstützung für
<userinput>tsize</userinput>. Auf einem &debian;-Server sind dies
<classname>atftpd</classname> und <classname>tftpd-hpa</classname>;
wir empfehlen, <classname>tftpd-hpa</classname> zu nutzen.

</para></note><para arch="mips">

Wenn Sie vorhaben, Debian auf einer SGI-Maschine zu installieren und Ihr
TFTP-Server ist ein GNU/Linux-Rechner mit Linux 2.4, müssen Sie auf dem
Server folgendes ausführen:

<informalexample><screen>

echo 1 > /proc/sys/net/ipv4/ip_no_pmtu_disc

</screen></informalexample>

um Path MTU discovery auszuschalten, andernfalls kann der PROM des Indy
den Kernel nicht herunterladen. Außerdem müssen Sie sicherstellen, dass
TFTP-Pakete von einem Quellport nicht größer als 32767 verschickt werden, 
sonst wird der Download nach dem ersten Paket gestoppt. Es ist wieder 
der Linux-Kernel 2.4.x, der diesen Fehler im PROM auslöst, aber Sie können
dies vermeiden, indem Sie

<informalexample><screen>

echo "2048 32767" > /proc/sys/net/ipv4/ip_local_port_range

</screen></informalexample>

ausführen; dies stellt den Bereich der Quellports ein, den der Linux-TFTP-Server
benutzt.

</para>
  </sect2>

  <sect2 id="tftp-images">
  <title>Die TFTP-Images an ihren Platz befördern</title>
<para>

Als nächstes legen Sie die TFTP-Bootimages, die Sie brauchen
und die Sie wie in <xref linkend="where-files"/> beschrieben 
finden können, im <command>tftpd</command>-Bootimage-Verzeichnis 
ab. Meistens wird dies <filename>/tftpboot</filename> sein. 
Sie müssen einen Link von diesem Image auf die Datei anlegen,
die <command>tftpd</command> benutzt, um einen speziellen Client
zu booten. Bedauerlicherweise hängt der Name dieser Datei von dem
TFTP-Client ab und es gibt dabei keine festen Standards.

</para><para arch="powerpc">

Auf NewWorld-PowerMacs müssen Sie den <command>yaboot</command>-Bootloader
als TFTP-Bootimage einstellen. <command>Yaboot</command> wird dann
selbst das Kernel- und RAMdisk-Image per TFTP abrufen. Für Netzwerk-Boot
benutzen Sie die Datei <filename>yaboot-netboot.conf</filename> und
benennen Sie einfach in <filename>yaboot.conf</filename> im TFTP-Verzeichnis
um.

</para><para arch="i386">

Um per PXE zu booten, müssen Sie nur den 
<filename>netboot/netboot.tar.gz</filename>-Tarball vorbereiten.
Entpacken Sie den Tarball einfach in das 
<command>tftpd</command>-Bootimage-Verzeichnis. Stellen Sie sicher, dass
der DHCP-Server konfiguriert ist, <filename>/pxelinux.0</filename> als
zu bootende Datei zum <command>tftpd</command> weiterzuleiten.

</para><para arch="ia64">

Um per PXE zu booten, müssen Sie nur den 
<filename>netboot/netboot.tar.gz</filename>-Tarball vorbereiten.
Entpacken Sie den Tarball einfach in das 
<command>tftpd</command>-Bootimage-Verzeichnis. Stellen Sie sicher, dass
der DHCP-Server konfiguriert ist, <filename>/debian-installer/ia64/elilo.efi</filename> 
als zu bootende Datei zum <command>tftpd</command> weiterzuleiten.

</para>

   <sect3 arch="mipsel">
   <title>DECstation-TFTP-Images</title>
<para>

Für DECstations gibt es tftp-Image-Dateien für jede Unterarchitektur,
die sowohl Kernel wie auch den Installer in einer Datei enthalten.
Sie sind nach dem Schema <replaceable>subarchitecture</replaceable>/netboot-boot.img
benannt. Kopieren Sie die tftp-Image-Datei, die Sie benutzen wollen,
nach <userinput>/tftpboot/tftpboot.img</userinput> (wenn Sie das Beispiel
mit BOOTP/DHCP von oben verwenden).

</para><para>

Die DECstation-Firmware bootet per TFTP mit dem Befehl
<userinput>boot <replaceable>#</replaceable>/tftp</userinput>, wobei 
<replaceable>#</replaceable> die Nummer des TurboChannel-Gerätes ist,
von dem gebootet werden soll. Auf den meisten DECstations ist dies "3".
Wenn der BOOTP-/DHCP-Server den Dateinamen nicht angibt oder falls Sie
zusätzliche Parameter angeben müssen, können Sie folgende Syntax verwenden:

</para><para>

<userinput>boot #/tftp/filename param1=value1 param2=value2 ...</userinput>

</para><para>

Einige Versionen der DECstation-Firmware haben ein Problem betreffend das
Booten per Netzwerk: die Übertragung beginnt, aber nach einiger Zeit stoppt
sie mit einem Fehler (<computeroutput>a.out err</computeroutput>).
Dies kann verschiedene Gründe haben:

<orderedlist>
<listitem><para>

Die Firmware antwortet nicht auf ARP-Anfragen während des TFTP-Transfers.
Dies führt zu einem ARP-Timeout und der Transfer stoppt. Die Lösung 
ist, die MAC-Adresse von der Ethernet-Karte der DECstation fest in die
ARP-Tabelle des TFTP-Servers einzutragen. Dies erledigen Sie mit
<userinput>arp -s <replaceable>IP-address</replaceable>
<replaceable>MAC-address</replaceable></userinput> als root auf dem
Rechner, der als TFTP-Server agiert. Die MAC-Adresse der DECstation
können Sie auslesen, indem Sie <command>cnfg</command> am Firmware-Prompt
eingeben.

</para></listitem>
<listitem><para>

Die Firmware hat ein Limit für die Größe der Dateien, die per TFTP
gebootet werden.

</para></listitem>
</orderedlist>

Es gibt ebenfalls Firmware-Versionen, die überhaupt nicht per TFTP booten
können. Auf den NetBSD-Websites finden Sie einen Überblick über die
verschiedenen Firmware-Versionen:
<ulink url="http://www.netbsd.org/Ports/pmax/board-list.html#proms"></ulink>.

</para>
   </sect3>

   <sect3 arch="alpha">
   <title>TFTP-Boot von Alpha-Systemen</title>
<para>
Auf Alpha-Systemen müssen Sie den Dateinamen angeben (als relative
Pfadangabe zum Bootimage-Verzeichnis), indem Sie entweder den
SRM-<userinput>boot</userinput>-Befehl mit dem Parameter 
<userinput>-file</userinput> benutzen, oder Sie setzen die
Umgebungsvariable <userinput>BOOT_FILE</userinput>.
Alternativ können Sie auch den Dateinamen per BOOTP übergeben
(benutzen Sie im ISC <command>dhcpd</command> die Anweisung
<userinput>filename</userinput>). Im Unterschied zu Open-Firmware
gibt es auf SRM <emphasis>keinen Standard-Dateinamen</emphasis>,
Sie <emphasis>müssen</emphasis> also mit einer dieser Methoden einen
Dateinamen angeben.

</para>
   </sect3>

   <sect3 arch="sparc">
   <title>TFTP-Boot von SPARC-Systemen</title>
<para>

SPARC-Architekturen nutzen die Namen der Unterarchitekturen,
wie ``SUN4M'' oder ``SUN4C''; in einigen Fällen bleibt die 
Architekturbezeichnung leer, d.h. die Datei, nach der der Client sucht,
ist einfach <filename>client-ip-in-hex</filename>. Wenn die Unterarchitektur
Ihres Systems also SUN4C ist und seine IP-Adresse ist 192.168.1.3, wäre
der Dateiname <filename>C0A80103.SUN4C</filename>. Eine einfache Art, dies
herauszufinden, ist, den folgenden Befehl in eine Shell einzugeben
(angenommen, die IP-Adresse der Maschine wäre 10.0.0.4):

</para>

<informalexample><screen>
printf '%.2x%.2x%.2x%.2x\n' 10 0 0 4
</screen></informalexample>

<para>

Es wird die IP-Adresse in hexadezimal ausgegeben; um den korrekten
Dateinamen zu bekommen, müssen Sie alle Buchstaben in Großbuchstaben
ändern und falls nötig den Namen der Unterarchitektur hinzufügen.

</para><para>

Manche Sparc-Systeme kann man zwingen, nach einem bestimmten Dateinamen
zu suchen, indem man ihn ans Ende des OpenPROM-Boot-Befehls anhängt, z.B.
<userinput>boot net my-sparc.image</userinput>. Die Datei muss dabei immer 
in dem Verzeichnis liegen, in dem der TFTP-Server danach sucht.

</para>
   </sect3>

   <sect3 arch="m68k">
   <title>TFTP-Boot von BVM-/Motorola-Systemen</title>
<para>

Auf BVM- und Motorola VMEbus-Systemen kopieren Sie die Dateien 
&bvme6000-tftp-files; nach <filename>/tftpboot/</filename>.

</para><para>

Als nächstes konfigurieren Sie Ihr Boot-ROM oder Ihren BOOTP-Server,
sodass zunächst die Datei <filename>tftplilo.bvme</filename> bzw.
<filename>tftplilo.mvme</filename> vom TFTP-Server geladen wird.
Lesen Sie die <filename>tftplilo.txt</filename>-Datei für Ihre
Unterarchitektur, falls Sie zusätzliche Informationen zur 
Konfiguration benötigen.

</para>
   </sect3>

   <sect3 arch="mips">
   <title>TFTP-Boot von SGI-Indy-Systemen</title>
<para>

Auf SGI Indys können Sie sich auf den <command>bootpd</command>-Dienst
verlassen, um den Namen der TFTP-Datei festzulegen. Er wird entweder als
Wert für <userinput>bf=</userinput> in <filename>/etc/bootptab</filename>
oder als Angabe für <userinput>filename=</userinput> in 
<filename>/etc/dhcpd.conf</filename> angegeben.

</para>
   </sect3>

   <sect3 arch="mips">
   <title>TFTP-Boot von Broadcom BCM91250A-Systemen</title>
<para>

Sie müssen DHCP nicht speziell konfigurieren, weil der komplette Pfad zur 
Boot-Datei beim CFE angegeben wird.

</para>
   </sect3>

  </sect2>

<!-- FIXME: commented out since it seems too old to be usable and a current
            way is not known
            !!! Leaving this part untranslated for the same reason. H. Wansing

  <sect2 id="tftp-low-memory">
  <title>TFTP Installation for Low-Memory Systems</title>
<para>

On some systems, the standard installation RAMdisk, combined with the
memory requirements of the TFTP boot image, cannot fit in memory.  In
this case, you can still install using TFTP, you'll just have to go
through the additional step of NFS mounting your root directory over
the network as well.  This type of setup is also appropriate for
diskless or dataless clients.

</para><para>

First, follow all the steps above in <xref linkend="install-tftp"/>.

<orderedlist>
<listitem><para>

Copy the Linux kernel image on your TFTP server using the
<userinput>a.out</userinput> image for the architecture you are
booting.

</para></listitem>
<listitem><para>

Untar the root archive on your NFS server (can be the same system as
your TFTP server): 

<informalexample><screen>

# cd /tftpboot
# tar xvzf root.tar.gz

</screen></informalexample>

Be sure to use the GNU <command>tar</command> (other tar programs, like the
SunOS one, badly handle devices as plain files).

</para></listitem>
<listitem><para>

Export your <filename>/tftpboot/debian-sparc-root</filename> directory
with root access to your client.  E.g., add the following line to
<filename>/etc/exports</filename> (GNU/Linux syntax, should be similar
for SunOS):

<informalexample><screen>

/tftpboot/debian-sparc-root client(rw,no_root_squash)

</screen></informalexample>

NOTE: "client" is the host name or IP address recognized by the server for
the system you are booting.

</para></listitem>
<listitem><para>

Create a symbolic link from your client IP address in dotted notation
to <filename>debian-sparc-root</filename> in the
<filename>/tftpboot</filename> directory.  For example, if the client
IP address is 192.168.1.3, do

<informalexample><screen>

# ln -s debian-sparc-root 192.168.1.3

</screen></informalexample>

</para></listitem>
</orderedlist>

</para>

  </sect2>

  <sect2 condition="supports-nfsroot">
  <title>Installing with TFTP and NFS Root</title>
<para>

Installing with TFTP and NFS Root is similar to 
<xref linkend="tftp-low-memory"/> because you don't want to 
load the RAMdisk anymore but boot from the newly created NFS-root file
system.  You then need to replace the symlink to the tftpboot image by
a symlink to the kernel image (for example,
<filename>linux-a.out</filename>).

</para><para>

RARP/TFTP requires all daemons to be running on the same server (the
workstation is sending a TFTP request back to the server that replied
to its previous RARP request).

</para>


  </sect2>
END FIXME -->
 </sect1>
