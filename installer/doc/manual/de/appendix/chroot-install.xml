<!-- retain these comments for translator revision tracking -->
<!-- original version: 25154 -->

 <sect1 id="linux-upgrade">
 <title>&debian; von einem anderen Unix/Linux-System aus installieren</title>

<para>

Dieses Kapitel beschreibt, wie man &debian; von einem vorhandenen
Unix- oder Linux-System aus installiert, ohne den ncurses-basierten,
menügeführten Installer zu verwenden, der im Rest dieses Handbuchs
beschrieben wird. Dieses "Einmal-quer-durch-die-Installation"-HOWTO
wurde erbeten von Leuten, die von Red Hat, Mandrake oder SUSE zu
&debian; wechseln. In diesem Kapitel gehen wir davon aus, dass Sie
ein wenig Erfahrung mit *nix-Befehlen haben sowie mit der Navigation
durch das Dateisystem. Ein <prompt>$</prompt> in diesem Abschnitt
symbolisiert einen Befehl, der im Homeverzeichnis des Benutzers
ausgeführt wird, während <prompt>#</prompt> bedeutet, dass das
Kommando im Debian-chroot ausgeführt wird.

</para><para>

Sobald Sie das neue Debian-System nach Ihren Wünschen konfiguriert haben,
können Sie Ihre vorhandenen eigenen Dateien hinüber verschieben und loslegen.
Deswegen wird dies auch die "zero-downtime"-&debian;-Installation (Installation
ohne eine Zeitspanne, während der das System nicht verfügbar ist) genannt. Es ist
ebenso ein geschickter Weg, mit Hardwarekomponenten zurechtzukommen, die sich
sonst nicht gut mit verschiedenen Boot- oder Installationsmedien vertragen.

</para>

  <sect2>
  <title>Es geht los!</title>
<para>

Benutzen Sie die *nix-Partitionierungsprogramme des vorhandenen
Systems, um Ihre Festplatte nach Bedarf neu zu partitionieren;
erstellen Sie zumindest ein neues Dateisystem plus Swap. Sie benötigen
mindestens 150MB Speicher für eine Nur-Konsolen-Installation oder
ein Minimum von 300MB, wenn Sie vorhaben, X zu installieren.

</para><para>

Um ein Dateisystem auf einer Partition zu erstellen, zum Beispiel ein
ext3-Dateisystem auf <filename>/dev/hda6</filename> (dies soll in diesem
Beispiel unsere root-Partition sein):

<informalexample><screen>
# mke2fs -j /dev/hda6
</screen></informalexample>

Um stattdessen ein ext2-Dateisystem zu erzeugen, lassen Sie das
<userinput>-j</userinput> weg.

</para><para>

Initialisieren und aktivieren Sie den Swap (passen Sie die Partitionsnummer
für Ihre geplante Debian-Swap-Partition an):

<informalexample><screen>
# mkswap /dev/hda5
# sync; sync; sync
# swapon /dev/hda5
</screen></informalexample>

Hängen Sie eine Partition (wahrscheinlich die neue) als <filename>/mnt/debinst</filename> ins
Dateisystem ein (das Installationsverzeichnis; es wird das
root-(<filename>/</filename>)-Dateisystem des neuen Debian). Der
Einhängepunkt (<filename>/mnt/debinst</filename>) ist rein willkürlich
gewählt, es wird später nach darauf verwiesen.

<informalexample><screen>
# mkdir /mnt/debinst
# mount /dev/hda6 /mnt/debinst
</screen></informalexample>

</para>
  </sect2>

  <sect2>
  <title><command>debootstrap</command> installieren</title>
<para>

Das Programm, das auch der Debian-Installer benutzt und das als offizielle
Methode angesehen wird, ein Debian-Basissystem zu installieren, ist
<command>debootstrap</command>. Es nutzt <command>wget</command> und
<command>ar</command>, aber ansonsten hängt es nur von 
<classname>/bin/sh</classname> ab. Installieren Sie <command>wget</command>
und <command>ar</command>, falls es noch nicht auf Ihrem laufenden System
vorhanden ist; dann laden Sie <command>debootstrap</command> herunter und
installieren es ebenfalls.

</para><para>

Wenn Sie ein rpm-basiertes System haben, können Sie alien verwenden,
um das .deb in ein .rpm-Paket umzuwandeln oder Sie laden sich eine
rpm-Version von
<ulink url="http://people.debian.org/~blade/install/debootstrap"></ulink>
herunter.

</para><para>

Oder Sie nutzen die folgende Prozedur, um es manuell zu installieren.
Erstellen Sie ein Arbeitsverzeichnis, in das Sie die .deb-Pakete entpacken.

<informalexample><screen>
# mkdir work
# cd work
</screen></informalexample>

Das <command>debootstrap</command>-Binary finden Sie im Debian-Archiv
(achten Sie darauf, die richtige Datei für Ihre Architektur zu verwenden).
Laden Sie das <command>debootstrap</command>.deb aus dem
<ulink url="http://ftp.debian.org/debian/pool/main/d/debootstrap/">
Pool</ulink> herunter, kopieren Sie es in das Arbeitsverzeichnis work und
extrahieren Sie daraus die Binär-Dateien. Sie benötigen root-Rechte, um die
Binär-Dateien zu installieren.

<informalexample><screen>
# ar -xf debootstrap_0.X.X_arch.deb
# cd /
# zcat /full-path-to-work/work/data.tar.gz | tar xv
</screen></informalexample>

</para>
  </sect2>

  <sect2>
  <title>Starten Sie <command>debootstrap</command></title>
<para>

<command>debootstrap</command> kann die benötigten Dateien direkt vom
Archiv herunterladen, wenn Sie es starten. Sie können in dem folgenden Befehl jeden
Debian-Archiv-Mirror-Server statt <userinput>http.us.debian.org/debian</userinput>
einsetzen, vorzugsweise einen Mirror in Ihrer Nähe. Eine Liste aller Mirror-Server
finden Sie auf <ulink url="http://www.debian.org/misc/README.mirrors"></ulink>.

</para><para>

Wenn Sie eine &debian;-&releasename-cap;-CD eingelegt und in <filename>/cdrom</filename>
eingehängt haben, können Sie statt der http-URL auch eine file-URL angeben:
<userinput>file:/cdrom/debian/</userinput>.

</para><para>

Setzen Sie in dem folgenden <command>debootstrap</command>-Befehl für
<replaceable>ARCH</replaceable> eine der folgenden Architekturbezeichnungen
ein:

<userinput>alpha</userinput>, 
<userinput>arm</userinput>,
<userinput>hppa</userinput>, 
<userinput>i386</userinput>, 
<userinput>ia64</userinput>, 
<userinput>m68k</userinput>,
<userinput>mips</userinput>, 
<userinput>mipsel</userinput>, 
<userinput>powerpc</userinput>, 
<userinput>s390</userinput> oder
<userinput>sparc</userinput>.

<informalexample><screen>
# /usr/sbin/debootstrap --arch ARCH &releasename; \
    /mnt/debinst http://http.us.debian.org/debian
</screen></informalexample>

</para>
  </sect2>

  <sect2>
  <title>Das Basissystem konfigurieren</title>
<para>

Sie haben jetzt ein echtes, aber noch etwas mageres Debian-System auf
der Festplatte. Wechseln Sie mit <command>Chroot</command> hinein:

<informalexample><screen>
# chroot /mnt/debinst /bin/bash
</screen></informalexample>
</para>

   <sect3>
   <title>Partitionen einhängen</title>
<para>

Sie müssen die Datei <filename>/etc/fstab</filename> erzeugen.

<informalexample><screen>
# editor /etc/fstab
</screen></informalexample>

Hier ein Beispiel, das Sie sich anpassen können:

<informalexample><screen>
# /etc/fstab: static file system information.
#
# file system    mount point   type    options                  dump  pass
/dev/XXX         /             ext2    defaults                 0     0
/dev/XXX         /boot         ext2    ro,nosuid,nodev          0     2

/dev/XXX         none          swap    sw                       0     0
proc             /proc         proc    defaults                 0     0

/dev/fd0         /mnt/floppy   auto    noauto,rw,sync,user,exec 0     0
/dev/cdrom       /mnt/cdrom    iso9660 noauto,ro,user,exec      0     0

/dev/XXX         /tmp          ext2    rw,nosuid,nodev          0     2
/dev/XXX         /var          ext2    rw,nosuid,nodev          0     2
/dev/XXX         /usr          ext2    rw,nodev                 0     2
/dev/XXX         /home         ext2    rw,nosuid,nodev          0     2
</screen></informalexample>

Nutzen Sie den Befehl <userinput>mount -a</userinput>, um alle Dateisysteme,
die Sie in <filename>/etc/fstab</filename> angegeben haben, einzuhängen; um
die Dateisysteme einzeln einzuhängen benutzen Sie:

<informalexample><screen>
# mount /path   # z.B.: mount /usr
</screen></informalexample>

Sie können das proc-Dateisystem mehrfach einhängen und in frei wählbare
Verzeichnisse, obwohl /proc dafür üblich ist. Wenn Sie nicht
<userinput>mount -a</userinput> verwendet haben, vergewissern Sie sicher, dass
Sie proc eingehängt haben, bevor Sie weitermachen:

<informalexample><screen>
# mount -t proc proc /proc
</screen></informalexample>

</para>
   </sect3>

   <sect3>
   <title>Die Tastatur konfigurieren</title>
<para>

Um Ihre Tastatur zu konfigurieren, verwenden Sie:

<informalexample><screen>
# dpkg-reconfigure console-data
</screen></informalexample>

</para>
   </sect3>

   <sect3>
   <title>Das Netzwerk konfigurieren</title>
<para>

Um Ihr Netzwerk einzurichten, müssen Sie die Dateien
<filename>/etc/network/interfaces</filename>,
<filename>/etc/resolv.conf</filename> und
<filename>/etc/hostname</filename> anpassen.

<informalexample><screen>
# editor /etc/network/interfaces 
</screen></informalexample>

Hier sind ein paar einfache Beispiele aus
<filename>/usr/share/doc/ifupdown/examples</filename>:

<informalexample><screen>
######################################################################
# /etc/network/interfaces -- configuration file for ifup(8), ifdown(8)
# See the interfaces(5) manpage for information on what options are 
# available.
######################################################################

# We always want the loopback interface (die Loopback-Schnittstelle wird
# immer benötigt).
auto lo
iface lo inet loopback

# To use dhcp (wenn Sie DHCP benutzen möchten):
#
# auto eth0
# iface eth0 inet dhcp

# An example static IP setup: (broadcast and gateway are optional)
# (ein Beispiel für eine statische IP-Einstellung/ broadcast und gateway
# sind hierbei optional):
# auto eth0
# iface eth0 inet static
#     address 192.168.0.42
#     network 192.168.0.0
#     netmask 255.255.255.0
#     broadcast 192.168.0.255
#     gateway 192.168.0.1
</screen></informalexample>

Tragen Sie die Adresse Ihres/Ihrer Nameserver(s) sowie
Suchregeln in <filename>/etc/resolv.conf</filename> ein:

<informalexample><screen>
# editor /etc/resolv.conf
</screen></informalexample>

Eine einfache <filename>/etc/resolv.conf</filename>:

<informalexample><screen>
search hqdom.local\000
nameserver 10.1.1.36
nameserver 192.168.9.100
</screen></informalexample>

Geben Sie den Hostnamen Ihres Systems ein (zwischen 2 und 63 Stellen lang):

<informalexample><screen>
# echo DebianHostName &gt; /etc/hostname
</screen></informalexample>

Wenn Sie mehrere Netzwerkkarten haben, sollten Sie die Namen der
Treibermodule in <filename>/etc/modules</filename> in die richtige
Reihenfolge bringen. Während des Bootens wird dann jede Karte die
Schnittstellenbezeichnung (eth0, eth1, etc.) bekommen, die Sie erwarten.

</para>
   </sect3>

   <sect3>
   <title>Zeitzone, Benutzer und APT einrichten</title>
<para>

Setzen Sie die Zeitzone, fügen Sie einen normalen Benutzer hinzu und wählen
Sie die Paketquellen für <command>apt</command>, indem Sie Folgendes ausführen:

<informalexample><screen>
# /usr/sbin/base-config new
</screen></informalexample>

</para>
   </sect3>

   <sect3>
   <title>Die lokalen Einstellungen konfigurieren</title>
<para>

Um Ihre lokalen Einstellungen anzupassen, wenn Sie nicht Englisch
verwenden möchten, installieren Sie das Paket locales und konfigurieren
es:

<informalexample><screen>
# apt-get install locales
# dpkg-reconfigure locales
</screen></informalexample>

BEACHTEN SIE: APT muss vor diesem Schritt eingerichtet werden, z.B. während
der base-config-Phase. Bevor Sie locales mit anderen Zeichensätzen als ASCII oder
latin1 verwenden, lesen Sie das dazugehörige "localization"-HOWTO.

</para>
   </sect3>
  </sect2>

  <sect2>
  <title>Einen Kernel installieren</title>
<para>

Wenn Sie vorhaben, dieses System zu booten, benötigen Sie wahrscheinlich
einen Linux-Kernel und einen Bootloader. Sie finden verfügbare, bereits
fertig paketierte Kernel mit dem Befehl

<informalexample><screen>
# apt-cache search kernel-image
</screen></informalexample>

Um einen Kernel Ihrer Wahl zu installieren, benutzen Sie seinen Paketnamen.

<informalexample><screen>
# apt-get install kernel-image-2.X.X-arch-etc
</screen></informalexample>

</para>
  </sect2>

  <sect2>
<title>Den Bootloader einrichten</title>
<para>

Um Ihr &debian;-System bootfähig zu machen, richten Sie Ihren Bootloader ein,
so dass er den installierten Kernel mit Ihrer neuen root-Partition startet.
Bedenken Sie, dass debootstrap keinen Bootloader installiert, allerdings
können Sie apt-get in Ihrer Debian-chroot-Umgebung benutzen, um dies zu
erledigen.

</para><para arch="i386">

Lesen Sie <userinput>info grub</userinput> oder <userinput>man
lilo.conf</userinput>, um Informationen über die Einrichtung des Bootloaders
zu bekommen. Wenn Sie das Betriebssystem, das Sie zur Installation von Debian benutzt
haben, behalten möchten, müssen Sie lediglich einen Eintrag zur vorhandenen
grub-<filename>menu.lst</filename> oder zu <filename>lilo.conf</filename>
hinzufügen. Die Datei <filename>lilo.conf</filename> können Sie auch auf Ihr
neues Debian-System kopieren und dort bearbeiten. Danach rufen Sie lilo auf
(bedenken Sie, lilo nutzt die <filename>lilo.conf</filename> relativ zum
System, von dem aus Sie es aufrufen).

</para><para arch="i386">

Hier ein grundsätzliches Beispiel einer <filename>/etc/lilo.conf</filename>:

<informalexample><screen>
boot=/dev/hda6
root=/dev/hda6
install=/boot/boot-menu.b
delay=20
lba32
image=/vmlinuz
label=Debian
</screen></informalexample>

</para><para arch="powerpc">

Lesen Sie <userinput>man yaboot.conf</userinput>, um Informationen über
die Einrichtung des Bootloaders zu bekommen. Wenn Sie das Betriebssystem, das Sie
zur Installation von Debian benutzt haben, behalten möchten, müssen Sie
lediglich einen Eintrag für das Debian-System zur vorhandenen
<filename>yaboot.conf</filename> hinzufügen.
Sie können auch die Datei <filename>yaboot.conf</filename> auf Ihr
neues Debian-System kopieren und dort bearbeiten. Danach rufen Sie ybin auf
(bedenken Sie, ybin nutzt die <filename>yaboot.conf</filename> relativ zum
System, von dem aus Sie es aufrufen).

</para><para arch="powerpc">

Hier ein grundsätzliches Beispiel einer <filename>/etc/yaboot.conf</filename>:

<informalexample><screen>
boot=/dev/hda2
device=hd:
partition=6
root=/dev/hda6
magicboot=/usr/lib/yaboot/ofboot
timeout=50
image=/vmlinux
label=Debian
</screen></informalexample>

Auf einigen Maschinen müssen Sie unter Umständen <userinput>ide0:</userinput>
benutzen statt <userinput>hd:</userinput>.

</para>
  </sect2>
 </sect1>
