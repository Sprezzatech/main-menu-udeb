<!-- retain these comments for translator revision tracking -->
<!-- original version: 24321 -->

  <sect3 arch="ia64">
  <title>Den <command>ELILO</command>-Bootloader auf Festplatte installieren</title>
<para>

Der &architecture;-Bootloader heißt <quote>elilo</quote>. Er baut auf dem
<quote>lilo</quote>-Bootloader für die x86-Architektur auf und benutzt eine
ähnliche Konfigurationsdatei. Allerdings schreibt er nicht in den MBR oder
in den Boot-Record einer Partition, sondern kopiert die benötigten Dateien
auf eine separate FAT-formatierte Partition und modifiziert das Menü des
<guimenuitem>EFI-Boot-Managers</guimenuitem> in der Firmware, sodass es auf
die entsprechenden Dateien in der EFI-Partition verweist. Der
<command>elilo</command>-Bootloader besteht eigentlich aus zwei Teilen.
Der <filename>/usr/sbin/elilo</filename>-Befehl verwaltet die Partition und
kopiert die Dateien. Das <filename>elilo.efi</filename>-Programm wird auf
die EFI-Partition kopiert und dann von dem <quote>EFI-Boot-Manager</quote>
gestartet, um die eigentliche Arbeit (das Laden und Starten des Linux-Kernels)
zu verrichten.

</para><para>

Die Konfiguration und Installation von <quote>elilo</quote> ist der letzte
Schritt der Basisinstallation. Der &d-i; zeigt alle Partitionen in einer
Liste an, die möglicherweise die EFI-Partition sein könnten. Wählen Sie die
Partition aus, die Sie zu einem früheren Zeitpunkt der Installation eingerichtet
haben, typischerweise eine Partition auf der gleichen Festplatte wie das
<emphasis>root</emphasis>-Dateisystem.

</para>

  <warning><title>Wählen Sie die richtige Partition aus!</title>

<para>

Die Kriterien für die EFI-Partition: sie muss FAT-formatiert
sein und das <emphasis>boot</emphasis>-Flag muss gesetzt sein (sie muss
bootfähig sein). &d-i; zeigt unter Umständen eine Auswahl mehrerer Partitionen
an, abhängig davon, welche Partitionen er beim Durchsuchen aller Festplatten
des Systems gefunden hat (inklusive EFI-Partitionen anderer System-Laufwerke
und EFI-Diagnose-Partitionen). Bedenken Sie, dass die Partition während der
Installation von <command>elilo</command> formatiert werden könnte; dabei
werden alle vorher vorhandenen Daten gelöscht!

</para></warning>

  </sect3>

  <sect3 arch="ia64">
  <title>Inhalt der EFI-Partition</title>

<para>

Die EFI-Partition ist eine im FAT-Dateisystem formatierte Partition
auf einer Festplatte des Systems, üblicherweise auf der gleichen Platte
wie das <emphasis>root</emphasis>-Dateisystem.
Sie wird normalerweise auf einem laufenden Systemen nicht gemountet (ins Dateisystem
eingehängt), da Sie nur vom <quote>EFI-Boot-Manager</quote> genutzt
wird, um das System zu starten, und vom <command>elilo</command>-Installer,
der dabei direkt auf das Dateisystem schreibt.
Das <command>/usr/sbin/elilo</command>-Werkzeug schreibt während der
Installation die folgenden Dateien in das Verzeichnis <filename>efi/debian</filename>
auf der EFI-Partition.
Bedenken Sie, dass der <quote>EFI-Boot-Manager</quote> diese Dateien
unter dem Pfad <filename>fs<replaceable>n</replaceable>:\efi\debian</filename> findet.
Es können später noch weitere Dateien in diesem Dateisystem vorhanden sein, wenn
das System aktualisiert oder neu konfiguriert wird.

</para>

<variablelist>

<varlistentry>
<term><filename>elilo.conf</filename></term>
<listitem><para>

Dies ist die Konfigurationsdatei, die der Bootloader beim Start einliest.
Es ist eine Kopie von <filename>/etc/elilo.conf</filename>, wobei die
Dateinamen neu erzeugt wurden, sodass Sie auf die Dateien in der EFI-Partition
verweisen.

</para></listitem></varlistentry>

<varlistentry>
<term><filename>elilo.efi</filename></term>
<listitem><para>

Dies ist das Bootloader-Programm, das der <quote>EFI-Boot-Manager</quote>
startet, um das System zu booten. Es ist das Programm hinter dem
<guimenuitem>Debian GNU/Linux</guimenuitem>-Menüeintrag im Command-Menü des
<quote>EFI-Boot-Managers</quote>.

</para></listitem></varlistentry>

<varlistentry>
<term><filename>initrd.img</filename></term>
<listitem><para>

Dies ist das Initial-root-Dateisystem, das benutzt wird, um den Kernel zu
booten. Es ist eine Kopie von der Datei, die in
<filename>/etc/elilo.conf</filename> festgelegt ist. In einer Standard-Debian-Installation
wäre dies die Datei in <filename>/boot</filename>, auf die der
symbolische Link <filename>/initrd.img</filename> verweist.

</para></listitem></varlistentry>

<varlistentry>
<term><filename>readme.txt</filename></term>
<listitem><para>

Dies ist eine kleine Textdatei, die eine Warnung darüber enthält,
dass der Inhalt des Verzeichnisses von <command>elilo</command>
kontrolliert wird und dass jegliche manuellen Änderungen beim
nächsten Start von <filename>/usr/sbin/elilo</filename> verloren sind.

</para></listitem></varlistentry>

<varlistentry>
<term><filename>vmlinuz</filename></term>
<listitem><para>

Dies ist der komprimierte Kernel selbst.
Es ist eine Kopie der Datei, die in <filename>/etc/elilo.conf</filename>
konfiguriert ist. In einer Standard-Debian-Installation wäre das die
Datei in <filename>/boot</filename>, auf die der symbolische Link
<filename>/vmlinuz</filename> verweist.

</para></listitem></varlistentry>

</variablelist>

  </sect3>
