<!-- retain these comments for translator revision tracking -->
<!-- $Id: elilo-installer.xml 22935 2004-10-09 18:36:20Z fjpop-guest $ -->

  <sect3 arch="ia64">
  <title>Установить системный загрузчик <command>ELILO</command> на жёсткий диск</title>
<para>Для архитектуры &architecture; системный загрузчик называется <quote>elilo</quote>. Он сделан по образу системного загрузчика <quote>lilo</quote> для архитектуры x86 и использует похожий конфигурационный файл. Однако, вместо установки в MBR или загрузочную запись раздела, необходимые файлы копируются в отдельный дисковый раздел с файловой системой FAT и модифицируется меню <guimenuitem>EFI Boot Manager</guimenuitem> в микропрограмме, указывая на файлы в разделе EFI. Системный загрузчик <command>elilo</command> состоит из двух частей. Команда <filename>/usr/sbin/elilo</filename> управляет разделом и копирует на него файлы. Программа <filename>elilo.efi</filename> копируется в раздел EFI и затем запускается <quote>менеджером загрузки EFI</quote>, чтобы загрузить и выполнить ядро Linux. </para><para>Настройка и установка <quote>elilo</quote> завершится на последнем шаге установки базовых пакетов. &d-i; предложит вам список дисковых разделов, которые он сочтёт подходящими для раздела EFI. Выберите раздел, который вы создали программой установки ранее; обычно этот раздел находится на том же диске что и <emphasis>корневая</emphasis> файловая система. </para>

  <warning><title>Выберите правильный раздел!</title>

<para>Критерии выбора раздела: должен иметь файловую систему FAT и установленный флаг <emphasis>boot</emphasis>. &d-i; может показать несколько вариантов, в зависимости от того, что найдётся при сканировании всех дисков системы, включая разделы EFI других системных дисков и разделов диагностики EFI. Помните, <command>elilo</command> может отформатировать раздел во время установки, стерев его содержимое! </para></warning>

  </sect3>

  <sect3 arch="ia64">
  <title>EFI Partition Contents</title>

<para>

The EFI partition is a FAT filesystem format partition on one of the
hard disks of the system, usually the same disk that contains the
<emphasis>root</emphasis> filesystem.
It is normally not mounted on a running system as it is only needed
by the <quote>EFI Boot Manager</quote> to load the system and the
installer part of the <command>elilo</command> writes to the filesystem
directly.
The <command>/usr/sbin/elilo</command> utility writes the following files
into the <filename>efi/debian</filename> directory of the EFI
partition during the installation.
Note that the <quote>EFI Boot Manager</quote> would find these files
using the path <filename>fs<emphasis>n</emphasis>:\efi\debian</filename>.
There may be other files in this filesystem as well over time as
the system is updated or re-configured.

</para>

<variablelist>

<varlistentry>
<term><filename>elilo.conf</filename></term>
<listitem><para>

This is the configuration file read by the boot loader when it starts.
It is a copy of the <filename>/etc/elilo.conf</filename> with
the filenames re-written to refer to files in the EFI partition.

</para></listitem></varlistentry>

<varlistentry>
<term><filename>elilo.efi</filename></term>
<listitem><para>

This is the boot loader program that the <quote>EFI Boot Manager</quote>
runs to boot the system.
It is the program behind the <guimenuitem>Debian GNU/Linux</guimenuitem>
menu item of the <quote>EFI Boot Manager</quote> command menu.

</para></listitem></varlistentry>

<varlistentry>
<term><filename>initrd.img</filename></term>
<listitem><para>

This is the initial root filesystem used to boot the kernel.
It is a copy of the file referenced in the
<filename>/etc/elilo.conf</filename>.
In a standard Debian installation it would be the file in
<filename>/boot</filename> pointed to by the symbolic link
<filename>/initrd.img</filename>.

</para></listitem></varlistentry>

<varlistentry>
<term><filename>readme.txt</filename></term>
<listitem><para>

This is a small text file warning you that the contents of the
directory are managed by the <command>elilo</command> and that
any local changes would be lost at the next time
<filename>/usr/sbin/elilo</filename> is run.

</para></listitem></varlistentry>

<varlistentry>
<term><filename>vmlinuz</filename></term>
<listitem><para>

This is the compressed kernel itself.
It is a copy of the file referenced in the
<filename>/etc/elilo.conf</filename>.
In a standard Debian installation it would be the file in
<filename>/boot</filename> pointed to by the symbolic link
<filename>/vmlinuz</filename>.

</para></listitem></varlistentry>

</variablelist>

  </sect3>
