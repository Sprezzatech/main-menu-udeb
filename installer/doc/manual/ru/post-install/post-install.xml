<!-- Start of file post-install/post-install.xml -->
<!-- $Id: post-install.xml 16559 2004-06-01 03:14:15Z rudy-guest $ -->

<chapter id="post-install">
 <title
>Следующие шаги и что делать дальше</title>


<!-- Start of file post-install/new-to-unix.xml -->
<!-- $Id: new-to-unix.xml 16556 2004-06-01 02:57:43Z rudy-guest $ -->


 <sect1 id="unix-intro">
 <title
>Если вы новичок в Unix</title>
<para
>Если вы новичок в Unix, то, вероятно, вы должны выйти из дому и купить пару книжек и что-нибудь прочитать. <ulink url="ftp://rtfm.mit.edu/pub/usenet/news.answers/unix-faq/faq/"
> Unix FAQ</ulink
> содержит много ссылок на книги и группы новостей Usenet, которые должы помочь с выбором. Также, вы можете посмотреть <ulink url="http://www.camelcity.com/~noel/usenet/cuuf-FAQ.htm"
> User-Friendly Unix FAQ</ulink
>. </para
><para
>Linux &mdash; это одна из реализаций Unix. <ulink url="http://www.tldp.org/"
>Linux Documentation Project (LDP)</ulink
> собирает различные HOWTO и электронные книги, посвящённые Linux. Большинство из этих документов можно получить просто установив пакет <classname
>doc-linux-html</classname
> (HTML версия) или пакет <classname
>doc-linux-text</classname
> (ASCII версия), а затем перейти в <filename
>/usr/share/doc/HOWTO</filename
>. Переводы LDP HOWTO также доступны в виде пакетов Debian. </para>

 </sect1>
<!--   End of file post-install/new-to-unix.xml -->

<!-- Start of file post-install/orientation.xml -->
<!-- $Id: orientation.xml 16557 2004-06-01 03:04:31Z rudy-guest $ -->


 <sect1 id="debian-orientation"
><title
>Самостоятельное ориентирование в Debian</title>
<para
>Debian слегка отличается от других дистрибутивов. Даже если вы знакомы с другими дистрибутивами Linux, есть вещи, которые вы должны знать о Debian, чтобы поддерживать систему в рабочем состоянии. Эта глава содержит материалы, которые помогут вам ориентироваться; она не является руководством по использованию Debian, она всего лишь кратко описывает систему для занятых людей. </para>

  <sect2
><title
>Система управления пакетами Debian</title>
<para
>Наиболее важно разобраться в системе управления пакетами Debian. В сущности, большая часть системы находится под контролем системы управления пакетами. Система состоит: <itemizedlist
> <listitem
><para
> <filename
>/usr</filename
> (кроме <filename
>/usr/local</filename
>) </para
></listitem
> <listitem
><para
> <filename
>/var</filename
> (вы можете сделать <filename
>/var/local</filename
> и это безопасно) </para
></listitem
> <listitem
><para
> <filename
>/bin</filename
> </para
></listitem
> <listitem
><para
> <filename
>/sbin</filename
> </para
></listitem
> <listitem
><para
> <filename
>/lib</filename
> </para
></listitem
> </itemizedlist
> Например, если вы заместите <filename
>/usr/bin/perl</filename
>, он будет работать, но позже, если вы обновите пакет <classname
>perl</classname
>, файл, который вы положили будет заменён. Эксперты могут обойти это поставив пакету флаг ``hold'' в <command
>aptitude</command
>. </para
><para
>Один из лучших методов установки пакетов это apt. Вы можете использовать версию для командной строки <command
>apt-get</command
> или полноэкранной текстовой версией <application
>aptitude</application
>. Заметим, что apt также позволяет объединить main, contrib и non-free, так что вы можете устанавливать имеющие экспортные ограничения пакеты вместе с обычными. </para>
  </sect2>

  <sect2
><title
>Управление версиями приложений</title>
<para
>Альтернативность версий приложений управляется с помощью программы update-alternatives. Если вы работаете с несколькими версиями одного приложения, прочитайте страницу руководства к update-alternatives. </para>
  </sect2>

  <sect2
><title
>Управление заданиями cron</title>
<para
>Любые работы по администрированию системы должны распологаться в каталоге <filename
>/etc</filename
>, так как они являются конфигурационными файлами. Если у вас есть ежедневные, еженедельные или ночные задания cron для суперпользователя, поместите их в <filename
>/etc/cron.{daily,weekly,monthly}</filename
>. Они вызываются из <filename
>/etc/crontab</filename
> и запускаются в алфавитном порядке. </para
><para
>С другой стороны, если задания: (а) нужно запускать от определённого пользователя или (b) нужно запустить в определённое время или с определённой частотой, вы можете использовать или <filename
>/etc/crontab</filename
>, или, что лучше, <filename
>/etc/cron.d/имя_задания</filename
>. Это особые файлы, они содержат дополнительное поле, позволящее вам указать пользователя от которого будет выполняться задание cron. </para
><para
>В любом случае, просто отредактируйте файлы, и cron обнаружит эти изменения автоматически. Не нужно запускать специальную команду. Подробная информация доступна в cron(8), crontab(5) и <filename
>/usr/share/doc/cron/README.Debian</filename
>. </para>
  </sect2>
 </sect1>
<!--   End of file post-install/orientation.xml -->

<!-- Start of file post-install/reactivating-win.xml -->
<!-- $Id: reactivating-win.xml 23058 2004-10-12 23:51:17Z cjwatson $ -->


 <sect1 arch="i386" id="reactivating-win">
 <title
>Реактивация DOS и Windows</title>
<para
>После установки базовой системы и изменения<emphasis
>главной загрузочной записи (MBR)</emphasis
>, вы сможете загружать Linux, но вероятно ничего более. Это зависит от вашего выбора во время установки. Эта глава опишет, как вы можете реактивировать вашу старую систему, например, чтобы стала возможной загрузка DOS или Windows снова. </para
><para
><command
>LILO</command
> это менеджер загрузки, с помощью которого вы можететакже загружать другие операционные системы кроме Linux, которые подчиняются PC соглашениям. Менеджер загрузки настраивается через файл <filename
>/etc/lilo.conf</filename
>. После редактирования этого файла, вы должны выполнить программу <command
>lilo</command
>. Это нужно для того, чтобы ваши изменения вступили в силу. </para
><para
>Важными частями файла<filename
>lilo.conf</filename
> являются строки, содержащие ключевые слова <userinput
>image</userinput
> и <userinput
>other</userinput
>, а также строки, стоящие после них. Они используются для описания системы, которая может быть загружена с помощью <command
>LILO</command
>. Такая система может иметь ядро (<userinput
>image</userinput
>), корневой раздел, дополнительные параметры ядра и так далее, а также конфигурацию для загрузки другой, не Linux, (<userinput
>other</userinput
>) операционной системы. Эти ключевые слова могут быть использованы несколько раз. Порядок этих систем в файле конфигурации важен, так как им определяется, какая система будет грузиться автоматически после, например, таймаута(<userinput
>delay</userinput
>) если <command
>LILO</command
> не остановленонажатием клавиши <keycap
>shift</keycap
>. </para
><para
>После установки Debian, только текущая система прописана в загрузку с помощью <command
>LILO</command
>. Если нужно загрузить другое ядро Linux, вы можете отредактировать файл конфигурации <filename
>/etc/lilo.conf</filename
>, добавив следующие строки: <informalexample
><screen>

&additional-lilo-image;

</screen
></informalexample
> Для простой настройки достаточно только две первые строки. Если вы хотите больше узнать об этих двух параметрах, обраиттесь кдокументации на <command
>LILO</command
>. Её можно найти в каталоге<filename
>/usr/share/doc/lilo/</filename
>. Файл называется<filename
>Manual.txt</filename
>. Чтобы быстро войти в мир загрузки систем также посмотритестраницы руководства на <command
>LILO</command
> <filename
>lilo.conf</filename
>, где описаны ключевые слова файла конфигурации, а в странице <filename
>lilo</filename
> описана установка новой конфигурации в загрузочный сектор. </para
><para
>Обратите внимание, что в &debian; есть и другие системные загрузчики, такие как GRUB (в пакете <classname
>grub</classname
>), CHOS (в пакете <classname
>chos</classname
>), Extended-IPL (в пакете <classname
>extipl</classname
>), loadlin (в пакете <classname
>loadlin</classname
>) и другие. </para>
 </sect1>
<!--   End of file post-install/reactivating-win.xml -->

<!-- Start of file post-install/further-reading.xml -->
<!-- $Id: further-reading.xml 16554 2004-06-01 02:47:52Z rudy-guest $ -->

 <sect1 id="further-reading"
><title
>Что почитать</title>
<para
>Если вам требуется информация по определённой программе, сначала, попробуйте выполнить <userinput
>man <replaceable
>название программы</replaceable
></userinput
> или <userinput
>info <replaceable
>название программы</replaceable
></userinput
>. </para
><para
>Также, есть много полезной документации в каталоге <filename
>/usr/share/doc</filename
>. В частности, <filename
>/usr/share/doc/HOWTO</filename
> и <filename
>/usr/share/doc/FAQ</filename
> содержать море интересной документации. Информацию об ошибках смотрите в <filename
>/usr/share/doc/debian/bug*</filename
>. Debian-специфичные вещи на определённую программу смотрите в <filename
>/usr/share/doc/(имя пакета )/README.Debian</filename
>. </para
><para
><ulink url="http://www.debian.org/"
>Веб сайт Debian</ulink
> содержит огромное количество документации по Debian. В частности, посмотрите <ulink url="http://www.debian.org/doc/FAQ/"
>Debian FAQ</ulink
> и <ulink url="http://lists.debian.org/"
>архивы списков рассылки Debian</ulink
>. Можно обратиться с вопросом к сообществу Debian; как подписаться на одну или более списков рассылки Debian смотрите на странице <ulink url="http://www.debian.org/MailingLists/subscribe"
> Подписка на списки рассылки</ulink
>. </para
><para
>Общая информация о GNU/Linux есть в <ulink url="http://www.tldp.org/"
>проекте документации Linux</ulink
>. Здесь вы найдёте разные HOWTO и ссылки на другие превосходные источники информации на компоненты системы GNU/Linux. </para>

 </sect1>
<!--   End of file post-install/further-reading.xml -->

<!-- Start of file post-install/kernel-baking.xml -->
<!-- $Id: kernel-baking.xml 23678 2004-11-08 07:07:16Z vorlon $ -->

 <sect1 id="kernel-baking"
><title
>Сборка нового ядра</title>
<para
>Для чего некоторые люди пересобирают ядро? Обычно этого делать не нужно, так как ядро, устанавливаемое по умолчанию в Debian, подходит для многих конфигураций. Однако, полезно пересобрать ядро в следующих случаях: <itemizedlist>
<listitem
><para
>если установлено специфичное оборудование, или возникает конфликт аппаратного обеспечения со стандартным ядром </para
></listitem>
<listitem
><para
>если нужна поддержка оборудования или параметры, которых нет в готовом ядре, например APM или SMP </para
></listitem>

<listitem arch="i386"
><para
>В сборках compact и idepci не включёна поддержка звука. Хотя изначально в ядре эта поддержка есть, она может не заработать по некоторым причинам. </para
></listitem>
<listitem
><para
>для оптимизации ядра, удаляя ненужные драйверы для уменьшения времени загрузки </para
></listitem>
<listitem
><para
>чтобы задействовать параметры ядра, которые не поддерживаются в ядре по умолчанию(например, межсетевой экран) </para
></listitem>
<listitem
><para
>для установки обновлённого или разрабатываемого ядра </para
></listitem>
<listitem
><para
>удивить друзей, попробовать новые фишки </para
></listitem>
</itemizedlist>

</para>

  <sect2
><title
>Управление образами ядра</title>
<para
>Не бойтесь пересобирать ядро. Это забавно и полезно. </para
><para
>Чтобы собрать ядро по технологии Debian, вам потребуются некоторые пакеты: <classname
>kernel-package</classname
>, <classname
>kernel-source-&kernelversion;</classname
> (последняя версия на время написания), <classname
>fakeroot</classname
> и некоторые другие, которые, вероятно, уже установлены (в <filename
>/usr/share/doc/kernel-package/README.gz</filename
> есть полный список). </para
><para
>С помощью этого метода создаётся .deb файл исходных текстов ядра, а также, если у вас имеются нестандартные модули, делается .deb файл с синхронизированными зависимостями. Это наилучший способ управления образами ядра; в <filename
>/boot</filename
> лежит ядро, System.map и журнальный конфигурационный файл от сборки. </para
><para
>Заметим, что вам <emphasis
>не обязательно</emphasis
> собирать ядро``по технологии Debian''; но мы пришли к выводу, что управлять ядрами с помощью системы управления пакетами на самом деле безопаснее и легче. Фактически, вы можете получить исходные тексты ядра прямо уЛинуса, а не в виде <classname
>kernel-source-&kernelversion;</classname
>, собранного с помощью <classname
>kernel-package</classname
>. </para
><para
>Заметим, что полную документацию по использованию <classname
>kernel-package</classname
> можно найти в <filename
>/usr/share/doc/kernel-package</filename
>. Этот раздел содержит лишь краткое руководство. </para
><para
>Далее мы предполагаем, что исходный текст ядра лежит в каталоге <filename
>/usr/local/src</filename
> и что версия ядра &kernelversion;. От суперпользователя создайте каталог <filename
>/usr/local/src</filename
> и измените владельца этого каталога на вашу обычную не суперпользовательскую учётную запись. Из под обычного пользователя, перейдите в каталог, куда вы хотите распаковать исходный текст ядра (<userinput
>cd /usr/local/src</userinput
>), распакуйте исходный текст ядра (<userinput
>tar xjf /usr/src/kernel-source-&kernelversion;.tar.bz2</userinput
>), перейдите в получившийся каталог (<userinput
>cd kernel-source-&kernelversion;/</userinput
>). </para
><para
>Теперь вы можете выполнить конфигурацию ядра. Если установлены, настроены и запущены X11, то запустите <userinput
>make xconfig</userinput
>, иначе <userinput
>make menuconfig</userinput
> (вам потребуется установить пакет <classname
>ncurses-dev</classname
>). Внимательно прочитайте интерактивную документацию и внимательно выберите нужные параметры. Если про что-то вам непонятно, обычно лучше включить драйвер устройства (программное обеспечение, которое управляет установленным оборудованием, например картами Ethernet, SCSI контроллерами и так далее). Будьте осторожны: для других параметров, не относящихся к определённому аппаратному обеспечению, нужно оставить значения по умолчанию, если вы не понимаете, что они делают. Не забудьте выбрать ``Kernel module loader'' в ``Loadable module support'' <phrase arch="alpha"
> и ``Enhanced Real Time Clock Support'' в ``Character devices'' (они </phrase
> <phrase arch="not-alpha"
> (</phrase
> не включены по умолчанию). Если их не включить, возникнут проблемы с установкой Debian. </para
><para
>Очистите дерево исходных текстов и сбросьте параметры <classname
>kernel-package</classname
>. Для этого выполните <userinput
>make-kpkg clean</userinput
>. </para
><para
>Теперь соберите ядро: <userinput
>fakeroot make-kpkg --revision=custom.1.0 kernel_image</userinput
>. Номер версии ``1.0'' можно изменить; этот номер версии нужен только для отслеживания ваших сборок. Более того, вы можете добавить любое слово вместо ``custom'' (например имя машины). Сборка ядра может занять некоторое время, в зависимости от мощности машины. </para
><para condition="supports-pcmcia"
>Если требуется поддержка PCMCIA, вам нужно установить пакет<classname
>pcmcia-source</classname
>. Распакуйте сжатый tar файл с правами суперпользователя в каталог <filename
>/usr/src</filename
> (это важно, так как модули должны находится там где их будут искать, то есть в, <filename
>/usr/src/modules</filename
>). Затем, с правами суперпользователя, выполните <userinput
>make-kpkg modules_image</userinput
>. </para
><para
>После завершения сборки, вы можете установить собранное ядро как обычный пакет.От суперпользователя выполните <userinput
>dpkg -i ../kernel-image-&kernelversion;-<replaceable
>subarchitecture</replaceable
>_custom.1.0_&architecture;.deb</userinput
>. Часть <replaceable
>subarchitecture</replaceable
> &mdash; это необязательная субархитектура, <phrase arch="i386"
> например ``i586'', </phrase
> зависящая от установленных параметров ядра. <userinput
>dpkg -i kernel-image...</userinput
> установит ядро вместе с некоторыми полезными файла поддержки. Например, будет правильно установлен <filename
>System.map</filename
> (полезен при отладке проблем с ядром), а также <filename
>/boot/config-&kernelversion;</filename
>, содержащий параметры сборки выполняемого ядра. Ваш новый пакет <classname
>kernel-image-&kernelversion;</classname
> достаточно умён, чтобы автоматически использовать системный загрузчик платформы для обновления загрузки, что позволяет не делать перезапуск обновления системного загрузчика вручную. Если вы создали пакет с модулями, например, если у вас есть PCMCIA, то вам нужно установить и этот пакет. </para
><para
>Настало время перезагрузить систему: внимательно прочитайте все предупреждения, которые могут появиться, затем наберите <userinput
>shutdown -r now</userinput
>. </para
><para
>Полная информация по <classname
>kernel-package</classname
> лежит в каталоге <filename
>/usr/share/doc/kernel-package</filename
>. </para>
  </sect2>
 </sect1>
<!--   End of file post-install/kernel-baking.xml -->

</chapter>
<!--   End of file post-install/post-install.xml -->
