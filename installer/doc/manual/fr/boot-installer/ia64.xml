<?xml version="1.0" encoding="ISO-8859-1"?>
<!-- original version: 18973 untranslated -->

  <sect2 arch="ia64"><title>Amorcer à partir d'un cédérom</title>

&boot-installer-intro-cd.xml;

<note>
<title>Contenus du cédérom</title>
 
<para>
Trois variantes des cédéroms d'installation existent.
Le cédérom <emphasis>Business Card</emphasis> offre une installation
minimale qui tient sur ce support de petite taille. Il exige une connexion
au réseau pour installer le reste du système de base et rendre le système
utilisable. Le cédérom <emphasis>Network Install</emphasis> possède tous les
paquets du système de base, mais il exige une connexion au réseau pour 
installer des paquets supplémentaires nécessaires à un système complet.
L'ensemble des cédéroms Debian peut installer un système complet sans avoir 
besoin du réseau.
</para>
</note>
<para>

he IA-64 uses the next generation Extensible Firmware Interface (EFI)
from Intel.
Unlike the traditional x86 BIOS which knows little about the boot
device other than the partition table and Master Boot Record (MBR),
the EFI can read and write files from FAT16 or FAT32 formatted disk
partitions.
This simplifies the often arcane process of starting a system.
The system boot loader and the EFI firmware that supports it have
a full filesystem to store the files necessary for booting the
machine.
This means that the system disk on an IA-64 system has an additional
disk partition dedicated to the EFI instead of the simple MBR or boot
block on more conventional systems.

</para><para>
The Debian CD contains a small version of the EFI partition where
<command>elilo</command>, its configuration file, the installer's kernel,
 and initial filesystem (initrd) are located.
The running system also contains an EFI partition where the necessary
files for booting the system reside.
These files are readable from the EFI Shell as described below.

</para><para>
Most of the details of how the <command>elilo</command> actually loads and
starts a system for the most part transparent to the system installer.
However, the installer must set up an EFI partition prior to installing
he base system.  Otherwise, the installation of <command>elilo</command>
will fail, rendering the system un-bootable.
The EFI partition is allocated and formatted in the partitioning step
of the installation prior to loading any packages on the system disk.
The partitioning task also verifies that a suitable EFI partition is
present before allowing the installation to proceed.

</para><para>
The EFI Boot Manager is started as the last step of the firmware
initialization.
It displays a menu list from which the user can select
an option.
Depending on the model of system and what other software has been
loaded on the system, this menu may be different from one system
to another.
There should be two menu items displayed,
<command>Boot Option Maintenance Menu</command> and
<command>EFI Shell (Built-in)</command>.
Using the first option is preferred, however, if that
option is not available or the CD for some reason does not
boot with it, use the second option.
</para>
  <warning>
  <title>IMPORTANT</title>
<para>
The EFI Boot Manager will select a default boot action, typically
the first menu choice, within a pre-set number of seconds.
This is indicated by a countdown at the bottom of the screen.
Once the timer expires and the systems starts the default action,
you will have to reboot the machine in order to continue the installation.
</para>
  </warning>

 <sect3 arch="ia64" id="bootable-cd">
  <title>Option 1: Booting from the Boot Option Maintenance Menu</title>
<para>

</para>

<itemizedlist>

<listitem><para>
Insert the CD in the DVD/CD drive and reboot the machine.
The firmware will display the EFI Boot Manager page and menu after
it completes its system initialization.

</para></listitem>

<listitem><para>
Select <command>Boot Maintenance Menu</command> from the menu
with the arrow keys and press <command>ENTER</command>.
This will display a new menu.
</para></listitem>
<listitem><para>
Select <command>Boot From a File</command> from the menu
with the arrow keys and press <command>ENTER</command>.
This will display a list of devices probed by the firmware.
You should see two menu lines containing either the label
<command>Debian Inst [Acpi ...</command> or
<command>Removable Media Boot</command>.
If you examine the rest of the menu line, you will notice that
the device and controller information should be the same.
</para></listitem>

<listitem><para>
You can choose either of the entries that refer to the CD/DVD
drive.
Select your choice with the arrow keys and press <command>ENTER</command>.
If you choose <command>Removable Media Boot</command> the machine
will immediately start the boot load sequence.
If you choose <command>Debian Inst [Acpi ...</command> instead, it
will display a directory listing of the bootable portion of the
CD, requiring you to proceed to the next (additional) step.
</para></listitem>

<listitem><para>
You will only need this step if you chose
<command>Debian Inst [Acpi ...</command>.
The directory listing will also show
<command>[Treat like Removable Media Boot]</command> on the next to
the last line.
Select this line with the arrow keys and press <command>ENTER</command>.
This will start the boot load sequence.
</para></listitem>

</itemizedlist>
<para>
These steps start the Debian boot loader which will display a
menu page for you to select a boot kernel and options.
Proceed to selecting the boot kernel and options.

</para>
</sect3>




  <sect3 arch="ia64" id="boot-with-efi">
  <title>Option 2: Booting from the EFI Shell</title>
<para>

If, for some reason, option 1 is not successful, reboot the machine
and when the EFI Boot Manager screen appears there should be
one option called <command>EFI Shell [Built-in]</command>.
Boot the Debian Installer CD with the following steps:

</para>

<itemizedlist>

<listitem><para>
Insert the CD in the DVD/CD drive and reboot the machine.
The firmware will display the EFI Boot Manager page and menu after
it completes system initialization.
</para></listitem>

<listitem><para>
Select <command>EFI Shell</command> from the menu with the arrow keys
and press <command>ENTER</command>.
The EFI Shell will scan all of the bootable devices and display
them to the console before displaying its command prompt.
The recognized bootable partitions on devices will show a device name of
<filename>fs<emphasis>n</emphasis>:</filename>.
f you inserted the CD just before entering the shell, this may
take a few extra seconds as it initializes the CD drive.
</para>
</listitem>

<listitem><para>
Examine the output from the shell looking for the CDROM drive.
It is most likely the <filename>fs0:</filename> device although
other devices with bootable partitions will also show up as
<filename>fs<emphasis>n</emphasis></filename>.
</para></listitem>

<listitem><para>
Enter <command>fs<emphasis>n</emphasis>:</command> and press
<command>ENTER</command> to select that
device where <emphasis>n</emphasis> is the partition number for the
CDROM.  The shell will now display the partition number as its prompt.
</para></listitem>

<listitem><para>
Enter <command>elilo</command> and press <command>ENTER</command>.
This will start the boot load sequence.
</para></listitem>

</itemizedlist>

<para>

As with option 1, these steps start the Debian boot loader which will
display a menu page for you to select a boot kernel and options.
You can also enter the shorter
<command>fs<emphasis>n</emphasis>:elilo</command> command at
the shell prompt.
Proceed to selecting the boot kernel and options.

</para>
</sect3>

<sect3 arch="ia64" id="kernel-option-menu">
  <title>Selecting the Boot Kernel and Options</title>

<para>

The boot loader will display a form with a menu list and a text
window with a <classname>Boot:</classname> prompt.
The arrow keys select an item from the menu and any text typed
at the keyboard will appear in the text window.
There are also help screens which can be displayed by pressing
the appropriate function key.
The <classname>General</classname> help screen explains the menu
choices and the <classname>Params</classname> screen explains
the common command line options.
</para>
   <warning>
   <title>Serial Console</title>
<para>

Some IA64 platforms have both a serial console and a keyboard and
video card which can be configured in the EFI firmware to be
the system console.
The EFI console is capable of displaying and accepting input from
both the keyboard and video and the serial port.
The Linux kernel will take the keyboard and video devices as its
default console if it detects a keyboard during its initialization.
You will have to enable the serial console in the EFI boot
manager and enter
<command>console=ttyS0,9600n8</command> into
the <classname>Boot:</classname> text window to install via
the serial console.
If you are using a serial console and forget to set it in the
command line, you
will be able to select the kernel and enter parameters but both
the display and your input will go dead as soon as the kernel starts,
requiring you to either reboot if your system does not have a keyboard
and video display installed.
</para></warning>

<para>

Consult the <classname>General</classname> help screen for the
description of the kernels and install modes most appropriate
for your installation.
You should also consult <xref linkend="boot-parms"/> below for any additional
parameters that you may want to set in the <classname>Boot:</classname>
text window.
The kernel version you choose selects the kernel version that will be
used for both the installation process and the installed system.
If you encounter kernel problems with the installation, you may also
have those same problems with the system you install.
The following two steps will select and start the install:

</para>

<itemizedlist>
<listitem><para>
Select the kernel version and installation mode most
appropriate to your needs with the arrow keys.
</para></listitem>

<listitem><para>
Enter any boot parameters by typing at the keyboard.
The text will be displayed directly in the text window.
This is where the serial console is set.
</para></listitem>

<listitem><para>
Press <command>ENTER</command>.  This will load and start the
kernel.
The kernel will display its usual initialization messages followed
by the first screen of the Debian Installer.
</para></listitem>

</itemizedlist>
</sect3>

<para>

Proceed to the next chapter to continue the installation where you will
set up the language locale, network, and disk partitions.

</para>
</sect2>

  <sect2 arch="ia64" id="boot-tftp"><title>Démarrer avec TFTP</title>

<para>

Démarrer un système ia64 à partir du réseau demande deux actions spécifiquement
liées à l'architecture. Sur le serveur de démarrage, DHCP et TFTP doivent être
configurés pour lancer <command>elilo</command>. Sur le client, une option 
doit être déclarée dans le gestionnaire de démarrage EFI pour permettre 
l'utilisation du réseau.


</para>
  <sect3 arch="ia64" id="boot-tftp-server"><title>Configuration du serveur</title>
<para>

Une entrée TFTP pour démarrer par le réseau un système ia64 ressemble à 
celle-ci&nbsp;:

<informalexample><screen>

host mcmuffin {
        hardware ethernet 00:30:6e:1e:0e:83;
        fixed-address 10.0.0.21;
        filename "elilo.efi";
}

</screen></informalexample>

Remarquez que le but est de faire marcher <command>elilo.efi</command> sur 
le client.

</para><para>

Créez un sous-répertoire <filename>ia64/</filename> dans le répertoire
tftpboot et remplissez-le avec les fichiers <filename>vmlinuz</filename> et
<filename>initrd.gz</filename> qui sont sur le répertoire netboot de 
l'installateur Debian.

</para><para>

Copiez <filename>elilo.efi</filename> dans le répertoire tftpboot et autorisez
sa lecture à tout le monde. On peut trouver ce fichier dans le paquet
elilo des distributions IA64, ou dans  <filename>/usr/lib/elilo</filename> ou 
dans un sous-répertoire  de <filename>/boot/efi</filename>. Une copie valable
se trouve dans le répertoire netboot de l'installateur Debian.

</para><para>

Créez un fichier <filename>elilo.conf</filename> dans le répertoire tftpboot.
Il sera chargé par <command>elilo.efi</command> quand celui-ci s'exécute sur 
le client. Ce fichier contrôle ce qui se passe ensuite, comme le choix du 
noyau, l'image initrd, etc. Un exemple est donné dans le répertoire netboot 
de l'installateur Debian. Vérifiez son contenu et modifiez-le selon vos 
besoins.
    </para>
<para>

Il est possible d'avoir plusieurs fichiers de configuration pour plusieurs
clients. Nommez-les en utilisant l'adresse IP en notation hexadécimale du 
client, et avec l'extension <filename>.conf</filename> au lieu de 
<filename>elilo.conf</filename>.
Voyez la documentation disponible dans le paquet <classname>elilo</classname>
pour des précisions.
    </para>

  </sect3>

  <sect3 arch="ia64" id="boot-tftp-client">
<title>Configuration du client</title>
<para>

Pour un démarrage par TFTP, commencez par démarrez avec EFI et entrez dans
le menu sur la <guimenu>maintenance des options de démarrage</guimenu>.

<itemizedlist>
<listitem><para>

Ajoutez une option de démarrage.

	  </para></listitem>

<listitem><para>

Choisissez la ligne <guimenuitem> Load File [Acpi()/.../Mac()]</guimenuitem>
ou quelque chose d'approchant et appuyez sur la touche &enterkey;

	  </para></listitem>

<listitem><para>

Choisissez <userinput>Netboot</userinput>, ou quelque chose d'approchant,
sauvegardez et revenez au menu sur les options de démarrage.

	  </para></listitem>
      </itemizedlist>

Vous devriez voir l'option que vous venez de créer. La sélectionner lancera
une requête DHCP , ce qui chargera <filename>elilo.efi</filename> qui se 
sur le serveur.

</para>

  </sect3>
  </sect2>
