<?xml version="1.0" encoding="ISO-8859-1"?>
<!-- original version: 28672 -->

 <sect1 id="linux-upgrade">
 <title>Installer &debian; à partir d'un système Unix/Linux</title>

<para>

Cette partie explique comment installer &debian; à partir d'un système
Unix ou Linux existant, sans utiliser le système d'installation avec menus et 
basé sur ncurses qui est expliqué dans la suite de ce manuel. Les utilisateurs
qui changeaient leur distribution Red Hat, Mandrake et Suse pour &debian;
réclamaient ce guide d'installation. Dans cette 
partie, on suppose que le lecteur a acquis une certaine familiarité avec 
les commandes *nix et qu'il sait parcourir le système de fichiers. 
<prompt>$</prompt> symbolisera une commande qui devra être saisie dans 
le système actuel, alors que <prompt>#</prompt> fera référence à une commande 
qui devra être saisie dans le chroot Debian.

</para><para>

Une fois que vous aurez configuré le nouveau système Debian,
vous pourrez y installer les données des utilisateurs (s'il y en a),
et continuer à travailler. &debian; s'installe sans aucune interruption de
service. C'est également une façon intelligente de résoudre les problèmes 
d'équipement qui, d'ordinaire, donnent du fil à retordre aux systèmes 
d'installation ou aux systèmes d'amorçage.

</para>

  <sect2>
  <title>Pour commencer</title>
<para>

Avec votre outil habituel de partitionnement *nix, partitionnez le disque
dur et créez au moins un système de fichiers ainsi qu'une zone d'échange 
(swap). Vous devez disposer d'au moins 150 Mo pour
l'installation d'un système en mode console et d'au moins 300 Mo si vous
avez l'intention d'installer X.

</para><para>

Pour créer un système de fichiers sur vos partitions, par exemple, pour créer
un système de fichiers ext3 sur la partition <filename>/dev/hda6</filename>
(ce sera la partition racine dans notre exemple), il suffit de faire&nbsp;:

<informalexample><screen>
# mke2fs -j /dev/hda6
</screen></informalexample>

Pour créer un système de fichier ext2, il suffit d'enlever le 
<userinput>-j</userinput>.

</para><para>

Initialisez et activez la zone d'échange (swap) (modifiez le numéro de la
partition en fonction de celui que vous souhaitez utiliser avec Debian)&nbsp;:

<informalexample><screen>
# mkswap /dev/hda5
# sync; sync; sync
# swapon /dev/hda5
</screen></informalexample>

Montez une partition sur <filename>/mnt/debinst</filename> (le point 
d'installation, qui deviendra le système de fichier racine 
(<filename>/</filename>) sur votre nouveau système). Le point de montage est 
totalement arbitraire, c'est de cette façon qu'on y fera référence par la 
suite.

<informalexample><screen>
# mkdir /mnt/debinst
# mount /dev/hda6 /mnt/debinst
</screen></informalexample>

</para>
  </sect2>

  <sect2>
  <title>Installer <command>debootstrap</command></title>
<para>

L'outil utilisé par l'installateur Debian et reconnu comme outil officiel 
pour installer un système Debian de base s'appelle 
<command>debootstrap</command>. Il utilise <command>wget</command> et 
<command>ar</command>, mais ne 
dépend que de <classname>/bin/sh</classname>. Installez
<command>wget</command> et <command>ar</command> s'ils ne sont pas déjà 
installés sur votre système,
puis téléchargez et installez <command>debootstrap</command>.

</para><para>

Si vous possédez un système basé sur rpm, vous pouvez utiliser alien
pour convertir le .deb en .rpm, ou télécharger une «&nbsp;version
rpm-isée&nbsp;» depuis
<ulink url="http://people.debian.org/~blade/install/debootstrap"></ulink>

</para><para>

Ou, vous pouvez utiliser la procédure qui suit pour l'installer vous-même.
Créez un répertoire pour y décompresser le .deb&nbsp;:

<informalexample><screen>
# mkdir work
# cd work
</screen></informalexample>

Le programme <command>debootstrap</command> se trouve dans l'archive Debian
(assurez-vous d'avoir sélectionné le fichier correspondant à votre
architecture). Téléchargez le <command>debootstrap</command> .deb à partir de
<ulink url="http://ftp.debian.org/debian/pool/main/d/debootstrap/">pool</ulink>,
copiez le paquet dans le répertoire de travail, et décompressez les fichiers 
binaires. Vous aurez besoin d'avoir les droits du superutilisateur pour 
installer le binaire.

<informalexample><screen>
# ar -x debootstrap_0.X.X_arch.deb
# cd /
# zcat /full-path-to-work/work/data.tar.gz | tar xv
</screen></informalexample>

</para>
  </sect2>

  <sect2>
  <title>Lancer <command>debootstrap</command></title>
<para>

<command>Debootstrap</command> peut télécharger les fichiers nécessaires 
directement depuis l'archive debian. Vous pouvez remplacer toutes les
références à <userinput>http.us.debian.org/debian</userinput> dans les 
commandes ci-dessous, par un miroir de l'archive Debian qui se trouve à 
proximité de chez vous, relativement au réseau. Les miroirs sont listés sur
<ulink url="http://www.debian.org/misc/README.mirrors"></ulink>.

</para><para>

Si vous possédez une version cédérom de &debian; &releasename;, montée sur 
/cdrom,
vous pouvez remplacer l'URL http par l'URL d'un fichier&nbsp;:
<userinput>file:/cdrom/debian/</userinput>

</para><para>

Dans la commande <command>debootstrap</command> remplacez 
<replaceable>ARCH</replaceable> par l'une des expressions suivantes&nbsp;:

<userinput>alpha</userinput>, 
<userinput>arm</userinput>,
<userinput>hppa</userinput>, 
<userinput>i386</userinput>, 
<userinput>ia64</userinput>, 
<userinput>m68k</userinput>,
<userinput>mips</userinput>, 
<userinput>mipsel</userinput>, 
<userinput>powerpc</userinput>, 
<userinput>s390</userinput>, ou
<userinput>sparc</userinput>.

<informalexample><screen>
# /usr/sbin/debootstrap --arch ARCH &releasename; \
     /mnt/debinst http://http.us.debian.org/debian
</screen></informalexample>

</para>
  </sect2>

  <sect2>
  <title>Configurer le sytème de base</title>

<para>

Maintenant vous disposez d'un vrai système Debian, certes un peu élémentaire.
Lancez le programme <command>Chroot</command>&nbsp;:

<informalexample><screen>
# chroot /mnt/debinst /bin/bash
</screen></informalexample>

</para>

   <sect3>
   <title>Monter les partitions</title>
<para>

Vous devez créer <filename>/etc/fstab</filename>.

<informalexample><screen>
# editor /etc/fstab
</screen></informalexample>

Voici un exemple que vous pouvez modifier à votre convenance&nbsp;:

<informalexample><screen>
# /etc/fstab: static file system information.
#
# file system    mount point   type    options                  dump pass
/dev/XXX         /             ext2    defaults                 0    0
/dev/XXX         /boot         ext2    ro,nosuid,nodev          0    2

/dev/XXX         none          swap    sw                       0    0
proc             /proc         proc    defaults                 0    0

/dev/fd0         /mnt/floppy   auto    noauto,rw,sync,user,exec 0    0
/dev/cdrom       /mnt/cdrom    iso9660 noauto,ro,user,exec      0    0

/dev/XXX         /tmp          ext2    rw,nosuid,nodev          0    2
/dev/XXX         /var          ext2    rw,nosuid,nodev          0    2
/dev/XXX         /usr          ext2    rw,nodev                 0    2
/dev/XXX         /home         ext2    rw,nosuid,nodev          0    2
</screen></informalexample>

Utilisez <userinput>mount -a</userinput> pour monter l'ensemble des systèmes 
de fichiers que vous avez indiqué dans votre fichier 
<filename>/etc/fstab</filename>, ou alors
pour monter un à un chaque système de fichiers, utilisez&nbsp;:

<informalexample><screen>
# mount /path  # e.g.:  mount /usr
</screen></informalexample>

Vous pouvez monter le système de fichiers proc plusieurs fois et à divers
endroits, cependant on choisit d'habitude /proc. Si vous n'utilisez pas
<userinput>mount -a</userinput>, assurez-vous d'avoir monté proc avant 
d'aller plus loin&nbsp;:

<informalexample><screen>
# mount -t proc proc /proc
</screen></informalexample>

</para>
   </sect3>

   <sect3>
   <title>Configurer le clavier</title>

<para>

Pour configurer votre clavier exécutez&nbsp;:

<informalexample><screen>
# dpkg-reconfigure console-data
</screen></informalexample>

</para>
   </sect3>

   <sect3>
   <title>Configurer le réseau</title>
<para>

Pour configurer le réseau, éditez les fichiers
<filename>/etc/network/interfaces</filename>,
<filename>/etc/resolv.conf</filename>, et
<filename>etc/hostname</filename>.

<informalexample><screen>
# editor /etc/network/interfaces 
</screen></informalexample>

Voici quelques exemples simples qui proviennent de
<filename>/usr/share/doc/ifupdown/examples</filename>&nbsp;:

<informalexample><screen>
######################################################################
# /etc/network/interfaces -- configuration file for ifup(8), ifdown(8)
# See the interfaces(5) manpage for information on what options are 
# available.
######################################################################

# We always want the loopback interface.
#
auto lo
iface lo inet loopback

# To use dhcp:
#
# auto eth0
# iface eth0 inet dhcp

# An example static IP setup: (broadcast and gateway are optional)
#
# auto eth0
# iface eth0 inet static
#     address 192.168.0.42
#     network 192.168.0.0
#     netmask 255.255.255.0
#     broadcast 192.168.0.255
#     gateway 192.168.0.1
</screen></informalexample>

Indiquez vos serveurs de noms et les directives search dans le fichier
<filename>/etc/resolv.conf</filename>&nbsp;:

<informalexample><screen>
# editor /etc/resolv.conf
</screen></informalexample>

Un simple <filename>/etc/resolv.conf</filename>&nbsp;:

<informalexample><screen>
# search hqdom.local\000
# nameserver 10.1.1.36
# nameserver 192.168.9.100
</screen></informalexample>

Indiquez le nom de votre système (de 2 à 63 caractères)&nbsp;:

<informalexample><screen>
# echo DebianHostName &#62; /etc/hostname
</screen></informalexample>

Si vous possédez plusieurs cartes réseau, faites en sorte d'indiquer
par ordre les modules que vous voulez charger dans le fichier 
<filename>/etc/modules</filename>. De cette façon, lors du démarrage, chaque 
carte sera associée avec le nom d'interface (eth0, eth1, etc.) que vous 
souhaitiez.

</para>
   </sect3>

   <sect3>
   <title>Configurer le fuseau horaire, les utilisateurs et le progreamme APT</title>

<para>

Configurez le fuseau horaire, ajoutez un utilisateur normal, et choisissez
vos sources <command>apt</command> en exécutant

<informalexample><screen>
# /usr/sbin/base-config new
</screen></informalexample>

</para>
   </sect3>

   <sect3>
   <title>Configurer les locales</title>
<para>
Pour configurer les paramètres locaux, pour l'utilisation d'une autre langue
que l'anglais, installez le paquet des locales puis configurez-le&nbsp;:

<informalexample><screen>
# apt-get install locales
# dpkg-reconfigure locales
</screen></informalexample>

NOTE&nbsp;: Vous devez au préalable configurer apt, c'est-à-dire lors
de l'étape de configuration du système de base. Avant d'utiliser les locales
avec un jeu de caractères différent de l'ASCII ou de latin1, veuillez consulter
les HOWTO sur la localisation.

</para>
   </sect3>
  </sect2>

  <sect2>
  <title>Installer un noyau</title>

<para>

Si vous avez l'intention de démarrer ce système, vous aurez vraisemblablement
besoin d'un noyau Linux ainsi que d'un gestionnaire de démarrage. Identifiez
les paquets contenant des noyaux avec&nbsp;:

<informalexample><screen>
# apt-cache search kernel-image
</screen></informalexample>

Puis installez celui que vous voulez en utilisant son nom de paquet.

<informalexample><screen>
# apt-get install kernel-image-<replaceable>2.X.X-arch-etc</replaceable>
</screen></informalexample>

</para>
  </sect2>

  <sect2>
<title>Configurer le programme d'amorçage</title>
<para>

Pour que votre système &debian; puisse démarrer, configurez le programme
d'amorçage pour qu'il charge le noyau installé avec votre nouvelle partition
racine. Debootstrap n'installe pas de programme d'amorçage mais vous pouvez
utiliser apt-get pour en installer un.

</para><para arch="i386">

Faites <userinput>info grub</userinput> ou 
<userinput>man lilo.conf</userinput> pour connaître les instructions de 
configuration des programmes d'amorçage. Si vous souhaitez conserver le 
système dont vous vous êtes servi pour installer Debian, ajoutez simplement 
une entrée pour l'installation de Debian dans votre 
<filename>menu.lst</filename> ou dans votre <filename>lilo.conf</filename>. 
Pour <filename>lilo.conf</filename>, vous pouvez également le copier sur le 
nouveau système et l'éditer. Une fois que 
vous l'aurez modifié, lancez lilo (souvenez-vous que lilo utilise le fichier 
lilo.conf qui se trouve dans le même système que lui).

</para><para arch="i386">

Voici un exemple simple de fichier <filename>/etc/lilo.conf</filename>&nbsp;:

<informalexample><screen>
boot=/dev/hda6
root=/dev/hda6
install=/boot/boot-menu.b
delay=20
lba32
image=/vmlinuz
label=Debian
</screen></informalexample>

</para><para arch="powerpc">

Consultez le <userinput>man yaboot.conf</userinput> pour les instructions de 
configuration du programme d'amorçage. Si vous souhaitez conserver le système 
dont vous vous êtes servi pour installer Debian, ajoutez simplement une 
entrée pour l'installation de Debian dans votre yaboot.conf actuel. Vous 
pouvez également le copier sur le nouveau système et l'éditer. Une fois que 
vous l'aurez
modifié, lancez ybin (souvenez-vous que ybin utilise le yaboot.conf qui se 
trouve dans le même système que lui).
</para><para arch="powerpc">

Voici un exemple simple de fichier <filename>/etc/yaboot.conf</filename>&nbsp;:

<informalexample><screen>
boot=/dev/hda2
device=hd:
partition=6
root=/dev/hda6
magicboot=/usr/lib/yaboot/ofboot
timeout=50
image=/vmlinux
label=Debian
</screen></informalexample>

Sur certaines machines, vous devrez utiliser <userinput>ide0:</userinput> 
au lieu de <userinput>hd:</userinput>. 

</para>
  </sect2>
 </sect1>
