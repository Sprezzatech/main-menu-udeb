<!-- retain these comments for translator revision tracking -->
<!-- original version: 22664 untranslated -->

 <sect1 condition="bootable-usb" id="boot-usb-files">
 <title>Préparation des fichiers pour un amorçage avec une clé USB</title>

<para>

Pour préparer une clé USB, vous avez besoin d'un système GNU/Linux fonctionnel
et qui accepte les périphériques USB. Vérifiez que le module du noyau
usb-storage est chargé (<userinput>modprobe usb-storage</userinput>) et trouvez
à quel périphérique SCSI la clé USB est attribuée (dans cet exemple, c'est
<filename>/dev/sda</filename>). Pour pouvoir écrire sur la clé, il vous faudra
sans doute enlever la protection contre l'écriture.
</para>
<para>

Notez que la taille de la clé doit être au moins de 128&nbsp;Mo. Pour des
tailles inférieures, voyez <xref linkend="usb-copy-flexible"/>.

</para>

  <sect2 id="usb-copy-easy">
  <title>Copie des fichiers - la méthode simple</title>
<para>

Le fichier <filename>hd-media/boot.img.gz</filename> contient tous les
fichiers de l'installateur, le noyau et le programme 
<command>SYSLINUX</command> avec son fichier de configuration. Il vous suffit
d'extraire ces fichiers dans votre clé USB&nbsp;:

<informalexample><screen>

gzip -dc boot.img.gz >/dev/<replaceable>sda</replaceable>

</screen></informalexample>

Bien sûr toutes les données présentes sur la clé seront détruites. Utilisez
le bon périphérique pour votre clé&nbsp;!
</para>
<para>

Montez ensuite la clé (<userinput>mount /dev/sda/mnt</userinput>), qui aura
maintenant un système de fichiers FAT, et copiez une image ISO de type
netinst ou businesscard. Le nom de ce fichier doit se terminer par
<filename>.iso</filename>. Démontez la clé (<userinput>umount /mnt</userinput>)
et voilà, c'est fait&nbsp;!
</para>
</sect2>

  <sect2 id="usb-copy-flexible">
  <title>Copie des fichiers - la méthode souple</title>
<para>

Si vous aimez la souplesse ou si vous voulez simplement savoir ce qui se
passe, vous pouvez utiliser la méthode suivante pour mettre les fichiers
sur la clé. Nous montrerons comment n'utiliser que la première partition,
au lieu de tout le périphérique.
</para>

<note><para>

La plupart des clés USB sont préconfigurés avec une seule partition FAT16.
Vous n'aurez sans doute pas à partitionner ou à formater la clé. Si vous
devez le faire, utilisez le programme <command>cfdisk</command> ou un autre
programme de partitionnement et tapez&nbsp;:

<informalexample><screen>

mkdosfs /dev/<replaceable>sda1</replaceable>

</screen></informalexample>

Faites attention à utiliser le périphérique correct pour la clé. Le programme
<command>mkdosfs</command>  se trouve dans le paquet Debian 
<classname>dosfstools</classname>.

</para></note>
<para>

Pour pouvoir lancer le noyau après l'amorçage sur la clé, nous y mettons
un programme d'amorçage. Tous les programmes d'amorçage fonctionnent
(p.&nbsp;ex. <command>LILO</command>), mais <command>SYSLINUX</command> est 
préférable car il utilise une partition FAT16 et peut être reconfiguré en
modifiant un simple fichier texte. On peut modifier la configuration du 
programme d'amorçage avec tous les systèmes d'exploitation qui acceptent
le système de fichiers FAT.

</para>
<para>

Pour mettre <command>SYSLINUX</command> sur la partition FAT16 de la clé,
installez les paquets <classname>syslinux</classname> et
<classname>mtools</classname> sur votre système et tapez&nbsp;:

<informalexample><screen>

syslinux /dev/<replaceable>sda1</replaceable>

</screen></informalexample>

Encore une fois, faites bien attention à utiliser le nom correct pour la clé.
La partition ne doit pas être montée au lancement de 
<command>SYSLINUX</command>. Cette procédure écrit un secteur d'amorçage sur 
la partition et crée le fichier <filename>ldlinux.sys</filename> qui contient
le code du programme d'amorçage.

</para>
<para>

Montez la partition (<userinput>mount /dev/sda1 /mnt</userinput>) et
copiez les fichiers suivants sur la clé&nbsp;:

<itemizedlist>
<listitem><para>

<filename>vmlinuz</filename> (noyau binaire)

</para></listitem>
<listitem><para>

<filename>initrd.gz</filename> (image du disque virtuel initial)

</para></listitem>
<listitem><para>

<filename>syslinux.cfg</filename> (fichier de configuration de SYSLINUX)

</para></listitem>
<listitem><para>

Modules facultatifs du noyau

</para></listitem>
</itemizedlist>

Si vous voulez modifier le nom des fichiers, remarquez que
<command>SYSLINUX</command> ne peut traiter que des noms de type DOS (8.3).

</para>
<para>

Le fichier de configuration <filename>syslinux.cfg</filename> doit contenir
les deux lignes suivantes&nbsp;:

<informalexample><screen>

default vmlinuz
append initrd=initrd.gz ramdisk_size=10000 root=/dev/rd/0 init=/linuxrc devfs=mount,dall rw

</screen></informalexample>

Remarquez que la valeur du paramètre <userinput>ramdisk_size</userinput> 
doit être augmentée avec la taille de l'image qui est amorcée.

</para>
<para>

Vous pouvez maintenant mettre une image ISO (businesscard, netinst ou même
l'image complète) sur la clé. Le nom de cette image doit se terminer par
<filename>.iso</filename>.

</para>
<para>

Si vous voulez faire une installation sur le réseau, sans utiliser d'image
ISO, vous sauterez bien sûr l'étape précédente. De plus vous devrez utiliser
le disque virtuel initial qui se trouve dans le répertoire
<filename>netboot</filename> au lieu de celui dans le répertoire
<filename>hd-media</filename>, car le fichier 
<filename>hd-media/initrd.gz</filename> n'a aucun support pour le réseau.

</para>
<para>

Quand tout est fait, démontez la clé USB (<userinput>umount /mnt</userinput>) 
et activez la protection contre l'écriture.

</para>
<warning><para>

Si le système refuse de s'amorcer à partir de la clé, il se peut que la clé
possède un secteur principal d'amorçage défectueux. Corrigez-le avec le
programme <command>install-mbr</command> qui se trouve dans le paquet
<classname>mbr</classname>&nbsp;:

<informalexample><screen>

install-mbr /dev/<replaceable>sda</replaceable>

</screen></informalexample>

</para></warning>
  </sect2>
 </sect1>
