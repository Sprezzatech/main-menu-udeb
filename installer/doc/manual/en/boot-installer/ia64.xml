<!-- retain these comments for translator revision tracking -->
<!-- $Id$ -->

  <sect2 arch="ia64"><title>Booting from a CD-ROM</title>

&boot-installer-intro-cd.xml;

  <note>
  <title>CD Contents</title>

<para>

There are three basic variations of Debian Install CDs.
The <emphasis>Business Card</emphasis> CD has a minimal installation
that will fit on the small form factor CD media.
It requires a network connection in order to install the rest of the
base installation and make a usable system.
The <emphasis>Network Install</emphasis> CD has all of the packages
for a base install but requires a network connection to a Debian
mirror site in order to install the
extra packages one would want for a complete system .
The set of Debian CDs can install a complete system from the wide
range of packages without needing access to the network.
</para>
  </note>

<para>

The IA-64 uses the next generation Extensible Firmware Interface (EFI)
from Intel.
Unlike the traditional x86 BIOS which knows little about the boot
device other than the partition table and Master Boot Record (MBR),
the EFI can read and write files from FAT16 or FAT32 formatted disk
partitions.
This simplifies the often arcane process of starting a system.
The system boot loader and the EFI firmware that supports it have
a full filesystem to store the files necessary for booting the
machine.
This means that the system disk on an IA-64 system has an additional
disk partition dedicated to the EFI instead of the simple MBR or boot
block on more conventional systems. 

</para><para>

The Debian CD contains a small version of the EFI partition where
<command>elilo</command>, its configuration file, the installer's kernel,
 and initial filesystem (initrd) are located.
The running system also contains an EFI partition where the necessary
files for booting the system reside.
These files are readable from the EFI Shell as described below.

</para><para>

Most of the details of how the <command>elilo</command> actually loads and
starts a system for the most part transparent to the system installer.
However, the installer must set up an EFI partition prior to installing
the base system.  Otherwise, the installation of <command>elilo</command>
will fail, rendering the system un-bootable.
The EFI partition is allocated and formatted in the partitioning step
of the installation prior to loading any packages on the system disk.
The partitioning task also verifies that a suitable EFI partition is
present before allowing the installation to proceed.

</para>

  <sect3 arch="ia64" id="boot-from-cd">
  <title>Booting from the EFI Shell</title>
<para>

The EFI Boot Manager is started as the last step of the firmware
initialization.
It displays a menu list from which the user can select
an option.
Depending on the model of system and what other software has been
loaded on the system, this menu may be different from one system
to another.
In any event, there should be one option called
<command>EFI Shell [Built-in]</command>.
Boot the Debian Installer CD with the following steps:

</para>

<itemizedlist>

<listitem><para>
Insert the CD in the DVD/CD drive.
</para></listitem>

<listitem><para>
Select <command>EFI Shell</command> from the menu.
The EFI Shell will read all of the bootable devices and display
them to the console before displaying its command prompt.
The recognized bootable partitions on devices will show a device name of
<filename>fs<emphasis>n</emphasis>:</filename>.
All other recognized partitions will be named
<filename>blk<emphasis>n</emphasis>:</filename>.
If you inserted the CD just before entering the shell, this may
take a few extra seconds as it initializes the CD drive.
</para>
</listitem>

<listitem><para>
Examine the output from the shell looking for the CDROM drive.
It is most likely the <filename>fs0:</filename> device although
other devices with bootable partitions will also show up as
<filename>fs<emphasis>n</emphasis></filename>.
</para></listitem>

<listitem><para>
Enter <command>fs<emphasis>n</emphasis>:</command> to select that
device where <emphasis>n</emphasis> is the partition number for the
CDROM.  The shell will now display the partition number as its prompt.
</para></listitem>

<listitem><para>
Enter <command>elilo</command>.
This will start the boot loader.
<classname>elilo</classname> will display its prompt and wait for
a kernel name to load.
It will pick the default kernel if it receives no input within
the timelimit (~20 seconds).
</para></listitem>

<listitem><para>
Select a boot option, typically <classname>linux</classname> or
<classname>linux26</classname>.
Simply press <emphasis>Enter</emphasis> or wait for the timeout
to take the default.
It will display messages as it uncompresses the kernel and loads
and uncompresses the initial root filesystem.
</para></listitem>

</itemizedlist>

<para> 

These steps start the installer kernel.
You can also enter the shorter 
<command>fs<emphasis>n</emphasis>:elilo</command> command at
the shell prompt.
Once the kernel finishes its initialization along with the usual console
messages, it will start the Debian Installer.

</para>

  </sect3>
  </sect2>

  <sect2 arch="ia64" id="boot-tftp"><title>Booting with TFTP</title>

<para>
Booting an IA64 system from the network is similar to a CD boot.
The only difference is how the installation kernel is loaded.
The EFI Boot Manager can load and start programs from servers on
the network.
Once the installation kernel is loaded and starts, the system install
will proceed thru the same steps as the CD install with the exception
that the packages of the base install will be loaded from the network
rather than the CD drive.

</para>

&boot-installer-intro-net.xml;

<para>

Network booting an ia64 system requires two architecture-specific actions.
On the boot server, DHCP and TFTP must be configured to deliver
<command>elilo</command>.
On the client a new boot option must be defined in the EFI boot manager
to enable loading over a network.

</para>

  <sect3 arch="ia64" id="boot-tftp-server">
  <title>Configuring the Server</title>
<para>

A suitable TFTP entry for network booting an ia64 system looks something
like this:

<informalexample><screen>

host mcmuffin {
        hardware ethernet 00:30:6e:1e:0e:83;
        fixed-address 10.0.0.21;
        filename "elilo.efi";
}

</screen></informalexample>

Note that the goal is to get <command>elilo.efi</command> running on
the client.

</para><para>

Create an <filename>ia64/</filename> subdirectory in your tftpboot
directory, and populate it with the <filename>vmlinuz</filename> and
<filename>initrd.gz</filename> files from the Debian installer netboot
directory.

</para><para>

Copy <filename>elilo.efi</filename> to your tftpboot directory and
make it world readable.  This file can usually be found in the elilo
package in IA64 distributions, or in
<filename>/usr/lib/elilo</filename> or in a subdirectory of
<filename>/boot/efi</filename>.  A suitable copy is provided in the
Debian installer netboot directory.

</para><para>

Create an <filename>elilo.conf</filename> file in your tftpboot
directory.  This will
be loaded by <command>elilo.efi</command> once it is running on the
client, and controls what
happens next, including the choice of kernel, initrd image, etc.  An
example file is provided in the Debian installer netboot directory, review
the contents and update as needed for your choice of paths, etc.

It is possible to have different config files for different clients by naming
them using the client's IP address in hex with the suffix
<filename>.conf</filename> instead of <filename>elilo.conf</filename>.
See documentation provided in the <classname>elilo</classname> package
for details.

</para>
  </sect3>

  <sect3 arch="ia64" id="boot-tftp-client">
  <title>Configuring the Client</title>
<para>

To configure the client to support TFTP booting, start by booting to
EFI and entering the <guimenu>Boot Option Maintenance Menu</guimenu>.

<itemizedlist>
<listitem><para>

Add a boot option.

</para></listitem>
<listitem><para>

Select the line saying <guimenuitem>Load File
[Acpi()/.../Mac()]</guimenuitem> and press &enterkey;.

</para></listitem>
<listitem><para>

Name the entry <userinput>Netboot</userinput> or something similar,
save, and exit back to the boot options menu.  

</para></listitem>
</itemizedlist>

You should see the new boot option you just created, and selecting it
should initiate a DHCP query, leading to a TFTP load of
<filename>elilo.efi</filename> from the server.

</para><para>

The boot loader will display its prompt after it has downloaded and
processed its configuration file.
At this point, the installation proceeds with the same steps as a
CD install.  Select a boot option as in above and when the kernel
has completed installing itself from the network, it will start the
Debian Installer.

</para><para>

Proceed to the next chapter to continue the installation where
you will set up the language locale, network, and the disk partitions.

</para>
  </sect3>
  </sect2>
