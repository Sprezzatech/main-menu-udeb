MEDIA_TYPE = floppy image

EXTRANAME = $(MEDIUM)-

MANIFEST-BOOT =   "m68k atari floppy boot image"
MANIFEST-INITRD = "m68k atari floppy root image"
MANIFEST-KERNEL = "m68k atari floppy kernel"

TARGET=$(BOOT)

FLOPPY_SIZE=1440

# gzip the boot floppy
GZIPPED = .gz

# The DOS volume id to use for DOS floppies. This is a 32 bit hexidecimal
# number.
DOS_VOLUME_ID = deb00001
# The DOS volume label to use for DOS floppies. This is a 11 character
# string.
DOS_VOLUME_LABEL = "Debian Inst"

KERNELCMD = "video=keep load_ramdisk=1 prompt_ramdisk=1 ramdisk_size=20000"

# I think we'll need a bootfloppy + root.
# Create a bootable image.
#	msdos fat 12, auto/bootstra.prg, bootargs, linux
.PHONY: arch_boot
arch_boot: bootstra.prg
	dd if=/dev/zero of=$@.new bs=1k count=$(FLOPPY_SIZE)
	mkfs.msdos -i $(DOS_VOLUME_ID) -n $(DOS_VOLUME_LABEL) -r 112 -F 12 -C $(TEMP_BOOT) $(FLOPPY_SIZE)
	# mkfs.msdos gets the mode wrong (bug filed)
	chmod 644 $(TEMP_BOOT)

	mcopy -i$(TEMP_BOOT) $(TEMP_KERNEL) ::/linux
#	mcopy -i$(TEMP_BOOT) $(TEMP_INITRD) ::/initrd.gz
	mmd -i$(TEMP_BOOT) ::/auto

	mcopy -i$(TEMP_BOOT) $(SOME_DEST)/bootstra.prg ::/auto
	echo "-s -k linux root=/dev/ram $(KERNELCMD)" > $(TEMP)/bootargs
	mcopy -i$(TEMP_BOOT) $(TEMP)/bootargs ::/
	
	$(if $(GZIPPED),gzip -v9f $(TEMP_BOOT))

.PHONY: arch_boot_screens
arch_boot_screens:

