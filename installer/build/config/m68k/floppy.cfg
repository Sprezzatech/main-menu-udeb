MEDIA_TYPE = floppy image

TYPE = floppy

EXTRANAME = floppy/

include config/m68k/common-kernel.cfg

# The version of the kernel to use.
KERNELMAJOR = 2.2
KERNELVERSION = $(M68K_KERNEL22_VME) $(M68K_KERNEL_VME) $(M68K_KERNEL_ATARI) $(M68K_KERNEL22_ATARI)
KERNEL_FLAVOUR = di
KERNELIMAGEVERSION = $(KERNELVERSION)
KERNELNAME = $(foreach ver,$(KERNELVERSION),vmlinuz-$(ver))
VERSIONED_SYSTEM_MAP = t

# sudo is required for vmelilo, see bts #250578.
ROOTCMD = sudo

include config/m68k/common.cfg
include config/m68k/common-vme.cfg


# gzip the floppies
GZIPPED = .gz


#$(TEMP_ROOT): $(TEMP_INITRD) arch_root
.PHONY: arch_boot2
arch_boot2:  /proc/mounts
	mkdir -p $(TEMP)/$(SUB)boot/etc
	mkdir -p $(TEMP)/$(SUB)boot/boot
	mkdir -p $(TEMP)/mount
	cp $(shell echo $(SUB_KERNEL) | cut -d' ' -f 1) $(TEMP)/$(SUB)boot/linux
	if [ "$(FLOPPY_SIZE)" = "2880" ]; then \
		cp $(TEMP_INITRD) $(TEMP)/$(SUB)boot/root.bin ; \
		cp boot/m68k/vme-vmelilo.conf-cdfloppy $(TEMP)/$(SUB)boot/etc/vmelilo.conf ; \
	else \
		cp boot/m68k/vme-vmelilo.conf-floppy $(TEMP)/$(SUB)boot/etc/vmelilo.conf ; \
	fi ;
	./makelabel $(DISK_LABEL) $(BUILD_DATE) > $(TEMP)/$(SUB)boot/disk.lbl
	genext2fs -d $(TEMP)/$(SUB)boot -b $(FLOPPY_SIZE) -r 0 $(TEMP)/$(SUB)boot.img
	$(ROOTCMD) mount -t ext2 -o loop=/dev/loop3 $(TEMP)/$(SUB)boot.img $(TEMP)/mount
	@echo loopdev $(shell grep $(TEMP)/mount /proc/mounts | cut -d' ' -f 1)
	if $(ROOTCMD) vmelilo -f -a $(VMEARCH) -b /dev/null -w $(TEMP)/mount \
			-d /dev/loop3 ; then \
		$(ROOTCMD) umount $(TEMP)/mount ; \
		$(e2fsck) $(TEMP)/$(SUB)boot.img || true ; \
		$(if $(GZIPPED),gzip -v9f $(TEMP)/$(SUB)boot.img) ; \
	else \
		echo "vmelilo failed, moving $(SUB)boot.img ..." ; \
		$(ROOTCMD) umount $(TEMP)/mount ; \
		mv $(TEMP)/$(SUB)boot.img $(TEMP)/$(SUB)boot.img.failed ; \
	fi ;


.PHONY: arch_root2
arch_root2: 
	mkdir -p $(TEMP)/$(SUB)root/etc
	cp $(TEMP_INITRD) $(TEMP)/$(SUB)root/root.bin
	./makelabel $(DISK_LABEL) $(BUILD_DATE) > $(TEMP)/$(SUB)root/disk.lbl
	genext2fs -d $(TEMP)/$(SUB)root -b $(FLOPPY_SIZE) -r 0 $(TEMP)/$(SUB)root.img
	$(e2fsck) $(TEMP)/$(SUB)root.img || true 
	$(if $(GZIPPED),gzip -v9f $(TEMP)/$(SUB)root.img)


.PHONY: bvme_arch_boot
bvme_arch_boot: FLOPPY_SIZE = 1440 
bvme_arch_boot: SUB = bvme-
bvme_arch_boot: SUB_KERNEL = $(M68K_KERNEL_BVME6000)
bvme_arch_boot: VMEARCH = bvme
bvme_arch_boot: arch_boot2

.PHONY: bvme_arch_root
bvme_arch_root: FLOPPY_SIZE = 1440 
bvme_arch_root: SUB = bvme-
bvme_arch_root: arch_root2

TARGET = $(TEMP_INITRD) bvme_arch_root bvme_arch_boot


#BOOT = $(SOME_DEST)/$(EXTRANAME)boot.img$(GZIPPED)
#FLOPPY_SIZE = 1440
#EXTRANAME
#VMEARCH
#TEMP_KERNEL
# floppy/
# 	atari-boot.img.gz
# 	atari-root.img.gz
# 	bvme6000-boot.img.gz
# 	bvme6000-root.img.gz
# 	mvm147-boot.img.gz
# 	mvm147-root.img.gz
# 	mvm16x-boot.img.gz
# 	mvm16x-root.img.gz

