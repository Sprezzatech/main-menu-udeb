MEDIUM_SUPPORTED = cdrom netboot floppy hd-media #monolithic

# The version of the kernel to use.
KERNELVERSION = 2.4.26-1-386
KERNELMAJOR = 2.4
# Targets for 2.6 kernel images will use this version instead.
KERNELVERSION_2.6 = 2.6.5-1-386
KERNEL_FLAVOUR = di
KERNELNAME = vmlinuz
KERNELIMAGEVERSION = $(KERNELVERSION)

# May be needed in rare cases.
#SYSLINUX_OPTS = -s

# The beta version of upx in package upx-ucl-beta can be used to make the
# kernel a lot smaller. It shaved 40k off our kernel. That allows us to put
# a lot more on a single floppy.
UPX=/usr/bin/upx-ucl-beta

# The DOS volume id to use for DOS floppys. This is a 32 bit hexidecimal
# number.
DOS_VOLUME_ID = deb00001
# The DOS volume label to use for DOS floppys. This is a 11 character
# string.
DOS_VOLUME_LABEL = "Debian Inst"

# The image to use for a syslinux splash screen.
#SPLASH_RLE=boot/i386/pics/nicholson.rle
#SPLASH_RLE=boot/i386/pics/yazici.rle
#SPLASH_RLE=boot/i386/pics/klowner.rle
SPLASH_RLE=boot/i386/pics/polverini_b.rle

# Create a bootable image.
.PHONY: arch_boot
arch_boot:
	[ ! -x "$(UPX)" ] || $(UPX) -9 $(TEMP_KERNEL) || true
	mkfs.msdos -i $(DOS_VOLUME_ID) -n $(DOS_VOLUME_LABEL) -C $(TEMP_BOOT) $(FLOPPY_SIZE)
	# mkfs.msdos gets the mode wrong (bug filed)
	chmod 644 $(TEMP_BOOT)

	mcopy -i$(TEMP_BOOT) $(TEMP_KERNEL) ::linux
	mcopy -i$(TEMP_BOOT) $(TEMP_INITRD) ::initrd.gz

	# generate a disk label
	./makelabel $(DISK_LABEL) $(BUILD_DATE) > $(TEMP)/disk.lbl
	mcopy -i$(TEMP_BOOT) $(TEMP)/disk.lbl ::disk.lbl

	# syslinux is used to make the floppy bootable
	cat boot/i386/syslinux.cfg | ./ramdisk-size-subst $(TEMP_INITRD) | todos | mcopy -i$(TEMP_BOOT) - ::syslinux.cfg
	set -e; \
	$(foreach file,$(wildcard $(TEMP_BOOT_SCREENS)/*.txt), \
		mcopy -i$(TEMP_BOOT) $(file) ::`basename $(file)` \
	;)
	if [ -e $(TEMP_BOOT_SCREENS)/splash.rle ]; then \
		mcopy -i$(TEMP_BOOT) $(TEMP_BOOT_SCREENS)/splash.rle ::splash.rle; \
	fi
	syslinux $(SYSLINUX_OPTS) $(TEMP_BOOT)
	$(if $(GZIPPED),gzip -v9f $(TEMP_BOOT))

# Create a non-bootable image.
.PHONY: arch_root
arch_root:
	mkfs.msdos -i $(DOS_VOLUME_ID) -n $(DOS_VOLUME_LABEL) -C $(TEMP_ROOT) $(FLOPPY_SIZE)
	# mkfs.msdos gets the mode wrong (bug filed)
	chmod 644 $(TEMP_ROOT)

	mcopy -i$(TEMP_ROOT) $(TEMP_INITRD) ::initrd.gz

	# generate a disk label
	./makelabel $(DISK_LABEL) $(BUILD_DATE) > $(TEMP)/disk.lbl
	mcopy -i$(TEMP_ROOT) $(TEMP)/disk.lbl ::disk.lbl
	$(if $(GZIPPED),gzip -v9f $(TEMP_ROOT))

# Set up syslinux/isolinux help screens.
.PHONY: arch_boot_screens
arch_boot_screens:
	-rm -f $(TEMP_BOOT_SCREENS)/*
	mkdir -p $(TEMP_BOOT_SCREENS)
	$(foreach IMG,$(wildcard boot/i386/*.txt boot/i386/*.txt.with26), \
		./bootscreen-subst "$(MEDIA_TYPE)" "$(DEBIAN_VERSION)" "$(BUILD_DATE)" \
		       < $(IMG) > $(TEMP_BOOT_SCREENS)/`basename $(IMG)`\
	;)
	if [ -n "$(SPLASH_RLE)" ]; then \
		cp $(SPLASH_RLE) $(TEMP_BOOT_SCREENS)/splash.rle; \
	fi

# Miniature CD image using isolinux, with only an initrd, no udebs or debs.
.PHONY: arch_miniiso
arch_miniiso:
	-rm -f $(TEMP_CD_TREE)/*
	mkdir -p $(TEMP_CD_TREE)
	cp /usr/lib/syslinux/isolinux.bin $(TEMP_CD_TREE)
	cp $(TEMP_BOOT_SCREENS)/*.txt $(TEMP_CD_TREE)
	if [ -e $(TEMP_BOOT_SCREENS)/splash.rle ]; then \
		cp $(TEMP_BOOT_SCREENS)/splash.rle $(TEMP_CD_TREE); \
	fi
	cp $(TEMP_KERNEL) $(TEMP_CD_TREE)/linux
	cat boot/i386/syslinux.cfg | ./ramdisk-size-subst $(TEMP_INITRD) | todos > $(TEMP_CD_TREE)/isolinux.cfg
	ln -f $(TEMP_INITRD) $(TEMP_CD_TREE)/initrd.gz
	mkisofs -r -J -b isolinux.bin -c boot.cat \
		-no-emul-boot -boot-load-size 4 -boot-info-table \
		-o $(TEMP_MINIISO) $(TEMP_CD_TREE)
