# How big a floppy image should I make? (in kilobytes)
FLOPPY_SIZE = 32768

MEDIUM_SUPPORTED = cdrom netboot

# The version of the kernel to use.
KERNELMAJOR = 2.4
KERNELVERSION = 2.4.27-2-itanium-smp
KERNELVERSION_2.6 = 2.6.12-1-itanium-smp
KERNEL_FLAVOUR = di
KERNELNAME = vmlinuz
KERNELIMAGEVERSION = $(KERNELVERSION)
KERNELIMAGEVERSION_2.6 = $(KERNELVERSION_2.6)

# The DOS volume id to use for DOS floppies. This is a 32 bit hexidecimal
# number.
DOS_VOLUME_ID = deb00001
# The DOS volume label to use for DOS floppies. This is a 11 character
# string.
DOS_VOLUME_LABEL = "Debian Inst"

arch_tree:

# Create a bootable floppy image.
# 1. make a dos filesystem image
# 2. copy over kernel, initrd
# 3. copy over elilo files
.PHONY: arch_boot
arch_boot:
	dd if=/dev/zero of=$@.new bs=1k count=$(FLOPPY_SIZE)
	mkfs.msdos -i $(DOS_VOLUME_ID) -n $(DOS_VOLUME_LABEL) -C $(TEMP_BOOT) $(FLOPPY_SIZE)

	mmd -i$(TEMP_BOOT) ::/efi
	mmd -i$(TEMP_BOOT) ::/efi/boot
	mcopy -i$(TEMP_BOOT) $(TEMP_KERNEL) ::/linux
	mcopy -i$(TEMP_BOOT) $(TEMP_INITRD) ::/initrd.gz
	if [ -n "$(KERNEL_2.6)" ] && [ -n "$(INITRD_2.6)" ]; then \
		mcopy -i$(TEMP_BOOT) $(KERNEL_2.6) ::/linux26; \
		mcopy -i$(TEMP_BOOT) $(INITRD_2.6) ::/initrd26.gz; \
	fi
	mcopy -i$(TEMP_BOOT) /usr/lib/elilo/elilo.efi ::/efi/boot/bootia64.efi
	mcopy -i$(TEMP_BOOT) /usr/lib/elilo/elilo.efi ::/elilo.efi
	
	(if [ -n "$(INITRD_2.6)" ] && [ -n "$(KERNEL_2.6)" ]; then \
		cat boot/ia64/elilo.conf.with26; \
	else \
		cat boot/ia64/elilo.conf; \
	fi) \
	| ramdisk-size-subst $(TEMP_INITRD) $(INITRD_2.6) \
	| bootscreen-subst MEDIA_TYPE "$(MEDIA_TYPE)" \
		DEBIAN_VERSION "$(DEBIAN_VERSION)" \
		BUILD_DATE "$(BUILD_DATE)" \
		SYSDIR "/efi/boot/" \
		KERNEL /linux INITRD /initrd.gz \
		KERNEL_26 /linux26 INITRD_26 /initrd26.gz \
	> $(TEMP)/elilo-cd.conf
	mcopy -i$(TEMP_BOOT) $(TEMP)/elilo-cd.conf ::/elilo.conf
	mcopy -i$(TEMP_BOOT) $(TEMP)/elilo-cd.conf ::/efi/boot/elilo.conf
	
	$(foreach file,$(wildcard $(TEMP_BOOT_SCREENS)/*.msg), \
		if [ -e $(file).with26 ] && [ -n "$(INITRD_2.6)" ] && [ -n "$(KERNEL_2.6)" ]; then \
			mcopy -i$(TEMP_BOOT) $(file).with26 ::/efi/boot/`basename $(file)`; \
		else \
			mcopy -i$(TEMP_BOOT) $(file) ::/efi/boot/`basename $(file)`; \
		fi; \
	)
	echo "elilo linux" | mcopy -i$(TEMP_BOOT) - ::/install.nsh

.PHONY: arch_boot_screens
arch_boot_screens:
	-rm -f $(TEMP_BOOT_SCREENS)/*
	mkdir -p $(TEMP_BOOT_SCREENS)
	$(foreach SCREEN,$(wildcard boot/ia64/*.msg boot/ia64/*.msg.with26), \
		bootscreen-subst MEDIA_TYPE "$(MEDIA_TYPE)" \
			DEBIAN_VERSION "$(DEBIAN_VERSION)" \
			BUILD_DATE "$(BUILD_DATE)" \
		 < $(SCREEN) > $(TEMP_BOOT_SCREENS)/`basename $(SCREEN)`\
	;)

.PHONY: arch_miniiso
arch_miniiso: $(TEMP_BOOT)
	-rm -rf $(TEMP_CD_TREE)/*
	install -m 644 -D $(TEMP_BOOT) $(TEMP_CD_TREE)/boot/boot.img

	mkisofs -no-emul-boot -J -o $(TEMP_MINIISO) -b boot/boot.img \
		-c boot/boot.catalog $(TEMP_CD_TREE)

.PHONY: arch_netboot_dir
arch_netboot_dir:
	-rm -f $(TEMP_NETBOOT_DIR)
	mkdir -p $(TEMP_NETBOOT_DIR)/$(NETBOOT_PATH)
	cp $(TEMP_INITRD) $(TEMP_KERNEL) $(TEMP_NETBOOT_DIR)/$(NETBOOT_PATH)
	if [ -n "$(INITRD_2.6)" ] && [ -n "$(KERNEL_2.6)" ]; then \
		mkdir -p $(TEMP_NETBOOT_DIR)/$(NETBOOT_PATH)/2.6; \
		cp $(INITRD_2.6) $(KERNEL_2.6) $(TEMP_NETBOOT_DIR)/$(NETBOOT_PATH)/2.6; \
	fi
	
	cp /usr/lib/elilo/elilo.efi $(TEMP_NETBOOT_DIR)/$(NETBOOT_PATH)
	(if [ -n "$(INITRD_2.6)" ] && [ -n "$(KERNEL_2.6)" ]; then \
		cat boot/ia64/elilo.conf.with26; \
	else \
		cat boot/ia64/elilo.conf; \
	fi) \
	| ramdisk-size-subst $(TEMP_INITRD) $(INITRD_2.6) \
	| bootscreen-subst MEDIA_TYPE "$(MEDIA_TYPE)" \
		DEBIAN_VERSION "$(DEBIAN_VERSION)" \
		BUILD_DATE "$(BUILD_DATE)" \
		SYSDIR "$(BOOT_SCREEN_DIR)" \
		KERNEL vmlinuz INITRD initrd.gz \
		KERNEL_26 2.6/vmlinuz INITRD_26 2.6/initrd.gz \
	> $(TEMP_NETBOOT_DIR)/$(NETBOOT_PATH)/elilo.conf

	mkdir -p $(TEMP_NETBOOT_DIR)/$(NETBOOT_PATH)/$(BOOT_SCREEN_DIR)
	set -e; \
	$(foreach file,$(wildcard $(TEMP_BOOT_SCREENS)/*.msg), \
		if [ -e $(file).with26 ] && [ -n "$(INITRD_2.6)" ] && [ -n "$(KERNEL_2.6)" ]; then \
			cp $(file).with26 $(TEMP_NETBOOT_DIR)/$(NETBOOT_PATH)/$(BOOT_SCREEN_DIR)/`basename $(file)`; \
		else \
			cp $(file) $(TEMP_NETBOOT_DIR)/$(NETBOOT_PATH)/$(BOOT_SCREEN_DIR); \
		fi; \
	)
