#! /bin/sh
set -e

OLDIFS="$IFS"
NL="
"

SOURCES_LIST=$1
SUITE=$2
UDEB_COMPONENTS=$3

# Set to 1 or 2 to see increasing debug info about mirror tests
# Use 0 for quiet (normal) operation
VERBOSE=0

test_url() {
	local url=$1
	if [ $VERBOSE -ge 1 ]; then
		echo "DEBUG: testing 'wget --spider $url'" >&2
	fi
	if [ $VERBOSE -ge 2 ]; then
		# Redirect output from wget to stderr, with prefix
		if wget --spider $url 2>&1 | sed "s/^/  OUT: /" >&2; then
			return 0
		fi
	elif wget -q --spider $url >/dev/null 2>&1; then
		return 0
	fi
	return 1
}

MIRRORS="$(grep '^deb[ \t]' $SOURCES_LIST | \
	   grep -v '^deb[ \t]cdrom:' | \
	   grep -v '\(security.debian.org\|volatile.debian.\(net\|org\)\)' | \
	   grep '[ \t]main' | \
	   awk '{print $1 " " $2}' | \
	   sed 's,^deb file,deb copy,' | \
	   sed 's,/* *$,,')"

if ! which 'wget' >/dev/null; then
	echo "ERROR: the command wget is not available; please install it" >&2
	exit 1
fi

# Remove any duplicates at the end of the loop (the perl statement)
IFS=$NL
for mirror in $MIRRORS; do
	IFS="$OLDIFS"

	tmirror="$(echo $mirror | sed "s/^deb //")"
	# We should also check that d-i is available, but that's more complex.
	# Settle for just checking the suite/codename for now.
	if echo "$mirror" | grep -Eq "^deb (f|ht)tp" && \
	   ! test_url $tmirror/dists/$SUITE/Release; then
		echo "WARNING: mirror '$tmirror' appears to be invalid; skipping" >&2
		continue
	fi

	echo "$mirror $SUITE $UDEB_COMPONENTS"
done | perl -ne 'print unless $seen{$_}; $seen{$_}=1'
