#!/usr/bin/make -f

# Uncomment this to turn on verbose mode.
#export DH_VERBOSE=1

# This is the debhelper compatibility version to use.
export DH_COMPAT=2

PRIORITY=$(shell grep ^Priority: debian/control | cut -d ' ' -f 2)
VERSION=$(shell dpkg-parsechangelog | grep ^Version: | cut -d ' ' -f 2)
ARCH=$(shell dpkg --print-architecture)

build:
	# unpack all available deb files into unpacked/
	install -d unpacked
	for file in `find debs/ -maxdepth 1 -name '*.deb'`; do \
		dpkg-deb -x $$file unpacked/; \
	done

clean:
	dh_testdir
	dh_testroot
	rm -rf unpacked
	DH_CONTROL=debian/control.out dh_clean debian/control.out || dh_clean

install: build
	dh_testdir
	dh_testroot
	dh_clean -k
	# Actually installs all the modules into place, and
	# generates debian/control.out.
	./copy-modules

# Build architecture-independent files here.
binary-indep: build install
# We have nothing to do by default.

# Build architecture-dependent files here.
# Make debhelper use this processed control file.
export DH_CONTROL=
binary-arch: DH_CONTROL=debian/control.out
binary-arch: build install
	dh_testdir
	dh_testroot
	dh_testversion 2.2.15
	dh_testdir
	dh_testroot
	dh_compress
	dh_fixperms
	dh_installdeb
	dh_shlibdeps
	# Don't write your stupid guesses to debian/files.
	dh_gencontrol -- -fdebian/files~
	# Register udebs manually and build udebs.
	for package in `dh_listpackages`; do \
		dpkg-distaddfile $${package}_$(VERSION)_$(ARCH).udeb \
			debian-installer $(PRIORITY); \
		dh_builddeb --package=$${package} \
			--filename=$${package}_$(VERSION)_$(ARCH).udeb; \
	done

binary: binary-indep binary-arch
.PHONY: build clean binary-indep binary-arch binary install
