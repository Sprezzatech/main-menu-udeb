#!/bin/sh

. /lib/partman/definitions.sh

for dev in $DEVICES/*; do
    [ -d "$dev" ] || continue
    cd $dev
    partitions=
    open_dialog PARTITIONS
    while { read_line num id size type fs path name; [ "$id" ]; }; do
	[ "$fs" != free ] || continue
        partitions="$partitions $id,$num"
    done
    close_dialog
    
    for part in $partitions; do
        id=${part%,*}
        num=${part#*,}
	[ -f $id/method -a -f $id/format \
	    -a -f $id/acting_filesystem ] || continue
	filesystem=$(cat $id/acting_filesystem)
	case $filesystem in
	    linux-swap|ext2|fat16|fat32)
		log "Try to create file system for $dev/$id"
		open_dialog PARTITION_INFO $id
		read_line x1 x2 x3 x4 x5 device x6
		close_dialog
		db_subst partman-basicfilesystems/progress_formatting TYPE "$filesystem"
		db_subst partman-basicfilesystems/progress_formatting PARTITION "$num"
		db_subst partman-basicfilesystems/progress_formatting DEVICE $(humandev $(cat device))
		case $filesystem in
		    ext2)
			name_progress_bar partman-basicfilesystems/progress_formatting
			open_dialog CREATE_FILE_SYSTEM $id $filesystem
			read_line status
			close_dialog
			if [ "$status" != OK ]; then
			    db_progress START 0 3 partman/text/please_wait
			    db_progress INFO partman-basicfilesystems/progress_formatting
			    db_progress SET 1
			    if
				mkfs.ext2 $device >/dev/null 2>>/var/log/messages
			    then
				status=OK
			    else
				status=failed
			    fi
			    db_progress STOP
			fi
			;;
		    linux-swap)
			name_progress_bar partman-basicfilesystems/progress_formatting
			open_dialog CREATE_FILE_SYSTEM $id $filesystem
			read_line status
			close_dialog
			if [ "$status" != OK ]; then
			    db_progress START 0 3 partman/text/please_wait
			    db_progress INFO partman-basicfilesystems/progress_formatting
			    db_progress SET 1
			    if
				mkswap $device >/dev/null 2>>/var/log/messages
			    then
				status=OK
			    else
				status=failed
			    fi
			    db_progress STOP
			fi
			;;
		    fat16|fat32)
			name_progress_bar partman-basicfilesystems/progress_formatting
			open_dialog CREATE_FILE_SYSTEM $id $filesystem
			read_line status
			close_dialog
			;;
		esac

		if [ "$status" != OK ]; then
		    db_fset partman-basicfilesystems/create_failed seen false
		    db_subst partman-basicfilesystems/create_failed TYPE "$filesystem"
		    db_subst partman-basicfilesystems/create_failed PARTITION "$num"
		    db_subst partman-basicfilesystems/create_failed DEVICE $(humandev $(cat device))
		    db_input critical partman-basicfilesystems/create_failed || true
		    db_go || true
		    exit 1
		fi
		;;
	esac
    done
done
