#!/bin/sh

. /lib/partman/definitions.sh

dev=$2
id=$3
part=$dev/$id

cd $dev

[ -f $part/method -a -f $part/acting_filesystem ] || exit 0
filesystem=$(cat $part/acting_filesystem)

do_mountpoint () {
    local noninteractive tpl
    noninteractive=true
    while true; do
	if [ -f "$part/mountpoint" ]; then
	    old_mountpoint=$(cat $part/mountpoint)
	else
	    old_mountpoint=/
	fi
	case "$filesystem" in
	    fat16|fat32)
		tpl=partman-basicfilesystems/fat_mountpoint
		;;
	    *)
		tpl=partman-basicfilesystems/mountpoint
		;;
	esac
	db_fset $tpl seen false
	db_set $tpl "$old_mountpoint"
	db_input critical $tpl || $noninteractive
	db_go || return 1
	db_get $tpl

	case "$RET" in
	    Do?not?mount?it)
                [ ! -f "$part/mountpoint" ] || rm $part/mountpoint
		break
		;;
	    Enter?manually)
		if do_mountpoint_manual; then break; fi
		noninteractive="return 1"
		;;
	    *)
		echo $RET >$part/mountpoint
		break
	esac
    done
}

do_mountpoint_manual () {
    local noninteractive
    noninteractive=true
    while true; do
	new_mountpoint=''
	while [ ! "$new_mountpoint" ]; do
	    if [ -f "$part/mountpoint" ]; then
		old_mountpoint=$(cat $part/mountpoint)
	    else
		old_mountpoint=/
	    fi
	    db_fset partman-basicfilesystems/mountpoint_manual seen false
	    db_set partman-basicfilesystems/mountpoint_manual "$old_mountpoint"
	    db_input critical partman-basicfilesystems/mountpoint_manual \
		|| $noninteractive
	    db_go || return 1
	    db_get partman-basicfilesystems/mountpoint_manual
	    
	    if expr "$RET" : '/[^ ]*' >/dev/null; then
		new_mountpoint=$RET
	    else
		db_fset partman-basicfilesystems/bad_mountpoint seen false
		db_input high partman-basicfilesystems/bad_mountpoint || true
		db_go || true
	    fi
	done
	echo $RET >$part/mountpoint
	break
    done
}

do_options () {
    local tpl seen_marker old_options
    tpl=$1
    seen_marker=$DEVICES/`basename $tpl`_seen
    if [ ! -f "$seen_marker" ]; then
	db_input high ${tpl}_help || true
	db_go || exit
	>"$seen_marker"
    fi
    db_fset $tpl seen false
    if [ -f $part/mountoptions ]; then
	old_options=$(cat $part/mountoptions)
    else
	old_options=''
    fi
    db_set $tpl "$old_options"
    db_input critical $tpl || true
    db_go || exit
    db_get $tpl
    echo "$RET" >$part/mountoptions
}

case $1 in
    mountpoint)
	do_mountpoint
	update_partition $dev $id
	;;
    options)
	do_options partman-basicfilesystems/options
	;;
    fatoptions)
	do_options partman-basicfilesystems/fatoptions
	;;
esac

