#!/bin/sh
set -e

if [ "$1" = "-v" ]; then
	VERBOSE=1
	shift 1
fi

DATESTAMP=$(date +%Y%m%d%H%M)
export DATESTAMP
MACHINE="$1"
shift 1

if [ -z "$MACHINE" ]; then
	echo "Usage: $0 [-v] machine scheme [scheme ...]" >&2
	exit 1
fi

config () {
	var="$1"
	shift 1
	eval "$var='$@'"
}

use () {
	. $DI_TESTDIR/schemes/$MACHINE/$1
}

overview_add () {
	LANG=C echo "$ARCH ($(date)) $(whoami)@$(hostname | cut -d . -f 1) $MACHINE-$SCHEME $1" >> $LOGDIR/overview.log
}

overview () {
	grep -v "$MACHINE-$SCHEME " $LOGDIR/overview.log > $LOGDIR/overview.log.new || true
	mv $LOGDIR/overview.log.new $LOGDIR/overview.log
	overview_add "$@"
}

failure_overview () {
	if [ "$(cat $FAILURE_STATUS_FILE)" != "SIGNAL" ]; then
		overview "failed $(cat $FAILURE_STATUS_FILE) $(why_failed $LOGDIR/$DATESTAMP/$MACHINE-$SCHEME.log)"
	else
		overview "failed SIGNAL"
	fi
}

log () {
	local machine=$1
	local scheme=$2
	local logfile=$LOGDIR/$DATESTAMP/$machine-$scheme.log

	if [ "$VERBOSE" = 1 ]; then
		tee $logfile
	else
		cat > $logfile
	fi

	sed -e "s/\x0f/\n/g" \
		-e "s/\x0e//g" \
		-e "s/\r//g" \
		-e "s/[\x1b]\()0\|(B\|[\x5b][;0-9]*[CHJrlhm]\)//g" |
	sed -e "s/^[[:space:]\x08]*$//g;s/[[:space:]]*x//g" |
	tr -s "\n" < $logfile > $logfile.asc
}

why_failed () {
	if grep -q timeout "$1"; then
		echo "timeout"
		return
	fi

	# Try to find a failure message in the log.
	# This is dependant on both d-i output formats and on the log being
	# in a parseable format.
	di_err=$(strings "$1" | grep '\[!!\]' |tail -n 1 | sed 's/.*\[!!\] *//')
	if [ -n "$di_err" ]; then
		echo "$di_err"
	fi
}

DIGRESSDIR=$(dirname $0)
cd $DIGRESSDIR

PATH=$PATH:$DIGRESSDIR/boot:$DIGRESSDIR/preboot:$DIGRESSDIR/console:$DIGRESSDIR/test_1:$DIGRESSDIR/test_2:$DIGRESSDIR/shutdown:$DIGRESSDIR/utils
export PATH

if [ -z "$DI_TESTDIR" ]; then
	DI_TESTDIR=$DIGRESSDIR
fi

if [ -z "$DI_TESTDIR" ] || [ ! -e "$DI_TESTDIR/config" ]; then
	echo "Cannot determine DI_TESTDIR" >&2
	exit 1
fi

. $DI_TESTDIR/config

for SCHEME in $@; do
	RETRY=""
	LOGDIR=$DI_TESTDIR/logs
	export LOGDIR
	use common
	use $SCHEME

	# ensure that the logs don't use too much disk
	if [ -d "$LOGDIR" ] && [ "$MAXLOGS" ]; then
		(
			cd "$LOGDIR"
			for dir in $(find -type d -name '[0-9]*' | sort -n); do
				if [ "$(find -type d -name '[0-9]*' | wc -l)" -gt "$MAXLOGS" ]; then
					rm -rf "$dir"
				fi
			done
		)
	fi
	
	mkdir -p $LOGDIR/$DATESTAMP
	touch $LOGDIR/overview.log

	overview_add incomplete

	FAILURE_STATUS_FILE=$(tempfile)
	export FAILURE_STATUS_FILE
	
	ln -sf $LOGDIR/$DATESTAMP/$MACHINE-$SCHEME.log $LOGDIR/$MACHINE-$SCHEME.log
	(if $DIGRESSDIR/test-harness $MACHINE $SCHEME; then
		overview success
	else
		if [ -n "$RETRY" ]; then
			if $DIGRESSDIR/test-harness $MACHINE $SCHEME 2>&1; then
				overview "success second try"
			else
				failure_overview
			fi
		else
			failure_overview
		fi
	fi) 2>&1 | log $MACHINE $SCHEME

	rm -f $FAILURE_STATUS_FILE
done
