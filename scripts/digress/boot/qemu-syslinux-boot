#!/usr/bin/perl
# Handles booting from qemu's console.
use warnings;
use strict;
use Expect;
use POSIX 'setsid';

# This list is derived from monitor.c in qemu's source.
my %keys = (
	"=" => "equal",
	"-" => "minus",
	" " => "spc",
	"\n" => "ret",
);
$keys{$_}=$_ foreach ('a'..'z', 0..9);
$keys{$_}="shift-".lc($_) foreach ('A'..'Z');

print "boot: $ENV{BOOTCOMMAND}\n";

# Run in the background, because qemu won't begin accepting console input
# until the connection is made to its serial port, by console-qemu.
open STDIN, '/dev/null';
defined(my $pid = fork) or die "Canâ€™t fork: $!";
if ($pid) {
	exit;
}
setsid;

my $exp = new Expect;
#$exp->debug(2);
$exp->raw_pty(1);
$exp->spawn($ENV{START_COMMAND}) or die "running \"$ENV{START_COMMAND}\": $!";

$exp->expect(60, "(qemu)");
foreach my $letter (split('', $ENV{BOOTCOMMAND}), "\n") {
	select(undef, undef, undef, 0.25);
	if (! exists $keys{$letter}) {
		die "Don't know how to send letter \"$letter\" from BOOTCOMMAND to qemu console";
	}
	$exp->send("sendkey $keys{$letter}\n");
	$exp->expect(60, "(qemu)");
}

$exp->expect(undef, "EOF");
