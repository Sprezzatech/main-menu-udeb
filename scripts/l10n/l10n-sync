#!/bin/bash
# (there may be some bashisms in this script)
#
# This script synchronises the D-I packages maintainers templates
# and translators translations
#
# Translators, DO NOT USE IT YOURSELVES!!!!
#
# See installer/doc/i18n/i18n.txt for details about 
# the single master file for translations

COMMIT_MARKER="[l10n] [l10n-sync]"

# Defaults
ONLINE=N
ATOMIC_COMMITS=N
BIG_COMMITS=N
DEBUG=N
KEEP_REVISION=N
svn=svn
debconfupdatepo=debconf-updatepo

usage() {
echo  "Usage:"
echo  "$0 [--keep-revision=lang] [--online] [--atomic] [--commit] [--svn="path_to_svn"] [--debconf-updatepo="debconf-updatepo command"] <D-I repository path>"
}

##  Command line parsing
MORETODO=true
while $MORETODO ; do
    case "$1" in
    "--online")
        ONLINE=Y
        shift
        ;;
    "--keep-revision"*)
        KEEP_REVISION=`echo $1|cut -f2 -d=`
	if [ -z "$KEEP_REVISION" ] ; then
	    usage
	    exit 1
	fi
        shift
        ;;
    "--debug")
        DEBUG=Y
        shift
        ;;
    "--atomic")
        ATOMIC_COMMITS=Y
        shift
        ;;      
    "--commit")
        BIG_COMMITS=Y
        shift
        ;;
    "--svn="*)
        svn=`echo $1|cut -f2 -d=`
        shift
        ;;
    "--debconf-updatepo="*)
        debconfupdatepo=`echo $1|cut -f2 -d=`
        shift
        ;;
    "--"*)
	echo "Illegal option: $1" 1>&2
	usage
	exit 1
        ;;
    *)
        DI_COPY=$1
	MORETODO=false
        ;;
    esac
done

if [ -z "$DI_COPY" ]
then
  usage
  exit 1
fi

# If we asked for commits we are online...:-)
if [ "$ATOMIC_COMMITS" = "Y" -o "$BIG_COMMITS" = "Y" ] ; then
   ONLINE=Y
fi

# If we asked for atomic commits, we don't want big commits
if [ "$ATOMIC_COMMITS" = "Y" ] ; then
   BIG_COMMITS=N
fi


# A few checks about the D-I copy directory
if [ ! -d $DI_COPY ] ; then
  echo $DI_COPY does not exist
  exit 1
fi

if [ ! -d $DI_COPY/.svn ] ; then
  echo No $DI_COPY/.svn directory found
  echo $DI_COPY may not be a copy of Debian Installer SVN repository
  exit 1
fi

if ! grep "svn/d-i/trunk" $DI_COPY/.svn/entries >/dev/null 2>&1 ; then
  echo $DI_COPY does not seem to be a complete Debian Installer SVN copy
  echo Please check it before...
  exit 1
fi

# First, update the copy of D-I repository
cd $DI_COPY
if [ "$ONLINE" = "Y" ] ; then
  if [ "$DEBUG" = "Y" ] ; then
    echo Synchronising $DI_COPY:
    $svn update
    echo Done.
  else
    $svn update >/dev/null 2>&1
  fi
fi

# Build a list of all D-I packages with i18n material
cd packages
if [ "$DEBUG" = "Y" ] ; then
  echo -n Building a list of all packages with i18n material...
fi
pots=$(find . -mindepth 3 -name templates.pot |\
          grep /debian/po/templates.pot\$)
packages=$(echo $pots |\
          sed 's/\.\///g'|\
          sed 's/\/debian\/po\/templates\.pot//g')
if [ "$DEBUG" = "Y" ] ; then
  echo Done.
fi

# Loop over packages
#  1a) sync the debian/ directory
#  1b) run debconf-updatepo
#  1c) commit back the changes
if [ "$DEBUG" = "Y" ] ; then
  echo Run debconf-updatepo for all packages:
fi

for i in  $packages ; do 
 if [ "$DEBUG" = "Y" ] ; then
  echo "  $i:"
 fi
 cd $DI_COPY/packages/$i/debian
 if [ "$ONLINE" = "Y" ] ; then
   if [ "$DEBUG" = "Y" ] ; then
     echo -n "    - Update..."
     $svn update
   else
     $svn update >/dev/null 2>&1
   fi
   if [ "$DEBUG" = "Y" ] ; then
    echo Done.
   fi
 fi
 if [ "$DEBUG" = "Y" ] ; then
  echo -n "    - Debconf-updatepo..."
 fi
 cd $DI_COPY/packages/$i/debian
 if [ "$DEBUG" = "Y" ] ; then
   $debconfupdatepo
 else
   $debconfupdatepo >/dev/null 2>&1
 fi
 if [ "$DEBUG" = "Y" ] ; then
   echo Done.
 fi
 if [ "$ATOMIC_COMMITS" = "Y"  -o "$BIG_COMMITS" = "Y" ] ; then
   if [ "$DEBUG" = "Y" ] ; then
     echo -n "    - Commit..."
   fi
   cd $DI_COPY/packages/$i/debian/po
   $svn commit -m"${COMMIT_MARKER} Run debconf-updatepo on $DI_COPY/packages/$i" 
   if [ "$DEBUG" = "Y" ] ; then
     echo Done.
   fi
 fi
done

# 2) Merge all templates.pot file together
cd $DI_COPY/packages
if [ "$DEBUG" = "Y" ] ; then
  echo -n "Creating the general template.pot file..."
fi
if [ "$DEBUG" = "Y" ] ; then
  msgcat $pots | sed 's/charset=CHARSET/charset=UTF-8/g' >$DI_COPY/packages/po/template.pot.new
else
  msgcat $pots  | sed 's/charset=CHARSET/charset=UTF-8/g'>$DI_COPY/packages/po/template.pot.new 2>/dev/null
fi
# We don't want all templates.pot files headers as we don't care about them
# So we merge the generated file with a simple header.pot file
if [ -f po/header.pot ] ; then
  msgcat --use-first po/header.pot po/template.pot.new | sed 's/charset=UTF-8/charset=CHARSET/g' > po/template.pot
  rm po/template.pot.new
else
  echo ERROR : no $DI_COPY/packages/po/header.pot file. Cannot continue.
  exit 1
fi
if [ "$DEBUG" = "Y" ] ; then
  echo Done.
fi
if [ "$ATOMIC_COMMITS" = "Y" ] ; then
  if [ "$DEBUG" = "Y" ] ; then
    echo -n "Commiting the general template.pot file..."
  fi
  cd $DI_COPY/packages/po
  $svn commit -m"${COMMIT_MARKER} Update general template file from the l10n synchronisation script" template.pot
  if [ "$DEBUG" = "Y" ] ; then
    echo Done.
  fi
fi

# For each PO file in packages/po:
# 3a) Synchronize with D-I SVN
# 3b) Update with template.pot
# 3c) commit back the changed file
if [ "$DEBUG" = "Y" ] ; then
  echo Updating general PO files:
fi
cd $DI_COPY/packages/po
languages=$(ls -1 *.po | sed 's/\.po//g')
for po in *.po ; do
 lang=$(basename $po .po)
 if [ "$DEBUG" = "Y" ] ; then
  echo "   $lang:"
 fi
 if [ "$ONLINE" = "Y" ] ; then
   if [ "$DEBUG" = "Y" ] ; then
     echo -n "     - Update from SVN..."
   fi
   if [ "$DEBUG" = "Y" ] ; then
     $svn update
   else
     $svn update >/dev/null 2>&1
   fi
   if [ "$DEBUG" = "Y" ] ; then
     echo Done.
   fi
 fi
 if [ "$DEBUG" = "Y" ] ; then
   echo "     - Merge with template.pot:"
 fi
 if [ "$DEBUG" = "Y" ] ; then
   # This will not make comments go into the PO files
   # but this have been proven to work
   # msgmerge -U $po template.pot
   #
   # Less tested
   msgmerge $po template.pot >$po.new
   mv $po.new $po
 else
   # This will not make comments go into the PO files
   # but this have been proven to work
   # msgmerge -U $po template.pot >/dev/null 2>&1
   #
   # Less tested
   msgmerge $po template.pot >$po.new 2>/dev/null
   mv $po.new $po
 fi
 if [ "$ATOMIC_COMMITS" = "Y"  ] ; then
   if [ "$DEBUG" = "Y" ] ; then
     echo -n "     - Commit back to SVN..."
   fi
   $svn commit -m"${COMMIT_MARKER} Updated packages/po/$po with general template.pot" $po
   if [ "$DEBUG" = "Y" ] ; then
     echo Done.
   fi
 fi
done
if [ "$BIG_COMMITS" = "Y" ] ; then
   if [ "$DEBUG" = "Y" ] ; then
     echo -n "Commit all general PO files to SVN..."
   fi
   $svn commit -m"${COMMIT_MARKER} Updated packages/po/* with general template.pot" *.po template.pot
   if [ "$DEBUG" = "Y" ] ; then
     echo Done.
   fi
fi


# Loop over D-I packages:
# 4a) synchronize the local copy with the D-I SVN 
# 4b) update debian/po/*.po files with files in packages/po/
# 4c) commit back the changes to D-I SVN
if [ "$DEBUG" = "Y" ] ; then
  echo Updating D-I packages:
fi
for package in $packages ; do
 if [ "$DEBUG" = "Y" ] ; then
  echo "   $package:"
 fi
 cd $DI_COPY/packages/$package/debian/po
 if [ "$ONLINE" = "Y" ] ; then
   if [ "$DEBUG" = "Y" ] ; then
     echo -n "      - synchronize with D-I repository..."
   fi
   if [ "$DEBUG" = "Y" ] ; then
     $svn update
   else
     $svn update >/dev/null 2>&1
   fi
   if [ "$DEBUG" = "Y" ] ; then
     echo Done.
   fi
 fi
 if [ "$DEBUG" = "Y" ] ; then
   echo -n "      - rebuild languages files: "
 fi
 # For each languages listed in packages/po, update PO files
 for lang in $languages ; do
      if [ "$DEBUG" = "Y" ] ; then
        echo -n "$lang "
      fi
      cat >$lang.po.new <<EOF
# THIS FILE IS AUTOMATICALLY GENERATED FROM THE MASTER FILE
# packages/po/$lang.po
#
# DO NOT MODIFY IT DIRECTLY : SUCH CHANGES WILL BE LOST
# 
EOF
      if [ "$DEBUG" = "Y" ] ; then
        msgmerge $DI_COPY/packages/po/$lang.po templates.pot |\
           msgattrib --no-obsolete - >>$lang.po.new
      else
        msgmerge $DI_COPY/packages/po/$lang.po templates.pot 2>/dev/null |\
           msgattrib --no-obsolete - >>$lang.po.new 2>/dev/null
      fi
      # We use the new file only if the changes are more than just 
      # changing the PO-Revision-Date line
      if [ -f $lang.po ] ; then
        if [ $(diff --ignore-matching-lines="PO-Revision-Date" $lang.po $lang.po.new | wc -l) = 0 ] ; then
	  rm $lang.po.new
        else
          # We put the old Revision-Date back if asked for
	  # or if only a comment changed
	  if [ "$KEEP_REVISION" != "N" -a "$KEEP_REVISION" = "$lang" -o $(diff --ignore-matching-lines="^#" $lang.po $lang.po.new | wc -l) = 0 ] ; then
	    # We grab back the PO-Revision-Date from the old file
	    old_revision=`cat $lang.po| grep -e "^\"PO-Revision-Date:" | sed 's/\\\\n\"//g'`
	    # And we replace the one from the new file by it
	    # then put all this as a result
	    cat $lang.po.new | sed "s/\"PO-Revision-Date:.*/$old_revision\\\\n\"/g" >$lang.po	    
	    rm $lang.po.new
	  else
	    mv $lang.po.new $lang.po
            if [ "$DEBUG" = "Y" ] ; then
	      echo -n "(CHANGED) "
	    else
              echo ${package}/debian/po/${lang}.po CHANGED
	    fi
	  fi
        fi
      else
	mv $lang.po.new $lang.po
	svn add $lang.po
        if [ "$DEBUG" = "Y" ] ; then
	  echo -n "(ADDED) "
        else
          echo ${package}/debian/po/${lang}.po ADDED
	fi
      fi
 done
 echo ""
 if [ "$ATOMIC_COMMITS" = "Y"  ] ; then
   if [ "$DEBUG" = "Y" ] ; then
     echo -n "      - commiting back updated files..."
   fi
   if [ "$DEBUG" = "Y" ] ; then
     $svn commit -m"${COMMIT_MARKER} Synchronising with $lang files from packages/po" *.po
   else
     $svn commit -m"${COMMIT_MARKER} Synchronising with $lang files from packages/po" *.po >/dev/null 2>&1
   fi
   if [ "$DEBUG" = "Y" ] ; then
     echo Done.
   fi
 fi
done

# Do the big commits for each language
if [ "$BIG_COMMITS" = "Y" ] ; then
  cd $DI_COPY/packages
  for lang in $languages ; do
     $svn commit -m"${COMMIT_MARKER} Synchronising with $lang files from packages/po" $(find . -mindepth 3 -name $lang.po |\
              grep /debian/po/$lang.po\$)
  done
fi

