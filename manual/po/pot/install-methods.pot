# SOME DESCRIPTIVE TITLE.
# Copyright (C) YEAR Free Software Foundation, Inc.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2001-02-09 01:25+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: application/x-xml2pot; charset=UTF-8\n"
"Content-Transfer-Encoding: ENCODING\n"

#: install-methods.xml:5
#, no-c-format
#. Tag: title
msgid "Obtaining System Installation Media"
msgstr ""

#: install-methods.xml:12
#, no-c-format
#. Tag: title
msgid "Official &debian; CD-ROM Sets"
msgstr ""

#: install-methods.xml:13
#, no-c-format
#. Tag: para
msgid "By far the easiest way to install &debian; is from an Official Debian CD-ROM Set. You can buy a set from a vendor (see the <ulink url=\"&url-debian-cd-vendors;\">CD vendors page</ulink>). You may also download the CD-ROM images from a Debian mirror and make your own set, if you have a fast network connection and a CD burner (see the <ulink url=\"&url-debian-cd;\">Debian CD page</ulink> for detailed instructions). If you have a Debian CD set and CDs are bootable on your machine, you can skip right to <xref linkend=\"boot-installer\"/>; much effort has been expended to ensure the files most people need are there on the CD. Although a full set of binary packages requires several CDs, it is unlikely you will need packages on the third CD and above. You may also consider using the DVD version, which saves a lot of space on your shelf and you avoid the CD shuffling marathon."
msgstr ""

#: install-methods.xml:30
#, no-c-format
#. Tag: para
msgid "If your machine doesn't support CD booting, but you do have a CD set, you can use an alternative strategy such as <phrase condition=\"supports-floppy-boot\">floppy disk,</phrase> <phrase arch=\"s390\">tape, emulated tape,</phrase> <phrase condition=\"bootable-disk\">hard disk,</phrase> <phrase condition=\"bootable-usb\">usb stick,</phrase> <phrase condition=\"supports-tftp\">net boot,</phrase> or manually loading the kernel from the CD to initially boot the system installer. The files you need for booting by another means are also on the CD; the Debian network archive and CD folder organization are identical. So when archive file paths are given below for particular files you need for booting, look for those files in the same directories and subdirectories on your CD."
msgstr ""

#: install-methods.xml:52
#, no-c-format
#. Tag: para
msgid "Once the installer is booted, it will be able to obtain all the other files it needs from the CD."
msgstr ""

#: install-methods.xml:57
#, no-c-format
#. Tag: para
msgid "If you don't have a CD set, then you will need to download the installer system files and place them on the <phrase arch=\"s390\">installation tape</phrase> <phrase condition=\"supports-floppy-boot\">floppy disk or</phrase> <phrase condition=\"bootable-disk\">hard disk or</phrase> <phrase condition=\"bootable-usb\">usb stick or</phrase> <phrase condition=\"supports-tftp\">a connected computer</phrase> so they can be used to boot the installer."
msgstr ""

#: install-methods.xml:83
#, no-c-format
#. Tag: title
msgid "Downloading Files from Debian Mirrors"
msgstr ""

#: install-methods.xml:85
#, no-c-format
#. Tag: para
msgid "To find the nearest (and thus probably the fastest) mirror, see the <ulink url=\"&url-debian-mirrors;\">list of Debian mirrors</ulink>."
msgstr ""

#: install-methods.xml:90
#, no-c-format
#. Tag: para
msgid "When downloading files from a Debian mirror, be sure to download the files in <emphasis>binary</emphasis> mode, not text or automatic mode."
msgstr ""

#: install-methods.xml:99
#, no-c-format
#. Tag: title
msgid "Where to Find Installation Images"
msgstr ""

#: install-methods.xml:101
#, no-c-format
#. Tag: para
msgid "The installation images are located on each Debian mirror in the directory <ulink url=\"&url-debian-installer;/images\">debian/dists/&releasename;/main/installer-&architecture;/current/images/</ulink> &mdash; the <ulink url=\"&url-debian-installer;/images/MANIFEST\">MANIFEST</ulink> lists each image and its purpose."
msgstr ""

#: install-methods.xml:113
#, no-c-format
#. Tag: title
msgid "Alpha Installation Files"
msgstr ""

#: install-methods.xml:114
#, no-c-format
#. Tag: para
msgid "If you choose to boot from ARC console firmware using <command>MILO</command>, you will also need to prepare a disk containing <command>MILO</command> and <command>LINLOAD.EXE</command> from the provided disk images. See <xref linkend=\"alpha-firmware\"/> for more information on Alpha firmware and boot loaders. The floppy images can be found in the <filename>MILO</filename> directory as <filename>milo_<replaceable>subarchitecture</replaceable>.bin</filename>."
msgstr ""

#: install-methods.xml:125
#, no-c-format
#. Tag: para
msgid "Unfortunately, these <command>MILO</command> images could not be tested and might not work for all subarchitectures. If you find it doesn't work for you, try copying the appropriate <command>MILO</command> binary onto the floppy (<ulink url=\"&disturlftp;main/disks-alpha/current/MILO/\"></ulink>). Note that those <command>MILO</command>s don't support ext2 <quote>sparse superblocks</quote>, so you can't use them to load kernels from newly generated ext2 file systems. As a workaround, you can put your kernel onto the FAT partition next to the <command>MILO</command>."
msgstr ""

#: install-methods.xml:137
#, no-c-format
#. Tag: para
msgid "<command>MILO</command> binaries are platform-specific. See <xref linkend=\"alpha-cpus\"/> to determine the appropriate <command>MILO</command> image for your Alpha platform."
msgstr ""

#: install-methods.xml:152
#, no-c-format
#. Tag: title
msgid "RiscPC Installation Files"
msgstr ""

#: install-methods.xml:153
#, no-c-format
#. Tag: para
msgid "The RiscPC installer is booted initially from RISC OS. All the necessary files are provided in one Zip archive, &rpc-install-kit;. Download this file onto the RISC OS machine, copy the <filename>linloader.!Boot</filename> components into place, and run <filename>!dInstall</filename>."
msgstr ""

#: install-methods.xml:165
#, no-c-format
#. Tag: title
msgid "NetWinder Installation Files"
msgstr ""

#: install-methods.xml:166
#, no-c-format
#. Tag: para
msgid "The easiest way to boot a NetWinder is over the network, using the supplied TFTP image &netwinder-boot-img;."
msgstr ""

#: install-methods.xml:175
#, no-c-format
#. Tag: title
msgid "CATS Installation Files"
msgstr ""

#: install-methods.xml:176
#, no-c-format
#. Tag: para
msgid "The only supported boot method for CATS is to use the combined image &cats-boot-img;. This can be loaded from any device accessible to the Cyclone bootloader."
msgstr ""

#: install-methods.xml:221
#, no-c-format
#. Tag: title
msgid "Choosing a Kernel"
msgstr ""

#: install-methods.xml:223
#, no-c-format
#. Tag: para
msgid "Some m68k subarchs have a choice of kernels to install. In general we recommend trying the most recent version first. If your subarch or machine needs to use a 2.2.x kernel, make sure you choose one of the images that supports 2.2.x kernels (see the <ulink url=\"&disturl;/main/installer-&architecture;/current/images/MANIFEST\">MANIFEST</ulink>)."
msgstr ""

#: install-methods.xml:232
#, no-c-format
#. Tag: para
msgid "All of the m68k images for use with 2.2.x kernels, require the kernel parameter &ramdisksize;."
msgstr ""

#: install-methods.xml:250
#, no-c-format
#. Tag: title
msgid "Creating an IPL tape"
msgstr ""

#: install-methods.xml:252
#, no-c-format
#. Tag: para
msgid "If you can't boot (IPL) from the CD-ROM and you are not using VM you need to create an IPL tape first. This is described in section 3.4.3 in the <ulink url=\"http://www.redbooks.ibm.com/pubs/pdfs/redbooks/sg246264.pdf\"> Linux for IBM eServer zSeries and S/390: Distributions</ulink> Redbook. The files you need to write to the tape are (in this order): <filename>kernel.debian</filename>, <filename>parmfile.debian</filename> and <filename>initrd.debian</filename>. The files can be downloaded from the <filename>tape</filename> sub-directory, see <xref linkend=\"where-files\"/>,"
msgstr ""

#: install-methods.xml:276
#, no-c-format
#. Tag: title
msgid "Creating Floppies from Disk Images"
msgstr ""

#: install-methods.xml:277
#, no-c-format
#. Tag: para
msgid "Bootable floppy disks are generally used as a last resort to boot the installer on hardware that cannot boot from CD or by other means."
msgstr ""

#: install-methods.xml:282
#, no-c-format
#. Tag: para
msgid "Floppy disk booting reportedly fails on Mac USB floppy drives."
msgstr ""

#: install-methods.xml:286
#, no-c-format
#. Tag: para
msgid "Floppy disk booting is not supported on Amigas or 68k Macs."
msgstr ""

#: install-methods.xml:291
#, no-c-format
#. Tag: para
msgid "Disk images are files containing the complete contents of a floppy disk in <emphasis>raw</emphasis> form. Disk images, such as <filename>boot.img</filename>, cannot simply be copied to floppy drives. A special program is used to write the image files to floppy disk in <emphasis>raw</emphasis> mode. This is required because these images are raw representations of the disk; it is required to do a <emphasis>sector copy</emphasis> of the data from the file onto the floppy."
msgstr ""

#: install-methods.xml:302
#, no-c-format
#. Tag: para
msgid "There are different techniques for creating floppies from disk images, which depend on your platform. This section describes how to create floppies from disk images on different platforms."
msgstr ""

#: install-methods.xml:308
#, no-c-format
#. Tag: para
msgid "No matter which method you use to create your floppies, you should remember to flip the write-protect tab on the floppies once you have written them, to ensure they are not damaged unintentionally."
msgstr ""

#: install-methods.xml:316
#, no-c-format
#. Tag: title
msgid "Writing Disk Images From a Linux or Unix System"
msgstr ""

#: install-methods.xml:317
#, no-c-format
#. Tag: para
msgid ""
      "To write the floppy disk image files to the floppy disks, you will probably need root access to the system. Place a good, blank floppy in the floppy drive. Next, use the command <informalexample><screen>\n"
      "$ dd if=<replaceable>filename</replaceable> of=/dev/fd0 bs=1024 conv=sync ; sync\n"
      "</screen></informalexample> where <replaceable>filename</replaceable> is one of the floppy disk image files (see <xref linkend=\"downloading-files\"/> for what <replaceable>filename</replaceable> should be). <filename>/dev/fd0</filename> is a commonly used name of the floppy disk device, it may be different on your workstation <phrase arch=\"sparc\">(on Solaris, it is <filename>/dev/fd/0</filename>)</phrase>. The command may return to the prompt before Unix has finished writing the floppy disk, so look for the disk-in-use light on the floppy drive and be sure that the light is out and the disk has stopped revolving before you remove it from the drive. On some systems, you'll have to run a command to eject the floppy from the drive <phrase arch=\"sparc\">(on Solaris, use <command>eject</command>, see the manual page)</phrase>."
msgstr ""

#: install-methods.xml:341
#, no-c-format
#. Tag: para
msgid "Some systems attempt to automatically mount a floppy disk when you place it in the drive. You might have to disable this feature before the workstation will allow you to write a floppy in <emphasis>raw mode</emphasis>. Unfortunately, how to accomplish this will vary based on your operating system. <phrase arch=\"sparc\"> On Solaris, you can work around volume management to get raw access to the floppy. First, make sure that the floppy is auto-mounted (using <command>volcheck</command> or the equivalent command in the file manager). Then use a <command>dd</command> command of the form given above, just replace <filename>/dev/fd0</filename> with <filename>/vol/rdsk/<replaceable>floppy_name</replaceable></filename>, where <replaceable>floppy_name</replaceable> is the name the floppy disk was given when it was formatted (unnamed floppies default to the name <filename>unnamed_floppy</filename>). On other systems, ask your system administrator. </phrase>"
msgstr ""

#: install-methods.xml:362
#, no-c-format
#. Tag: para
msgid "If writing a floppy on powerpc Linux, you will need to eject it. The <command>eject</command> program handles this nicely; you might need to install it."
msgstr ""

#: install-methods.xml:380
#, no-c-format
#. Tag: title
msgid "Writing Disk Images From DOS, Windows, or OS/2"
msgstr ""

#: install-methods.xml:382
#, no-c-format
#. Tag: para
msgid "If you have access to an i386 machine, you can use one of the following programs to copy images to floppies."
msgstr ""

#: install-methods.xml:387
#, no-c-format
#. Tag: para
msgid "The <command>rawrite1</command> and <command>rawrite2</command> programs can be used under MS-DOS. To use these programs, first make sure that you are booted into DOS. Trying to use these programs from within a DOS box in Windows, or double-clicking on these programs from the Windows Explorer is <emphasis>not</emphasis> expected to work."
msgstr ""

#: install-methods.xml:395
#, no-c-format
#. Tag: para
msgid "The <command>rwwrtwin</command> program runs on Windows 95, NT, 98, 2000, ME, XP and probably later versions. To use it you will need to unpack diskio.dll in the same directory."
msgstr ""

#: install-methods.xml:401
#, no-c-format
#. Tag: para
msgid "These tools can be found on the Official Debian CD-ROMs under the <filename>/tools</filename> directory."
msgstr ""

#: install-methods.xml:414
#, no-c-format
#. Tag: title
msgid "Writing Disk Images on Atari Systems"
msgstr ""

#: install-methods.xml:415
#, no-c-format
#. Tag: para
msgid "You'll find the &rawwrite.ttp; program in the same directory as the floppy disk images. Start the program by double clicking on the program icon, and type in the name of the floppy image file you want written to the floppy at the TOS program command line dialog box."
msgstr ""

#: install-methods.xml:426
#, no-c-format
#. Tag: title
msgid "Writing Disk Images on Macintosh Systems"
msgstr ""

#: install-methods.xml:427
#, no-c-format
#. Tag: para
msgid "There is no MacOS application to write images to floppy disks (and there would be no point in doing this as you can't use these floppies to boot the installation system or install kernel and modules from on Macintosh). However, these files are needed for the installation of the operating system and modules, later in the process."
msgstr ""

#: install-methods.xml:445
#, no-c-format
#. Tag: title
msgid "Writing Disk Images From MacOS"
msgstr ""

#: install-methods.xml:446
#, no-c-format
#. Tag: para
msgid "An AppleScript, <application>Make Debian Floppy</application>, is available for burning floppies from the provided disk image files. It can be downloaded from <ulink url=\"ftp://ftp2.sourceforge.net/pub/sourceforge/d/de/debian-imac/MakeDebianFloppy.sit\"></ulink>. To use it, just unstuff it on your desktop, and then drag any floppy image file to it. You must have Applescript installed and enabled in your extensions manager. Disk Copy will ask you to confirm that you wish to erase the floppy and proceed to write the file image to it."
msgstr ""

#: install-methods.xml:457
#, no-c-format
#. Tag: para
msgid "You can also use the MacOS utility <command>Disk Copy</command> directly, or the freeware utility <command>suntar</command>. The <filename>root.bin</filename> file is an example of a floppy image. Use one of the following methods to create a floppy from the floppy image with these utilities."
msgstr ""

#: install-methods.xml:468
#, no-c-format
#. Tag: title
msgid "Writing Disk Images with <command>Disk Copy</command>"
msgstr ""

#: install-methods.xml:469
#, no-c-format
#. Tag: para
msgid "If you are creating the floppy image from files which were originally on the official &debian; CD, then the Type and Creator are already set correctly. The following <command>Creator-Changer</command> steps are only necessary if you downloaded the image files from a Debian mirror."
msgstr ""

#: install-methods.xml:478
#, no-c-format
#. Tag: para
msgid "Obtain <ulink url=\"&url-powerpc-creator-changer;\">Creator-Changer</ulink> and use it to open the <filename>root.bin</filename> file."
msgstr ""

#: install-methods.xml:485
#, no-c-format
#. Tag: para
msgid "Change the Creator to <userinput>ddsk</userinput> (Disk Copy), and the Type to <userinput>DDim</userinput> (binary floppy image). The case is sensitive for these fields."
msgstr ""

#: install-methods.xml:492
#, no-c-format
#. Tag: para
msgid "<emphasis>Important:</emphasis> In the Finder, use <userinput>Get Info</userinput> to display the Finder information about the floppy image, and <quote>X</quote> the <userinput>File Locked</userinput> check box so that MacOS will be unable to remove the boot blocks if the image is accidentally mounted."
msgstr ""

#: install-methods.xml:501
#, no-c-format
#. Tag: para
msgid "Obtain <command>Disk Copy</command>; if you have a MacOS system or CD it will very likely be there already, otherwise try <ulink url=\"&url-powerpc-diskcopy;\"></ulink>."
msgstr ""

#: install-methods.xml:508
#, no-c-format
#. Tag: para
msgid "Run <command>Disk Copy</command>, and select <menuchoice> <guimenu>Utilities</guimenu> <guimenuitem>Make a Floppy</guimenuitem> </menuchoice>, then select the <emphasis>locked</emphasis> image file from the resulting dialog. It will ask you to insert a floppy, then ask if you really want to erase it. When done it should eject the floppy."
msgstr ""

#: install-methods.xml:523
#, no-c-format
#. Tag: title
msgid "Writing Disk Images with <command>suntar</command>"
msgstr ""

#: install-methods.xml:527
#, no-c-format
#. Tag: para
msgid "Obtain <command>suntar</command> from <ulink url=\"&url-powerpc-suntar;\"> </ulink>. Start the <command>suntar</command> program and select <quote>Overwrite Sectors...</quote> from the <userinput>Special</userinput> menu."
msgstr ""

#: install-methods.xml:535
#, no-c-format
#. Tag: para
msgid "Insert the floppy disk as requested, then hit &enterkey; (start at sector 0)."
msgstr ""

#: install-methods.xml:541
#, no-c-format
#. Tag: para
msgid "Select the <filename>root.bin</filename> file in the file-opening dialog."
msgstr ""

#: install-methods.xml:546
#, no-c-format
#. Tag: para
msgid "After the floppy has been created successfully, select <menuchoice> <guimenu>File</guimenu> <guimenuitem>Eject</guimenuitem> </menuchoice>. If there are any errors writing the floppy, simply toss that floppy and try another."
msgstr ""

#: install-methods.xml:554
#, no-c-format
#. Tag: para
msgid "Before using the floppy you created, <emphasis>set the write protect tab</emphasis>! Otherwise if you accidentally mount it in MacOS, MacOS will helpfully ruin it."
msgstr ""

#: install-methods.xml:573
#, no-c-format
#. Tag: title
msgid "Preparing Files for USB Memory Stick Booting"
msgstr ""

#: install-methods.xml:575
#, no-c-format
#. Tag: para
msgid "For preparing the USB stick you will need a system where GNU/Linux is already running and where USB is supported. You should ensure that the usb-storage kernel module is loaded (<userinput>modprobe usb-storage</userinput>) and try to find out which SCSI device the USB stick has been mapped to (in this example <filename>/dev/sda</filename> is used). To write to your stick, you will probably have to turn off its write protection switch."
msgstr ""

#: install-methods.xml:585
#, no-c-format
#. Tag: para
msgid "Note, that the USB stick should be at least 128 MB in size (smaller setups are possible if you follow <xref linkend=\"usb-copy-flexible\"/>)."
msgstr ""

#: install-methods.xml:593
#, no-c-format
#. Tag: title
msgid "Copying the files &mdash; the easy way"
msgstr ""

#: install-methods.xml:594
#, no-c-format
#. Tag: para
msgid "There is an all-in-one file <filename>hd-media/boot.img.gz</filename> which contains all the installer files (including the kernel) as well as <command>SYSLINUX</command> and its configuration file. You only have to extract it directly to your USB stick:"
msgstr ""

#: install-methods.xml:601
#, no-c-format
#. Tag: screen
msgid "# zcat boot.img.gz &gt; /dev/<replaceable>sda</replaceable>"
msgstr ""

#: install-methods.xml:603
#, no-c-format
#. Tag: para
msgid "There is an all-in-one file <filename>hd-media/boot.img.gz</filename> which contains all the installer files (including the kernel) as well as <command>yaboot</command> and its configuration file. Create a partition of type \"Apple_Bootstrap\" on your USB stick using <command>mac-fdisk</command>'s <userinput>C</userinput> command and extract the image directly to that:"
msgstr ""

#: install-methods.xml:612
#, no-c-format
#. Tag: screen
msgid "# zcat boot.img.gz &gt; /dev/<replaceable>sda2</replaceable>"
msgstr ""

#: install-methods.xml:615
#, no-c-format
#. Tag: para
msgid "Using this method will destroy anything already on the device. Make sure that you use the correct device name for your USB stick."
msgstr ""

#: install-methods.xml:621
#, no-c-format
#. Tag: para
msgid "After that, mount the USB memory stick (<userinput>mount <replaceable arch=\"i386\">/dev/sda</replaceable> <replaceable arch=\"powerpc\">/dev/sda2</replaceable> /mnt</userinput>), which will now have <phrase arch=\"i386\">a FAT filesystem</phrase> <phrase arch=\"powerpc\">an HFS filesystem</phrase> on it, and copy a Debian netinst or businesscard ISO image to it. Please note that the file name must end in <filename>.iso</filename>. Unmount the stick (<userinput>umount /mnt</userinput>) and you are done."
msgstr ""

#: install-methods.xml:637
#, no-c-format
#. Tag: title
msgid "Copying the files &mdash; the flexible way"
msgstr ""

#: install-methods.xml:638
#, no-c-format
#. Tag: para
msgid "If you like more flexibility or just want to know what's going on, you should use the following method to put the files on your stick."
msgstr ""

#: install-methods.xml:650 install-methods.xml:746
#, no-c-format
#. Tag: title
msgid "USB stick partitioning on &arch-title;"
msgstr ""

#: install-methods.xml:651
#, no-c-format
#. Tag: para
msgid "We will show how to setup the memory stick to use the first partition, instead of the entire device."
msgstr ""

#: install-methods.xml:656
#, no-c-format
#. Tag: para
msgid ""
      "Since most USB sticks come pre-configured with a single FAT16 partition, you probably won't have to repartition or reformat the stick. If you have to do that anyway, use <command>cfdisk</command> or any other partitioning tool for creating a FAT16 partition and then create the filesystem using: <informalexample><screen>\n"
      "# mkdosfs /dev/<replaceable>sda1</replaceable>\n"
      "</screen></informalexample> Take care that you use the correct device name for your USB stick. The <command>mkdosfs</command> command is contained in the <classname>dosfstools</classname> Debian package."
msgstr ""

#: install-methods.xml:670
#, no-c-format
#. Tag: para
msgid "In order to start the kernel after booting from the USB stick, we will put a boot loader on the stick. Although any boot loader (e.g. <command>LILO</command>) should work, it's convenient to use <command>SYSLINUX</command>, since it uses a FAT16 partition and can be reconfigured by just editing a text file. Any operating system which supports the FAT file system can be used to make changes to the configuration of the boot loader."
msgstr ""

#: install-methods.xml:680
#, no-c-format
#. Tag: para
msgid ""
      "To put <command>SYSLINUX</command> on the FAT16 partition on your USB stick, install the <classname>syslinux</classname> and <classname>mtools</classname> packages on your system, and do: <informalexample><screen>\n"
      "# syslinux /dev/<replaceable>sda1</replaceable>\n"
      "</screen></informalexample> Again, take care that you use the correct device name. The partition must not be mounted when starting <command>SYSLINUX</command>. This procedure writes a boot sector to the partition and creates the file <filename>ldlinux.sys</filename> which contains the boot loader code."
msgstr ""

#: install-methods.xml:693
#, no-c-format
#. Tag: para
msgid "Mount the partition (<userinput>mount /dev/sda1 /mnt</userinput>) and copy the following files from the Debian archives to the stick: <itemizedlist> <listitem><para> <filename>vmlinuz</filename> (kernel binary) </para></listitem> <listitem><para> <filename>initrd.gz</filename> (initial ramdisk image) </para></listitem> <listitem><para> <filename>syslinux.cfg</filename> (SYSLINUX configuration file) </para></listitem> <listitem><para> Optional kernel modules </para></listitem> </itemizedlist> If you want to rename the files, please note that <command>SYSLINUX</command> can only process DOS (8.3) file names."
msgstr ""

#: install-methods.xml:724
#, no-c-format
#. Tag: para
msgid ""
      "The <filename>syslinux.cfg</filename> configuration file should contain the following two lines: <informalexample><screen>\n"
      "default vmlinuz\n"
      "append initrd=initrd.gz ramdisk_size=12000 root=/dev/ram rw\n"
      "</screen></informalexample> Please note that the <userinput>ramdisk_size</userinput> parameter may need to be increased, depending on the image you are booting. <phrase condition=\"sarge\"> If the boot fails, you can try adding <userinput>devfs=mount,dall</userinput> to the <quote>append</quote> line. </phrase>"
msgstr ""

#: install-methods.xml:747
#, no-c-format
#. Tag: para
msgid ""
      "Most USB sticks do not come pre-configured in such a way that Open Firmware can boot from them, so you will need to repartition the stick. On Mac systems, run <userinput>mac-fdisk /dev/sda</userinput>, initialise a new partition map using the <userinput>i</userinput> command, and create a new partition of type Apple_Bootstrap using the <userinput>C</userinput> command. (Note that the first \"partition\" will always be the partition map itself.) Then type <informalexample><screen>\n"
      "$ hformat /dev/<replaceable>sda2</replaceable>\n"
      "</screen></informalexample> Take care that you use the correct device name for your USB stick. The <command>hformat</command> command is contained in the <classname>hfsutils</classname> Debian package."
msgstr ""

#: install-methods.xml:763
#, no-c-format
#. Tag: para
msgid "In order to start the kernel after booting from the USB stick, we will put a boot loader on the stick. The <command>yaboot</command> boot loader can be installed on an HFS filesystem and can be reconfigured by just editing a text file. Any operating system which supports the HFS file system can be used to make changes to the configuration of the boot loader."
msgstr ""

#: install-methods.xml:772
#, no-c-format
#. Tag: para
msgid ""
      "The normal <command>ybin</command> tool that comes with <command>yaboot</command> does not yet understand USB storage devices, so you will have to install <command>yaboot</command> by hand using the <classname>hfsutils</classname> tools. Type <informalexample><screen>\n"
      "$ hmount /dev/sda2\n"
      "$ hcopy -r /usr/lib/yaboot/yaboot :\n"
      "$ hattrib -c UNIX -t tbxi :yaboot\n"
      "$ hattrib -b :\n"
      "$ humount\n"
      "</screen></informalexample> Again, take care that you use the correct device name. The partition must not be otherwise mounted during this procedure. This procedure writes the boot loader to the partition, and uses the HFS utilities to mark it in such a way that Open Firmware will boot it. Having done this, the rest of the USB stick may be prepared using the normal Unix utilities."
msgstr ""

#: install-methods.xml:788
#, no-c-format
#. Tag: para
msgid "Mount the partition (<userinput>mount /dev/sda2 /mnt</userinput>) and copy the following files from the Debian archives to the stick:"
msgstr ""

#: install-methods.xml:794
#, no-c-format
#. Tag: para
msgid "<filename>vmlinux</filename> (kernel binary)"
msgstr ""

#: install-methods.xml:799
#, no-c-format
#. Tag: para
msgid "<filename>initrd.gz</filename> (initial ramdisk image)"
msgstr ""

#: install-methods.xml:804
#, no-c-format
#. Tag: para
msgid "<filename>yaboot.conf</filename> (yaboot configuration file)"
msgstr ""

#: install-methods.xml:809
#, no-c-format
#. Tag: para
msgid "<filename>boot.msg</filename> (optional boot message)"
msgstr ""

#: install-methods.xml:814
#, no-c-format
#. Tag: para
msgid "Optional kernel modules"
msgstr ""

#: install-methods.xml:821
#, no-c-format
#. Tag: para
msgid ""
      "The <filename>yaboot.conf</filename> configuration file should contain the following lines: <informalexample><screen>\n"
      "default=install\n"
      "root=/dev/ram\n"
      "\n"
      "message=/boot.msg\n"
      "\n"
      "image=/vmlinux\n"
      "        label=install\n"
      "        initrd=/initrd.gz\n"
      "        initrd-size=10000<phrase condition=\"sarge\">\n"
      "        append=\"devfs=mount,dall --\"</phrase>\n"
      "        read-only\n"
      "</screen></informalexample> Please note that the <userinput>initrd-size</userinput> parameter may need to be increased, depending on the image you are booting."
msgstr ""

#: install-methods.xml:836
#, no-c-format
#. Tag: title
msgid "Adding an ISO image"
msgstr ""

#: install-methods.xml:837
#, no-c-format
#. Tag: para
msgid "Now you should put any Debian ISO image (businesscard, netinst or even a full one) onto your stick (if it fits). The file name of such an image must end in <filename>.iso</filename>."
msgstr ""

#: install-methods.xml:843
#, no-c-format
#. Tag: para
msgid "If you want to install over the network, without using an ISO image, you will of course skip the previous step. Moreover you will have to use the initial ramdisk from the <filename>netboot</filename> directory instead of the one from <filename>hd-media</filename>, because <filename>hd-media/initrd.gz</filename> does not have network support."
msgstr ""

#: install-methods.xml:852
#, no-c-format
#. Tag: para
msgid "When you are done, unmount the USB memory stick (<userinput>umount /mnt</userinput>) and activate its write protection switch."
msgstr ""

#: install-methods.xml:862
#, no-c-format
#. Tag: title
msgid "Booting the USB stick"
msgstr ""

#: install-methods.xml:863
#, no-c-format
#. Tag: para
msgid "If your system refuses to boot from the memory stick, the stick may contain an invalid master boot record (MBR). To fix this, use the <command>install-mbr</command> command from the package <classname>mbr</classname>:"
msgstr ""

#: install-methods.xml:870
#, no-c-format
#. Tag: screen
msgid "# install-mbr /dev/<replaceable>sda</replaceable>"
msgstr ""

#: install-methods.xml:882
#, no-c-format
#. Tag: title
msgid "Preparing Files for Hard Disk Booting"
msgstr ""

#: install-methods.xml:883
#, no-c-format
#. Tag: para
msgid "The installer may be booted using boot files placed on an existing hard drive partition, either launched from another operating system or by invoking a boot loader directly from the BIOS."
msgstr ""

#: install-methods.xml:889
#, no-c-format
#. Tag: para
msgid "A full, <quote>pure network</quote> installation can be achieved using this technique. This avoids all hassles of removable media, like finding and burning CD images or struggling with too numerous and unreliable floppy disks."
msgstr ""

#: install-methods.xml:896
#, no-c-format
#. Tag: para
msgid "The installer cannot boot from files on an NTFS file system."
msgstr ""

#: install-methods.xml:900
#, no-c-format
#. Tag: para
msgid "The installer cannot boot from files on an HFS+ file system. MacOS System 8.1 and above may use HFS+ file systems; NewWorld PowerMacs all use HFS+. To determine whether your existing file system is HFS+, select <userinput>Get Info</userinput> for the volume in question. HFS file systems appear as <userinput>Mac OS Standard</userinput>, while HFS+ file systems say <userinput>Mac OS Extended</userinput>. You must have an HFS partition in order to exchange files between MacOS and Linux, in particular the installation files you download."
msgstr ""

#: install-methods.xml:911
#, no-c-format
#. Tag: para
msgid "Different programs are used for hard disk installation system booting, depending on whether the system is a <quote>NewWorld</quote> or an <quote>OldWorld</quote> model."
msgstr ""

#: install-methods.xml:920
#, no-c-format
#. Tag: title
msgid "Hard disk installer booting using <command>LILO</command> or <command>GRUB</command>"
msgstr ""

#: install-methods.xml:922
#, no-c-format
#. Tag: para
msgid "This section explains how to add to or even replace an existing linux installation using either <command>LILO</command> or <command>GRUB</command>."
msgstr ""

#: install-methods.xml:928
#, no-c-format
#. Tag: para
msgid "At boot time, both bootloaders support loading in memory not only the kernel, but also a disk image. This RAM disk can be used as the root file-system by the kernel."
msgstr ""

#: install-methods.xml:934
#, no-c-format
#. Tag: para
msgid "Copy the following files from the Debian archives to a convenient location on your hard drive, for instance to <filename>/boot/newinstall/</filename>."
msgstr ""

#: install-methods.xml:941
#, no-c-format
#. Tag: para
msgid "<filename>vmlinuz</filename> (kernel binary)"
msgstr ""

#: install-methods.xml:946
#, no-c-format
#. Tag: para
msgid "<filename>initrd.gz</filename> (ramdisk image)"
msgstr ""

#: install-methods.xml:953
#, no-c-format
#. Tag: para
msgid "Finally, to configure the bootloader proceed to <xref linkend=\"boot-initrd\"/>."
msgstr ""

#: install-methods.xml:963
#, no-c-format
#. Tag: title
msgid "Hard Disk Installer Booting for OldWorld Macs"
msgstr ""

#: install-methods.xml:964
#, no-c-format
#. Tag: para
msgid "The <filename>boot-floppy-hfs</filename> floppy uses <application>miBoot</application> to launch Linux installation, but <application>miBoot</application> cannot easily be used for hard disk booting. <application>BootX</application>, launched from MacOS, supports booting from files placed on the hard disk. <application>BootX</application> can also be used to dual-boot MacOS and Linux after your Debian installation is complete. For the Performa 6360, it appears that <command>quik</command> cannot make the hard disk bootable. So <application>BootX</application> is required on that model."
msgstr ""

#: install-methods.xml:977
#, no-c-format
#. Tag: para
msgid "Download and unstuff the <application>BootX</application> distribution, available from <ulink url=\"&url-powerpc-bootx;\"></ulink>, or in the <filename>dists/woody/main/disks-powerpc/current/powermac</filename> directory on Debian http/ftp mirrors and official Debian CDs. Use <application>Stuffit Expander</application> to extract it from its archive. Within the package, there is an empty folder called <filename>Linux Kernels</filename>. Download <filename>linux.bin</filename> and <filename>ramdisk.image.gz</filename> from the <filename>disks-powerpc/current/powermac</filename> folder, and place them in the <filename>Linux Kernels</filename> folder. Then place the <filename>Linux Kernels</filename> folder in the active System Folder."
msgstr ""

#: install-methods.xml:997
#, no-c-format
#. Tag: title
msgid "Hard Disk Installer Booting for NewWorld Macs"
msgstr ""

#: install-methods.xml:998
#, no-c-format
#. Tag: para
msgid "NewWorld PowerMacs support booting from a network or an ISO9660 CD-ROM, as well as loading ELF binaries directly from the hard disk. These machines will boot Linux directly via <command>yaboot</command>, which supports loading a kernel and RAMdisk directly from an ext2 partition, as well as dual-booting with MacOS. Hard disk booting of the installer is particularly appropriate for newer machines without floppy drives. <command>BootX</command> is not supported and must not be used on NewWorld PowerMacs."
msgstr ""

#: install-methods.xml:1009
#, no-c-format
#. Tag: para
msgid "<emphasis>Copy</emphasis> (not move) the following four files which you downloaded earlier from the Debian archives, onto the root level of your hard drive (this can be accomplished by <keycap>option</keycap>-dragging each file to the hard drive icon)."
msgstr ""

#: install-methods.xml:1019
#, no-c-format
#. Tag: filename
msgid "vmlinux"
msgstr ""

#: install-methods.xml:1024
#, no-c-format
#. Tag: filename
msgid "initrd.gz"
msgstr ""

#: install-methods.xml:1029
#, no-c-format
#. Tag: filename
msgid "yaboot"
msgstr ""

#: install-methods.xml:1034
#, no-c-format
#. Tag: filename
msgid "yaboot.conf"
msgstr ""

#: install-methods.xml:1039
#, no-c-format
#. Tag: para
msgid "Make a note of the partition number of the MacOS partition where you place these files. If you have the MacOS <command>pdisk</command> program, you can use the L command to check for the partition number. You will need this partition number for the command you type at the Open Firmware prompt when you boot the installer."
msgstr ""

#: install-methods.xml:1047
#, no-c-format
#. Tag: para
msgid "To boot the installer, proceed to <xref linkend=\"boot-newworld\"/>."
msgstr ""

#: install-methods.xml:1060
#, no-c-format
#. Tag: title
msgid "Preparing Files for TFTP Net Booting"
msgstr ""

#: install-methods.xml:1061
#, no-c-format
#. Tag: para
msgid "If your machine is connected to a local area network, you may be able to boot it over the network from another machine, using TFTP. If you intend to boot the installation system from another machine, the boot files will need to be placed in specific locations on that machine, and the machine configured to support booting of your specific machine."
msgstr ""

#: install-methods.xml:1069
#, no-c-format
#. Tag: para
msgid "You need to setup a TFTP server, and for many machines, a BOOTP server <phrase condition=\"supports-rarp\">, or RARP server</phrase> <phrase condition=\"supports-dhcp\">, or DHCP server</phrase>."
msgstr ""

#: install-methods.xml:1075
#, no-c-format
#. Tag: para
msgid "<phrase condition=\"supports-rarp\">The Reverse Address Resolution Protocol (RARP) is one way to tell your client what IP address to use for itself. Another way is to use the BOOTP protocol. </phrase> <phrase condition=\"supports-bootp\">BOOTP is an IP protocol that informs a computer of its IP address and where on the network to obtain a boot image. </phrase> <phrase arch=\"m68k\"> Yet another alternative exists on VMEbus systems: the IP address can be manually configured in boot ROM. </phrase> <phrase condition=\"supports-dhcp\">The DHCP (Dynamic Host Configuration Protocol) is a more flexible, backwards-compatible extension of BOOTP. Some systems can only be configured via DHCP. </phrase>"
msgstr ""

#: install-methods.xml:1092
#, no-c-format
#. Tag: para
msgid "For PowerPC, if you have a NewWorld Power Macintosh machine, it is a good idea to use DHCP instead of BOOTP. Some of the latest machines are unable to boot using BOOTP."
msgstr ""

#: install-methods.xml:1098
#, no-c-format
#. Tag: para
msgid "Unlike the Open Firmware found on Sparc and PowerPC machines, the SRM console will <emphasis>not</emphasis> use RARP to obtain its IP address, and therefore you must use BOOTP for net booting your Alpha<footnote> <para> Alpha systems can also be net-booted using the DECNet MOP (Maintenance Operations Protocol), but this is not covered here. Presumably, your local OpenVMS operator will be happy to assist you should you have some burning need to use MOP to boot Linux on your Alpha. </para> </footnote>. You can also enter the IP configuration for network interfaces directly in the SRM console."
msgstr ""

#: install-methods.xml:1115
#, no-c-format
#. Tag: para
msgid "Some older HPPA machines (e.g. 715/75) use RBOOTD rather than BOOTP. There is an <classname>rbootd</classname> package available in Debian."
msgstr ""

#: install-methods.xml:1120
#, no-c-format
#. Tag: para
msgid "The Trivial File Transfer Protocol (TFTP) is used to serve the boot image to the client. Theoretically, any server, on any platform, which implements these protocols, may be used. In the examples in this section, we shall provide commands for SunOS 4.x, SunOS 5.x (a.k.a. Solaris), and GNU/Linux."
msgstr ""

#: install-methods.xml:1128
#, no-c-format
#. Tag: para
msgid "To use the Pre-boot Execution Environment (PXE) method of TFTP booting, you will need a TFTP server with <userinput>tsize</userinput> support. On a &debian; server, the <classname>atftpd</classname> and <classname>tftpd-hpa</classname> packages qualify; we recommend <classname>tftpd-hpa</classname>."
msgstr ""

#: install-methods.xml:1146
#, no-c-format
#. Tag: title
msgid "Setting up RARP server"
msgstr ""

#: install-methods.xml:1147
#, no-c-format
#. Tag: para
msgid "To setup RARP, you need to know the Ethernet address (a.k.a. the MAC address) of the client computers to be installed. If you don't know this information, you can <phrase arch=\"sparc\"> pick it off the initial OpenPROM boot messages, use the OpenBoot <userinput>.enet-addr</userinput> command, or </phrase> boot into <quote>Rescue</quote> mode (e.g., from the rescue floppy) and use the command <userinput>/sbin/ifconfig eth0</userinput>."
msgstr ""

#: install-methods.xml:1159
#, no-c-format
#. Tag: para
msgid ""
      "On a RARP server system using a Linux 2.2.x kernel, you need to populate the kernel's RARP table. To do this, run the following commands: <informalexample><screen>\n"
      "# <userinput>/sbin/rarp -s\n"
      "<replaceable>client-hostname</replaceable>\n"
      "<replaceable>client-enet-addr</replaceable></userinput>\n"
      "\n"
      "# <userinput>/usr/sbin/arp -s\n"
      "<replaceable>client-ip</replaceable>\n"
      "<replaceable>client-enet-addr</replaceable></userinput>\n"
      "</screen></informalexample> If you get <informalexample><screen>\n"
      "SIOCSRARP: Invalid argument\n"
      "</screen></informalexample> you probably need to load the RARP kernel module or else recompile the kernel to support RARP. Try <userinput>modprobe rarp</userinput> and then try the <command>rarp</command> command again."
msgstr ""

#: install-methods.xml:1175
#, no-c-format
#. Tag: para
msgid "On a RARP server system using a Linux 2.4.x kernel, there is no RARP module, and you should instead use the <command>rarpd</command> program. The procedure is similar to that used under SunOS in the following paragraph."
msgstr ""

#: install-methods.xml:1183
#, no-c-format
#. Tag: para
msgid "Under SunOS, you need to ensure that the Ethernet hardware address for the client is listed in the <quote>ethers</quote> database (either in the <filename>/etc/ethers</filename> file, or via NIS/NIS+) and in the <quote>hosts</quote> database. Then you need to start the RARP daemon. In SunOS 4, issue the command (as root): <userinput>/usr/etc/rarpd -a</userinput>; in SunOS 5, use <userinput>/usr/sbin/rarpd -a</userinput>."
msgstr ""

#: install-methods.xml:1202
#, no-c-format
#. Tag: title
msgid "Setting up BOOTP server"
msgstr ""

#: install-methods.xml:1203
#, no-c-format
#. Tag: para
msgid "There are two BOOTP servers available for GNU/Linux, the CMU <command>bootpd</command> and the other is actually a DHCP server, ISC <command>dhcpd</command>, which are contained in the <classname>bootp</classname> and <classname>dhcp</classname> packages in &debian;."
msgstr ""

#: install-methods.xml:1211
#, no-c-format
#. Tag: para
msgid ""
      "To use CMU <command>bootpd</command>, you must first uncomment (or add) the relevant line in <filename>/etc/inetd.conf</filename>. On &debian;, you can run <userinput>update-inetd --enable bootps</userinput>, then <userinput>/etc/init.d/inetd reload</userinput> to do so. Elsewhere, the line in question should look like: <informalexample><screen>\n"
      "bootps  dgram  udp  wait  root  /usr/sbin/bootpd  bootpd -i -t 120\n"
      "</screen></informalexample> Now, you must create an <filename>/etc/bootptab</filename> file. This has the same sort of familiar and cryptic format as the good old BSD <filename>printcap</filename>, <filename>termcap</filename>, and <filename>disktab</filename> files. See the <filename>bootptab</filename> manual page for more information. For CMU <command>bootpd</command>, you will need to know the hardware (MAC) address of the client. Here is an example <filename>/etc/bootptab</filename>: <informalexample><screen>\n"
      "client:\\\n"
      "  hd=/tftpboot:\\\n"
      "  bf=tftpboot.img:\\\n"
      "  ip=192.168.1.90:\\\n"
      "  sm=255.255.255.0:\\\n"
      "  sa=192.168.1.1:\\\n"
      "  ha=0123456789AB:\n"
      "</screen></informalexample> You will need to change at least the <quote>ha</quote> option, which specifies the hardware address of the client. The <quote>bf</quote> option specifies the file a client should retrieve via TFTP; see <xref linkend=\"tftp-images\"/> for more details. <phrase arch=\"mips\"> On SGI Indys you can just enter the command monitor and type <userinput>printenv</userinput>. The value of the <userinput>eaddr</userinput> variable is the machine's MAC address. </phrase>"
msgstr ""

#: install-methods.xml:1244
#, no-c-format
#. Tag: para
msgid "By contrast, setting up BOOTP with ISC <command>dhcpd</command> is really easy, because it treats BOOTP clients as a moderately special case of DHCP clients. Some architectures require a complex configuration for booting clients via BOOTP. If yours is one of those, read the section <xref linkend=\"dhcpd\"/>. Otherwise, you will probably be able to get away with simply adding the <userinput>allow bootp</userinput> directive to the configuration block for the subnet containing the client, and restart <command>dhcpd</command> with <userinput>/etc/init.d/dhcpd restart</userinput>."
msgstr ""

#: install-methods.xml:1265
#, no-c-format
#. Tag: title
msgid "Setting up a DHCP server"
msgstr ""

#: install-methods.xml:1266
#, no-c-format
#. Tag: para
msgid ""
      "One free software DHCP server is ISC <command>dhcpd</command>. In &debian;, this is available in the <classname>dhcp</classname> package. Here is a sample configuration file for it (usually <filename>/etc/dhcpd.conf</filename>): <informalexample><screen>\n"
      "option domain-name \"example.com\";\n"
      "option domain-name-servers ns1.example.com;\n"
      "option subnet-mask 255.255.255.0;\n"
      "default-lease-time 600;\n"
      "max-lease-time 7200;\n"
      "server-name \"servername\";\n"
      "\n"
      "subnet 192.168.1.0 netmask 255.255.255.0 {\n"
      "  range 192.168.1.200 192.168.1.253;\n"
      "  option routers 192.168.1.1;\n"
      "}\n"
      "\n"
      "host clientname {\n"
      "  filename \"/tftpboot/tftpboot.img\";\n"
      "  server-name \"servername\";\n"
      "  next-server servername;\n"
      "  hardware ethernet 01:23:45:67:89:AB;\n"
      "  fixed-address 192.168.1.90;\n"
      "}\n"
      "</screen></informalexample> Note: the new (and preferred) <classname>dhcp3</classname> package uses <filename>/etc/dhcp3/dhcpd.conf</filename>."
msgstr ""

#: install-methods.xml:1278
#, no-c-format
#. Tag: para
msgid "In this example, there is one server <replaceable>servername</replaceable> which performs all of the work of DHCP server, TFTP server, and network gateway. You will almost certainly need to change the domain-name options, as well as the server name and client hardware address. The <replaceable>filename</replaceable> option should be the name of the file which will be retrieved via TFTP."
msgstr ""

#: install-methods.xml:1288
#, no-c-format
#. Tag: para
msgid "After you have edited the <command>dhcpd</command> configuration file, restart it with <userinput>/etc/init.d/dhcpd restart</userinput>."
msgstr ""

#: install-methods.xml:1296
#, no-c-format
#. Tag: title
msgid "Enabling PXE Booting in the DHCP configuration"
msgstr ""

#: install-methods.xml:1297
#, no-c-format
#. Tag: para
msgid ""
      "Here is another example for a <filename>dhcp.conf</filename> using the Pre-boot Execution Environment (PXE) method of TFTP. <informalexample><screen>\n"
      "option domain-name \"example.com\";\n"
      "\n"
      "default-lease-time 600;\n"
      "max-lease-time 7200;\n"
      "\n"
      "allow booting;\n"
      "allow bootp;\n"
      "\n"
      "# The next paragraph needs to be modified to fit your case\n"
      "subnet 192.168.1.0 netmask 255.255.255.0 {\n"
      "  range 192.168.1.200 192.168.1.253;\n"
      "  option broadcast-address 192.168.1.255;\n"
      "# the gateway address which can be different\n"
      "# (access to the internet for instance)\n"
      "  option routers 192.168.1.1;\n"
      "# indicate the dns you want to use\n"
      "  option domain-name-servers 192.168.1.3;\n"
      "}\n"
      "\n"
      "group {\n"
      " next-server 192.168.1.3;\n"
      " host tftpclient {\n"
      "# tftp client hardware address\n"
      "  hardware ethernet  00:10:DC:27:6C:15;\n"
      "  filename \"/tftpboot/pxelinux.0\";\n"
      " }\n"
      "}\n"
      "</screen></informalexample> Note that for PXE booting, the client filename <filename>pxelinux.0</filename> is a boot loader, not a kernel image (see <xref linkend=\"tftp-images\"/> below)."
msgstr ""

#: install-methods.xml:1313
#, no-c-format
#. Tag: title
msgid "Enabling the TFTP Server"
msgstr ""

#: install-methods.xml:1314
#, no-c-format
#. Tag: para
msgid ""
      "To get the TFTP server ready to go, you should first make sure that <command>tftpd</command> is enabled. This is usually enabled by having something like the following line in <filename>/etc/inetd.conf</filename>: <informalexample><screen>\n"
      "tftp dgram udp wait nobody /usr/sbin/tcpd in.tftpd /tftpboot\n"
      "</screen></informalexample> Debian packages will in general set this up correctly by default when they are installed."
msgstr ""

#: install-methods.xml:1325
#, no-c-format
#. Tag: para
msgid "Look in that file and remember the directory which is used as the argument of <command>in.tftpd</command>; you'll need that below. The <userinput>-l</userinput> argument enables some versions of <command>in.tftpd</command> to log all requests to the system logs; this is useful for diagnosing boot errors. If you've had to change <filename>/etc/inetd.conf</filename>, you'll have to notify the running <command>inetd</command> process that the file has changed. On a Debian machine, run <userinput>/etc/init.d/inetd reload</userinput>; on other machines, find out the process ID for <command>inetd</command>, and run <userinput>kill -HUP <replaceable>inetd-pid</replaceable></userinput>."
msgstr ""

#: install-methods.xml:1339
#, no-c-format
#. Tag: para
msgid ""
      "If you intend to install Debian on an SGI machine and your TFTP server is a GNU/Linux box running Linux 2.4, you'll need to set the following on your server: <informalexample><screen>\n"
      "# echo 1 &gt; /proc/sys/net/ipv4/ip_no_pmtu_disc\n"
      "</screen></informalexample> to turn off Path MTU discovery, otherwise the Indy's PROM can't download the kernel. Furthermore, make sure TFTP packets are sent from a source port no greater than 32767, or the download will stall after the first packet. Again, it's Linux 2.4.X tripping this bug in the PROM, and you can avoid it by setting <informalexample><screen>\n"
      "# echo \"2048 32767\" &gt; /proc/sys/net/ipv4/ip_local_port_range\n"
      "</screen></informalexample> to adjust the range of source ports the Linux TFTP server uses."
msgstr ""

#: install-methods.xml:1361
#, no-c-format
#. Tag: title
msgid "Move TFTP Images Into Place"
msgstr ""

#: install-methods.xml:1362
#, no-c-format
#. Tag: para
msgid "Next, place the TFTP boot image you need, as found in <xref linkend=\"where-files\"/>, in the <command>tftpd</command> boot image directory. Generally, this directory will be <filename>/tftpboot</filename>. You'll have to make a link from that file to the file which <command>tftpd</command> will use for booting a particular client. Unfortunately, the file name is determined by the TFTP client, and there are no strong standards."
msgstr ""

#: install-methods.xml:1372
#, no-c-format
#. Tag: para
msgid "On NewWorld Power Macintosh machines, you will need to set up the <command>yaboot</command> boot loader as the TFTP boot image. <command>Yaboot</command> will then retrieve the kernel and RAMdisk images via TFTP itself. For net booting, use the <filename>yaboot-netboot.conf</filename>. Just rename this to <filename>yaboot.conf</filename> in the TFTP directory."
msgstr ""

#: install-methods.xml:1381
#, no-c-format
#. Tag: para
msgid "For PXE booting, everything you should need is set up in the <filename>netboot/netboot.tar.gz</filename> tarball. Simply extract this tarball into the <command>tftpd</command> boot image directory. Make sure your dhcp server is configured to pass <filename>/pxelinux.0</filename> to <command>tftpd</command> as the filename to boot."
msgstr ""

#: install-methods.xml:1389
#, no-c-format
#. Tag: para
msgid "For PXE booting, everything you should need is set up in the <filename>netboot/netboot.tar.gz</filename> tarball. Simply extract this tarball into the <command>tftpd</command> boot image directory. Make sure your dhcp server is configured to pass <filename>/debian-installer/ia64/elilo.efi</filename> to <command>tftpd</command> as the filename to boot."
msgstr ""

#: install-methods.xml:1401
#, no-c-format
#. Tag: title
msgid "DECstation TFTP Images"
msgstr ""

#: install-methods.xml:1402
#, no-c-format
#. Tag: para
msgid "For DECstations, there are tftpimage files for each subarchitecture, which contain both kernel and installer in one file. The naming convention is <replaceable>subarchitecture</replaceable>/netboot-boot.img. Copy the tftpimage file you would like to use to <userinput>/tftpboot/tftpboot.img</userinput> if you work with the example BOOTP/DHCP setups described above."
msgstr ""

#: install-methods.xml:1411
#, no-c-format
#. Tag: para
msgid "The DECstation firmware boots by TFTP with the command <userinput>boot <replaceable>#</replaceable>/tftp</userinput>, where <replaceable>#</replaceable> is the number of the TurboChannel device from which to boot. On most DECstations this is <quote>3</quote>. If the BOOTP/DHCP server does not supply the filename or you need to pass additional parameters, they can optionally be appended with the following syntax:"
msgstr ""

#: install-methods.xml:1423
#, no-c-format
#. Tag: userinput
msgid "boot #/tftp/filename param1=value1 param2=value2 ..."
msgstr ""

#: install-methods.xml:1425
#, no-c-format
#. Tag: para
msgid "Several DECstation firmware revisions show a problem with regard to net booting: the transfer starts, but after some time it stops with an <computeroutput>a.out err</computeroutput>. This can have several reasons: <orderedlist> <listitem><para> The firmware does not respond to ARP requests during a TFTP transfer. This leads to an ARP timeout and the transfer stops. The solution is to add the MAC address of the Ethernet card in the DECstation statically to the ARP table of the TFTP server. This is done by running <userinput>arp -s <replaceable>IP-address</replaceable> <replaceable>MAC-address</replaceable></userinput> as root on the machine acting as TFTP server. The MAC-address of the DECstation can be read out by entering <command>cnfg</command> at the DECstation firmware prompt. </para></listitem> <listitem><para> The firmware has a size limit on the files that can be booted by TFTP. </para></listitem> </orderedlist> There are also firmware revisions that cannot boot via TFTP at all. An overview about the different firmware revisions can be found at the NetBSD web pages: <ulink url=\"http://www.netbsd.org/Ports/pmax/board-list.html#proms\"></ulink>."
msgstr ""

#: install-methods.xml:1463
#, no-c-format
#. Tag: title
msgid "Alpha TFTP Booting"
msgstr ""

#: install-methods.xml:1464
#, no-c-format
#. Tag: para
msgid "On Alpha, you must specify the filename (as a relative path to the boot image directory) using the <userinput>-file</userinput> argument to the SRM <userinput>boot</userinput> command, or by setting the <userinput>BOOT_FILE</userinput> environment variable. Alternatively, the filename can be given via BOOTP (in ISC <command>dhcpd</command>, use the <userinput>filename</userinput> directive). Unlike Open Firmware, there is <emphasis>no default filename</emphasis> on SRM, so you <emphasis>must</emphasis> specify a filename by either one of these methods."
msgstr ""

#: install-methods.xml:1479
#, no-c-format
#. Tag: title
msgid "SPARC TFTP Booting"
msgstr ""

#: install-methods.xml:1480
#, no-c-format
#. Tag: para
msgid ""
      "SPARC architectures for instance use the subarchitecture names, such as <quote>SUN4M</quote> or <quote>SUN4C</quote>; in some cases, the architecture is left blank, so the file the client looks for is just <filename>client-ip-in-hex</filename>. Thus, if your system subarchitecture is a SUN4C, and its IP is 192.168.1.3, the filename would be <filename>C0A80103.SUN4C</filename>. An easy way to determine this is to enter the following command in a shell (assuming the machine's intended IP is 10.0.0.4). <informalexample><screen>\n"
      "$ printf '%.2x%.2x%.2x%.2x\\n' 10 0 0 4\n"
      "</screen></informalexample> This will spit out the IP in hexadecimal; to get to the correct filename, you will need to change all letters to uppercase and if necessary append the subarchitecture name."
msgstr ""

#: install-methods.xml:1497
#, no-c-format
#. Tag: para
msgid "You can also force some sparc systems to look for a specific file name by adding it to the end of the OpenPROM boot command, such as <userinput>boot net my-sparc.image</userinput>. This must still reside in the directory that the TFTP server looks in."
msgstr ""

#: install-methods.xml:1508
#, no-c-format
#. Tag: title
msgid "BVM/Motorola TFTP Booting"
msgstr ""

#: install-methods.xml:1509
#, no-c-format
#. Tag: para
msgid "For BVM and Motorola VMEbus systems copy the files &bvme6000-tftp-files; to <filename>/tftpboot/</filename>."
msgstr ""

#: install-methods.xml:1514
#, no-c-format
#. Tag: para
msgid "Next, configure your boot ROMs or BOOTP server to initially load the <filename>tftplilo.bvme</filename> or <filename>tftplilo.mvme</filename> files from the TFTP server. Refer to the <filename>tftplilo.txt</filename> file for your subarchitecture for additional system-specific configuration information."
msgstr ""

#: install-methods.xml:1526
#, no-c-format
#. Tag: title
msgid "SGI Indys TFTP Booting"
msgstr ""

#: install-methods.xml:1527
#, no-c-format
#. Tag: para
msgid "On SGI Indys you can rely on the <command>bootpd</command> to supply the name of the TFTP file. It is given either as the <userinput>bf=</userinput> in <filename>/etc/bootptab</filename> or as the <userinput>filename=</userinput> option in <filename>/etc/dhcpd.conf</filename>."
msgstr ""

#: install-methods.xml:1539
#, no-c-format
#. Tag: title
msgid "Broadcom BCM91250A TFTP Booting"
msgstr ""

#: install-methods.xml:1540
#, no-c-format
#. Tag: para
msgid "You don't have to configure DHCP in a special way because you'll pass the full path of the file to the loaded to CFE."
msgstr ""

#: install-methods.xml:1645
#, no-c-format
#. Tag: title
msgid "Automatic Installation"
msgstr ""

#: install-methods.xml:1646
#, no-c-format
#. Tag: para
msgid "For installing on multiple computers it's possible to do fully automatic installations. Debian packages intended for this include <classname>fai</classname> (which uses an install server), <classname>replicator</classname>, <classname>systemimager</classname>, <classname>autoinstall</classname>, and the Debian Installer itself."
msgstr ""

#: install-methods.xml:1659
#, no-c-format
#. Tag: title
msgid "Automatic Installation Using the Debian Installer"
msgstr ""

#: install-methods.xml:1660
#, no-c-format
#. Tag: para
msgid "The Debian Installer supports automating installs via preconfiguration files. A preconfiguration file can be loaded from the network or from removable media, and used to fill in answers to question asked during the installation process."
msgstr ""

#: install-methods.xml:1667
#, no-c-format
#. Tag: para
msgid "Although most dialogs used by &d-i; can be preseeded using this method, there are some notable exceptions. You can (re)partition an entire disk or use available free space on a disk; it is not possible to use existing partitions. You currently cannot use preseeding to set up RAID and LVM. <phrase condition=\"sarge\">Also, with the exception of network driver modules, it is not possible to preconfigure kernel module parameters.</phrase>"
msgstr ""

#: install-methods.xml:1676
#, no-c-format
#. Tag: para
msgid "The preconfiguration file is in the format used by the debconf-set-selections command. A well documented and working example that you can edit is in <xref linkend=\"example-preseed\"/>."
msgstr ""

#: install-methods.xml:1682
#, no-c-format
#. Tag: para
msgid ""
      "Alternatively, one way to get a complete file listing all the values that can be preseeded is to do a manual install, and then use <filename>debconf-get-selections</filename>, from the <classname>debconf-utils</classname> package, to dump both the debconf database and the cdebconf database in /var/log/debian-installer/cdebconf to a single file: <informalexample><screen>\n"
      "$ debconf-get-selections --installer &gt; <replaceable>file</replaceable>\n"
      "$ debconf-get-selections &gt;&gt; <replaceable>file</replaceable>\n"
      "</screen></informalexample> However, a file generated in this manner will have some items that should not be preseeded, and the file in <xref linkend=\"example-preseed\"/> is a better starting place for most users."
msgstr ""

#: install-methods.xml:1697
#, no-c-format
#. Tag: para
msgid "Once you have a preconfiguration file, you can edit it if necessary, and place it on a web server, or copy it onto the installer's boot media. Wherever you place the file, you need to pass a parameter to the installer at boot time to tell it to use the file."
msgstr ""

#: install-methods.xml:1704
#, no-c-format
#. Tag: para
msgid "To make the installer use a preconfiguration file downloaded from the network, add preseed/url=http://url/to/preseed.cfg to the kernel boot parameters. Of course the preconfiguration will not take effect until the installer manages to set up the network to download the file, so this is most useful if the installer can set up the network via DHCP without asking any questions. You may want to set the installation priority to critical to avoid any questions while the network is being configured. See <xref linkend=\"installer-args\"/>."
msgstr ""

#: install-methods.xml:1715
#, no-c-format
#. Tag: para
msgid "To place a preconfiguration file on a CD, you would need to remaster the ISO image to include your preconfiguration file. See the manual page for mkisofs for details. Alternatively, put the preseed file on a floppy, and use preseed/file=/floppy/preseed.cfg"
msgstr ""

#: install-methods.xml:1722
#, no-c-format
#. Tag: para
msgid "If you'll be booting from a USB memory stick, then you can simply copy your preconfiguration file onto the memory stick's filesystem, and edit the syslinux.cfg file to add preseed/file=/hd-media/preseed.cfg to the kernel boot parameters."
msgstr ""

#: install-methods.xml:1732
#, no-c-format
#. Tag: title
msgid "Using Preseeding to Change Default Values"
msgstr ""

#: install-methods.xml:1733
#, no-c-format
#. Tag: para
msgid "It is also possible to use preseeding to change the default answer for a question, but still have the question asked. To do this the <firstterm>seen</firstterm> flag must be reset to <quote>false</quote> after setting the value for a template."
msgstr ""

#: install-methods.xml:1740
#, no-c-format
#. Tag: screen
msgid ""
      "d-i foo/bar string value\n"
      "d-i foo/bar seen false"
msgstr ""

