# SOME DESCRIPTIVE TITLE.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"Report-Msgid-Bugs-To: debian-boot@lists.debian.org\n"
"POT-Creation-Date: 2007-01-07 13:24+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: application/x-xml2pot; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. Tag: title
#: install-methods.xml:5
#, no-c-format
msgid "Obtaining System Installation Media"
msgstr ""

#. Tag: title
#: install-methods.xml:12
#, no-c-format
msgid "Official &debian; CD-ROM Sets"
msgstr ""

#. Tag: para
#: install-methods.xml:13
#, no-c-format
msgid "By far the easiest way to install &debian; is from an Official Debian CD-ROM Set. You can buy a set from a vendor (see the <ulink url=\"&url-debian-cd-vendors;\">CD vendors page</ulink>). You may also download the CD-ROM images from a Debian mirror and make your own set, if you have a fast network connection and a CD burner (see the <ulink url=\"&url-debian-cd;\">Debian CD page</ulink> for detailed instructions). If you have a Debian CD set and CDs are bootable on your machine, you can skip right to <xref linkend=\"boot-installer\"/>; much effort has been expended to ensure the files most people need are there on the CD. Although a full set of binary packages requires several CDs, it is unlikely you will need packages on the third CD and above. You may also consider using the DVD version, which saves a lot of space on your shelf and you avoid the CD shuffling marathon."
msgstr ""

#. Tag: para
#: install-methods.xml:30
#, no-c-format
msgid "If your machine doesn't support CD booting, but you do have a CD set, you can use an alternative strategy such as <phrase condition=\"supports-floppy-boot\">floppy disk,</phrase> <phrase arch=\"s390\">tape, emulated tape,</phrase> <phrase condition=\"bootable-disk\">hard disk,</phrase> <phrase condition=\"bootable-usb\">usb stick,</phrase> <phrase condition=\"supports-tftp\">net boot,</phrase> or manually loading the kernel from the CD to initially boot the system installer. The files you need for booting by another means are also on the CD; the Debian network archive and CD folder organization are identical. So when archive file paths are given below for particular files you need for booting, look for those files in the same directories and subdirectories on your CD."
msgstr ""

#. Tag: para
#: install-methods.xml:52
#, no-c-format
msgid "Once the installer is booted, it will be able to obtain all the other files it needs from the CD."
msgstr ""

#. Tag: para
#: install-methods.xml:57
#, no-c-format
msgid "If you don't have a CD set, then you will need to download the installer system files and place them on the <phrase arch=\"s390\">installation tape</phrase> <phrase condition=\"supports-floppy-boot\">floppy disk or</phrase> <phrase condition=\"bootable-disk\">hard disk or</phrase> <phrase condition=\"bootable-usb\">usb stick or</phrase> <phrase condition=\"supports-tftp\">a connected computer</phrase> so they can be used to boot the installer."
msgstr ""

#. Tag: title
#: install-methods.xml:83
#, no-c-format
msgid "Downloading Files from Debian Mirrors"
msgstr ""

#. Tag: para
#: install-methods.xml:85
#, no-c-format
msgid "To find the nearest (and thus probably the fastest) mirror, see the <ulink url=\"&url-debian-mirrors;\">list of Debian mirrors</ulink>."
msgstr ""

#. Tag: para
#: install-methods.xml:90
#, no-c-format
msgid "When downloading files from a Debian mirror, be sure to download the files in <emphasis>binary</emphasis> mode, not text or automatic mode."
msgstr ""

#. Tag: title
#: install-methods.xml:99
#, no-c-format
msgid "Where to Find Installation Images"
msgstr ""

#. Tag: para
#: install-methods.xml:101
#, no-c-format
msgid "The installation images are located on each Debian mirror in the directory <ulink url=\"&url-debian-installer;/images\">debian/dists/&releasename;/main/installer-&architecture;/current/images/</ulink> &mdash; the <ulink url=\"&url-debian-installer;/images/MANIFEST\">MANIFEST</ulink> lists each image and its purpose."
msgstr ""

#. Tag: title
#: install-methods.xml:113
#, no-c-format
msgid "Alpha Installation Files"
msgstr ""

#. Tag: para
#: install-methods.xml:114
#, no-c-format
msgid "If you choose to boot from ARC console firmware using <command>MILO</command>, you will also need to prepare a disk containing <command>MILO</command> and <command>LINLOAD.EXE</command> from the provided disk images. See <xref linkend=\"alpha-firmware\"/> for more information on Alpha firmware and boot loaders. The floppy images can be found in the <filename>MILO</filename> directory as <filename>milo_<replaceable>subarchitecture</replaceable>.bin</filename>."
msgstr ""

#. Tag: para
#: install-methods.xml:125
#, no-c-format
msgid "Unfortunately, these <command>MILO</command> images could not be tested and might not work for all subarchitectures. If you find it doesn't work for you, try copying the appropriate <command>MILO</command> binary onto the floppy (<ulink url=\"&disturlftp;main/disks-alpha/current/MILO/\"></ulink>). Note that those <command>MILO</command>s don't support ext2 <quote>sparse superblocks</quote>, so you can't use them to load kernels from newly generated ext2 file systems. As a workaround, you can put your kernel onto the FAT partition next to the <command>MILO</command>."
msgstr ""

#. Tag: para
#: install-methods.xml:137
#, no-c-format
msgid "<command>MILO</command> binaries are platform-specific. See <xref linkend=\"alpha-cpus\"/> to determine the appropriate <command>MILO</command> image for your Alpha platform."
msgstr ""

#. Tag: title
#: install-methods.xml:152
#, no-c-format
msgid "RiscPC Installation Files"
msgstr ""

#. Tag: para
#: install-methods.xml:153
#, no-c-format
msgid "The RiscPC installer is booted initially from RISC OS. All the necessary files are provided in one Zip archive, &rpc-install-kit;. Download this file onto the RISC OS machine, copy the <filename>linloader.!Boot</filename> components into place, and run <filename>!dInstall</filename>."
msgstr ""

#. Tag: title
#: install-methods.xml:165
#, no-c-format
msgid "Netwinder Installation Files"
msgstr ""

#. Tag: para
#: install-methods.xml:166
#, no-c-format
msgid "The easiest way to boot a Netwinder is over the network, using the supplied TFTP image &netwinder-boot-img;."
msgstr ""

#. Tag: title
#: install-methods.xml:175
#, no-c-format
msgid "CATS Installation Files"
msgstr ""

#. Tag: para
#: install-methods.xml:176
#, no-c-format
msgid "CATS can be booted either via the network or from CD-ROM. The kernel and initrd can be obtained from &cats-boot-img;."
msgstr ""

#. Tag: title
#: install-methods.xml:185
#, no-c-format
msgid "NSLU2 Installation Files"
msgstr ""

#. Tag: para
#: install-methods.xml:186
#, no-c-format
msgid "A firmware image is provided for the Linksys NSLU2 which will automatically boot <classname>debian-installer</classname>. This firmware image can be obtained from &nslu2-firmware-img;."
msgstr ""

#. Tag: title
#: install-methods.xml:232
#, no-c-format
msgid "Choosing a Kernel"
msgstr ""

#. Tag: para
#: install-methods.xml:234
#, no-c-format
msgid "Some m68k subarchs have a choice of kernels to install. In general we recommend trying the most recent version first. If your subarch or machine needs to use a 2.2.x kernel, make sure you choose one of the images that supports 2.2.x kernels (see the <ulink url=\"&disturl;/main/installer-&architecture;/current/images/MANIFEST\">MANIFEST</ulink>)."
msgstr ""

#. Tag: para
#: install-methods.xml:243
#, no-c-format
msgid "All of the m68k images for use with 2.2.x kernels, require the kernel parameter &ramdisksize;."
msgstr ""

#. Tag: title
#: install-methods.xml:261
#, no-c-format
msgid "Creating an IPL tape"
msgstr ""

#. Tag: para
#: install-methods.xml:263
#, no-c-format
msgid "If you can't boot (IPL) from the CD-ROM and you are not using VM you need to create an IPL tape first. This is described in section 3.4.3 in the <ulink url=\"http://www.redbooks.ibm.com/pubs/pdfs/redbooks/sg246264.pdf\"> Linux for IBM eServer zSeries and S/390: Distributions</ulink> Redbook. The files you need to write to the tape are (in this order): <filename>kernel.debian</filename>, <filename>parmfile.debian</filename> and <filename>initrd.debian</filename>. The files can be downloaded from the <filename>tape</filename> sub-directory, see <xref linkend=\"where-files\"/>."
msgstr ""

#. Tag: title
#: install-methods.xml:287
#, no-c-format
msgid "Creating Floppies from Disk Images"
msgstr ""

#. Tag: para
#: install-methods.xml:288
#, no-c-format
msgid "Bootable floppy disks are generally used as a last resort to boot the installer on hardware that cannot boot from CD or by other means."
msgstr ""

#. Tag: para
#: install-methods.xml:293
#, no-c-format
msgid "Booting the installer from floppy disk reportedly fails on Mac USB floppy drives."
msgstr ""

#. Tag: para
#: install-methods.xml:298
#, no-c-format
msgid "Booting the installer from floppy disk is not supported on Amigas or 68k Macs."
msgstr ""

#. Tag: para
#: install-methods.xml:303
#, no-c-format
msgid "Disk images are files containing the complete contents of a floppy disk in <emphasis>raw</emphasis> form. Disk images, such as <filename>boot.img</filename>, cannot simply be copied to floppy drives. A special program is used to write the image files to floppy disk in <emphasis>raw</emphasis> mode. This is required because these images are raw representations of the disk; it is required to do a <emphasis>sector copy</emphasis> of the data from the file onto the floppy."
msgstr ""

#. Tag: para
#: install-methods.xml:314
#, no-c-format
msgid "There are different techniques for creating floppies from disk images. This section describes how to create floppies from disk images on different platforms."
msgstr ""

#. Tag: para
#: install-methods.xml:320
#, no-c-format
msgid "No matter which method you use to create your floppies, you should remember to flip the write-protect tab on the floppies once you have written them, to ensure they are not damaged unintentionally."
msgstr ""

#. Tag: title
#: install-methods.xml:328
#, no-c-format
msgid "Writing Disk Images From a Linux or Unix System"
msgstr ""

#. Tag: para
#: install-methods.xml:329
#, no-c-format
msgid ""
      "To write the floppy disk image files to the floppy disks, you will probably need root access to the system. Place a good, blank floppy in the floppy drive. Next, use the command <informalexample><screen>\n"
      "$ dd if=<replaceable>filename</replaceable> of=/dev/fd0 bs=1024 conv=sync ; sync\n"
      "</screen></informalexample> where <replaceable>filename</replaceable> is one of the floppy disk image files (see <xref linkend=\"downloading-files\"/> for what <replaceable>filename</replaceable> should be). <filename>/dev/fd0</filename> is a commonly used name of the floppy disk device, it may be different on your workstation <phrase arch=\"sparc\">(on Solaris, it is <filename>/dev/fd/0</filename>)</phrase>. The command may return to the prompt before Unix has finished writing the floppy disk, so look for the disk-in-use light on the floppy drive and be sure that the light is out and the disk has stopped revolving before you remove it from the drive. On some systems, you'll have to run a command to eject the floppy from the drive <phrase arch=\"sparc\">(on Solaris, use <command>eject</command>, see the manual page)</phrase>."
msgstr ""

#. Tag: para
#: install-methods.xml:353
#, no-c-format
msgid "Some systems attempt to automatically mount a floppy disk when you place it in the drive. You might have to disable this feature before the workstation will allow you to write a floppy in <emphasis>raw mode</emphasis>. Unfortunately, how to accomplish this will vary based on your operating system. <phrase arch=\"sparc\"> On Solaris, you can work around volume management to get raw access to the floppy. First, make sure that the floppy is auto-mounted (using <command>volcheck</command> or the equivalent command in the file manager). Then use a <command>dd</command> command of the form given above, just replace <filename>/dev/fd0</filename> with <filename>/vol/rdsk/<replaceable>floppy_name</replaceable></filename>, where <replaceable>floppy_name</replaceable> is the name the floppy disk was given when it was formatted (unnamed floppies default to the name <filename>unnamed_floppy</filename>). On other systems, ask your system administrator. </phrase>"
msgstr ""

#. Tag: para
#: install-methods.xml:374
#, no-c-format
msgid "If writing a floppy on powerpc Linux, you will need to eject it. The <command>eject</command> program handles this nicely; you might need to install it."
msgstr ""

#. Tag: title
#: install-methods.xml:392
#, no-c-format
msgid "Writing Disk Images From DOS, Windows, or OS/2"
msgstr ""

#. Tag: para
#: install-methods.xml:394
#, no-c-format
msgid "If you have access to an i386 or amd64 machine, you can use one of the following programs to copy images to floppies."
msgstr ""

#. Tag: para
#: install-methods.xml:399
#, no-c-format
msgid "The <command>rawrite1</command> and <command>rawrite2</command> programs can be used under MS-DOS. To use these programs, first make sure that you are booted into DOS. Trying to use these programs from within a DOS box in Windows, or double-clicking on these programs from the Windows Explorer is <emphasis>not</emphasis> expected to work."
msgstr ""

#. Tag: para
#: install-methods.xml:407
#, no-c-format
msgid "The <command>rwwrtwin</command> program runs on Windows 95, NT, 98, 2000, ME, XP and probably later versions. To use it you will need to unpack diskio.dll in the same directory."
msgstr ""

#. Tag: para
#: install-methods.xml:413
#, no-c-format
msgid "These tools can be found on the Official Debian CD-ROMs under the <filename>/tools</filename> directory."
msgstr ""

#. Tag: title
#: install-methods.xml:426
#, no-c-format
msgid "Writing Disk Images on Atari Systems"
msgstr ""

#. Tag: para
#: install-methods.xml:427
#, no-c-format
msgid "You'll find the &rawwrite.ttp; program in the same directory as the floppy disk images. Start the program by double clicking on the program icon, and type in the name of the floppy image file you want written to the floppy at the TOS program command line dialog box."
msgstr ""

#. Tag: title
#: install-methods.xml:438
#, no-c-format
msgid "Writing Disk Images on Macintosh Systems"
msgstr ""

#. Tag: para
#: install-methods.xml:439
#, no-c-format
msgid "There is no MacOS application to write images to floppy disks (and there would be no point in doing this as you can't use these floppies to boot the installation system or install kernel and modules from on Macintosh). However, these files are needed for the installation of the operating system and modules, later in the process."
msgstr ""

#. Tag: title
#: install-methods.xml:457
#, no-c-format
msgid "Writing Disk Images From MacOS"
msgstr ""

#. Tag: para
#: install-methods.xml:458
#, no-c-format
msgid "An AppleScript, <application>Make Debian Floppy</application>, is available for burning floppies from the provided disk image files. It can be downloaded from <ulink url=\"ftp://ftp2.sourceforge.net/pub/sourceforge/d/de/debian-imac/MakeDebianFloppy.sit\"></ulink>. To use it, just unstuff it on your desktop, and then drag any floppy image file to it. You must have Applescript installed and enabled in your extensions manager. Disk Copy will ask you to confirm that you wish to erase the floppy and proceed to write the file image to it."
msgstr ""

#. Tag: para
#: install-methods.xml:469
#, no-c-format
msgid "You can also use the MacOS utility <command>Disk Copy</command> directly, or the freeware utility <command>suntar</command>. The <filename>root.bin</filename> file is an example of a floppy image. Use one of the following methods to create a floppy from the floppy image with these utilities."
msgstr ""

#. Tag: title
#: install-methods.xml:480
#, no-c-format
msgid "Writing Disk Images with <command>Disk Copy</command>"
msgstr ""

#. Tag: para
#: install-methods.xml:481
#, no-c-format
msgid "If you are creating the floppy image from files which were originally on the official &debian; CD, then the Type and Creator are already set correctly. The following <command>Creator-Changer</command> steps are only necessary if you downloaded the image files from a Debian mirror."
msgstr ""

#. Tag: para
#: install-methods.xml:490
#, no-c-format
msgid "Obtain <ulink url=\"&url-powerpc-creator-changer;\">Creator-Changer</ulink> and use it to open the <filename>root.bin</filename> file."
msgstr ""

#. Tag: para
#: install-methods.xml:497
#, no-c-format
msgid "Change the Creator to <userinput>ddsk</userinput> (Disk Copy), and the Type to <userinput>DDim</userinput> (binary floppy image). The case is sensitive for these fields."
msgstr ""

#. Tag: para
#: install-methods.xml:504
#, no-c-format
msgid "<emphasis>Important:</emphasis> In the Finder, use <userinput>Get Info</userinput> to display the Finder information about the floppy image, and <quote>X</quote> the <userinput>File Locked</userinput> check box so that MacOS will be unable to remove the boot blocks if the image is accidentally mounted."
msgstr ""

#. Tag: para
#: install-methods.xml:513
#, no-c-format
msgid "Obtain <command>Disk Copy</command>; if you have a MacOS system or CD it will very likely be there already, otherwise try <ulink url=\"&url-powerpc-diskcopy;\"></ulink>."
msgstr ""

#. Tag: para
#: install-methods.xml:520
#, no-c-format
msgid "Run <command>Disk Copy</command>, and select <menuchoice> <guimenu>Utilities</guimenu> <guimenuitem>Make a Floppy</guimenuitem> </menuchoice>, then select the <emphasis>locked</emphasis> image file from the resulting dialog. It will ask you to insert a floppy, then ask if you really want to erase it. When done it should eject the floppy."
msgstr ""

#. Tag: title
#: install-methods.xml:535
#, no-c-format
msgid "Writing Disk Images with <command>suntar</command>"
msgstr ""

#. Tag: para
#: install-methods.xml:539
#, no-c-format
msgid "Obtain <command>suntar</command> from <ulink url=\"&url-powerpc-suntar;\"> </ulink>. Start the <command>suntar</command> program and select <quote>Overwrite Sectors...</quote> from the <userinput>Special</userinput> menu."
msgstr ""

#. Tag: para
#: install-methods.xml:547
#, no-c-format
msgid "Insert the floppy disk as requested, then hit &enterkey; (start at sector 0)."
msgstr ""

#. Tag: para
#: install-methods.xml:553
#, no-c-format
msgid "Select the <filename>root.bin</filename> file in the file-opening dialog."
msgstr ""

#. Tag: para
#: install-methods.xml:558
#, no-c-format
msgid "After the floppy has been created successfully, select <menuchoice> <guimenu>File</guimenu> <guimenuitem>Eject</guimenuitem> </menuchoice>. If there are any errors writing the floppy, simply toss that floppy and try another."
msgstr ""

#. Tag: para
#: install-methods.xml:566
#, no-c-format
msgid "Before using the floppy you created, <emphasis>set the write protect tab</emphasis>! Otherwise if you accidentally mount it in MacOS, MacOS will helpfully ruin it."
msgstr ""

#. Tag: title
#: install-methods.xml:585
#, no-c-format
msgid "Preparing Files for USB Memory Stick Booting"
msgstr ""

#. Tag: para
#: install-methods.xml:587
#, no-c-format
msgid "To prepare the USB stick, you will need a system where GNU/Linux is already running and where USB is supported. You should ensure that the usb-storage kernel module is loaded (<userinput>modprobe usb-storage</userinput>) and try to find out which SCSI device the USB stick has been mapped to (in this example <filename>/dev/sda</filename> is used). To write to your stick, you may have to turn off its write protection switch."
msgstr ""

#. Tag: para
#: install-methods.xml:597
#, no-c-format
msgid "Note that the USB stick should be at least 256 MB in size (smaller setups are possible if you follow <xref linkend=\"usb-copy-flexible\"/>)."
msgstr ""

#. Tag: title
#: install-methods.xml:605
#, no-c-format
msgid "Copying the files &mdash; the easy way"
msgstr ""

#. Tag: para
#: install-methods.xml:606
#, no-c-format
msgid "There is an all-in-one file <filename>hd-media/boot.img.gz</filename> which contains all the installer files (including the kernel) as well as <command>SYSLINUX</command> and its configuration file. You only have to extract it directly to your USB stick:"
msgstr ""

#. Tag: screen
#: install-methods.xml:613
#, no-c-format
msgid "# zcat boot.img.gz &gt; /dev/<replaceable>sda</replaceable>"
msgstr ""

#. Tag: para
#: install-methods.xml:615
#, no-c-format
msgid "There is an all-in-one file <filename>hd-media/boot.img.gz</filename> which contains all the installer files (including the kernel) as well as <command>yaboot</command> and its configuration file. Create a partition of type \"Apple_Bootstrap\" on your USB stick using <command>mac-fdisk</command>'s <userinput>C</userinput> command and extract the image directly to that:"
msgstr ""

#. Tag: screen
#: install-methods.xml:624
#, no-c-format
msgid "# zcat boot.img.gz &gt; /dev/<replaceable>sda2</replaceable>"
msgstr ""

#. Tag: para
#: install-methods.xml:627
#, no-c-format
msgid "Using this method will destroy anything already on the device. Make sure that you use the correct device name for your USB stick."
msgstr ""

#. Tag: para
#: install-methods.xml:633
#, no-c-format
msgid "After that, mount the USB memory stick (<userinput>mount <replaceable arch=\"x86\">/dev/sda</replaceable> <replaceable arch=\"powerpc\">/dev/sda2</replaceable> /mnt</userinput>), which will now have <phrase arch=\"x86\">a FAT filesystem</phrase> <phrase arch=\"powerpc\">an HFS filesystem</phrase> on it, and copy a Debian netinst or businesscard ISO image to it. Please note that the file name must end in <filename>.iso</filename>. Unmount the stick (<userinput>umount /mnt</userinput>) and you are done."
msgstr ""

#. Tag: title
#: install-methods.xml:649
#, no-c-format
msgid "Copying the files &mdash; the flexible way"
msgstr ""

#. Tag: para
#: install-methods.xml:650
#, no-c-format
msgid "If you like more flexibility or just want to know what's going on, you should use the following method to put the files on your stick."
msgstr ""

#. Tag: title
#: install-methods.xml:662 install-methods.xml:751
#, no-c-format
msgid "USB stick partitioning on &arch-title;"
msgstr ""

#. Tag: para
#: install-methods.xml:663
#, no-c-format
msgid "We will show how to setup the memory stick to use the first partition, instead of the entire device."
msgstr ""

#. Tag: para
#: install-methods.xml:668
#, no-c-format
msgid ""
      "Since most USB sticks come pre-configured with a single FAT16 partition, you probably won't have to repartition or reformat the stick. If you have to do that anyway, use <command>cfdisk</command> or any other partitioning tool to create a FAT16 partition, and then create the filesystem using: <informalexample><screen>\n"
      "# mkdosfs /dev/<replaceable>sda1</replaceable>\n"
      "</screen></informalexample> Take care that you use the correct device name for your USB stick. The <command>mkdosfs</command> command is contained in the <classname>dosfstools</classname> Debian package."
msgstr ""

#. Tag: para
#: install-methods.xml:682
#, no-c-format
msgid "In order to start the kernel after booting from the USB stick, we will put a boot loader on the stick. Although any boot loader (e.g. <command>LILO</command>) should work, it's convenient to use <command>SYSLINUX</command>, since it uses a FAT16 partition and can be reconfigured by just editing a text file. Any operating system which supports the FAT file system can be used to make changes to the configuration of the boot loader."
msgstr ""

#. Tag: para
#: install-methods.xml:692
#, no-c-format
msgid ""
      "To put <command>SYSLINUX</command> on the FAT16 partition on your USB stick, install the <classname>syslinux</classname> and <classname>mtools</classname> packages on your system, and do: <informalexample><screen>\n"
      "# syslinux /dev/<replaceable>sda1</replaceable>\n"
      "</screen></informalexample> Again, take care that you use the correct device name. The partition must not be mounted when starting <command>SYSLINUX</command>. This procedure writes a boot sector to the partition and creates the file <filename>ldlinux.sys</filename> which contains the boot loader code."
msgstr ""

#. Tag: para
#: install-methods.xml:705
#, no-c-format
msgid "Mount the partition (<userinput>mount /dev/sda1 /mnt</userinput>) and copy the following files from the Debian archives to the stick: <itemizedlist> <listitem><para> <filename>vmlinuz</filename> (kernel binary) </para></listitem> <listitem><para> <filename>initrd.gz</filename> (initial ramdisk image) </para></listitem> <listitem><para> <filename>syslinux.cfg</filename> (SYSLINUX configuration file) </para></listitem> <listitem><para> Optional kernel modules </para></listitem> </itemizedlist> If you want to rename the files, please note that <command>SYSLINUX</command> can only process DOS (8.3) file names."
msgstr ""

#. Tag: para
#: install-methods.xml:736
#, no-c-format
msgid "The <filename>syslinux.cfg</filename> configuration file should contain the following two lines:"
msgstr ""

#. Tag: screen
#: install-methods.xml:741
#, no-c-format
msgid ""
      "default vmlinuz\n"
      "append initrd=initrd.gz"
msgstr ""

#. Tag: para
#: install-methods.xml:752
#, no-c-format
msgid ""
      "Most USB sticks do not come pre-configured in such a way that Open Firmware can boot from them, so you will need to repartition the stick. On Mac systems, run <userinput>mac-fdisk /dev/sda</userinput>, initialise a new partition map using the <userinput>i</userinput> command, and create a new partition of type Apple_Bootstrap using the <userinput>C</userinput> command. (Note that the first \"partition\" will always be the partition map itself.) Then type <informalexample><screen>\n"
      "$ hformat /dev/<replaceable>sda2</replaceable>\n"
      "</screen></informalexample> Take care that you use the correct device name for your USB stick. The <command>hformat</command> command is contained in the <classname>hfsutils</classname> Debian package."
msgstr ""

#. Tag: para
#: install-methods.xml:768
#, no-c-format
msgid "In order to start the kernel after booting from the USB stick, we will put a boot loader on the stick. The <command>yaboot</command> boot loader can be installed on an HFS filesystem and can be reconfigured by just editing a text file. Any operating system which supports the HFS file system can be used to make changes to the configuration of the boot loader."
msgstr ""

#. Tag: para
#: install-methods.xml:777
#, no-c-format
msgid ""
      "The normal <command>ybin</command> tool that comes with <command>yaboot</command> does not yet understand USB storage devices, so you will have to install <command>yaboot</command> by hand using the <classname>hfsutils</classname> tools. Type <informalexample><screen>\n"
      "$ hmount /dev/sda2\n"
      "$ hcopy -r /usr/lib/yaboot/yaboot :\n"
      "$ hattrib -c UNIX -t tbxi :yaboot\n"
      "$ hattrib -b :\n"
      "$ humount\n"
      "</screen></informalexample> Again, take care that you use the correct device name. The partition must not be otherwise mounted during this procedure. This procedure writes the boot loader to the partition, and uses the HFS utilities to mark it in such a way that Open Firmware will boot it. Having done this, the rest of the USB stick may be prepared using the normal Unix utilities."
msgstr ""

#. Tag: para
#: install-methods.xml:793
#, no-c-format
msgid "Mount the partition (<userinput>mount /dev/sda2 /mnt</userinput>) and copy the following files from the Debian archives to the stick:"
msgstr ""

#. Tag: para
#: install-methods.xml:799
#, no-c-format
msgid "<filename>vmlinux</filename> (kernel binary)"
msgstr ""

#. Tag: para
#: install-methods.xml:804
#, no-c-format
msgid "<filename>initrd.gz</filename> (initial ramdisk image)"
msgstr ""

#. Tag: para
#: install-methods.xml:809
#, no-c-format
msgid "<filename>yaboot.conf</filename> (yaboot configuration file)"
msgstr ""

#. Tag: para
#: install-methods.xml:814
#, no-c-format
msgid "<filename>boot.msg</filename> (optional boot message)"
msgstr ""

#. Tag: para
#: install-methods.xml:819
#, no-c-format
msgid "Optional kernel modules"
msgstr ""

#. Tag: para
#: install-methods.xml:826
#, no-c-format
msgid ""
      "The <filename>yaboot.conf</filename> configuration file should contain the following lines: <informalexample><screen>\n"
      "default=install\n"
      "root=/dev/ram\n"
      "\n"
      "message=/boot.msg\n"
      "\n"
      "image=/vmlinux\n"
      "        label=install\n"
      "        initrd=/initrd.gz\n"
      "        initrd-size=10000\n"
      "        read-only\n"
      "</screen></informalexample> Please note that the <userinput>initrd-size</userinput> parameter may need to be increased, depending on the image you are booting."
msgstr ""

#. Tag: title
#: install-methods.xml:842
#, no-c-format
msgid "Adding an ISO image"
msgstr ""

#. Tag: para
#: install-methods.xml:843
#, no-c-format
msgid "The installer will look for a Debian ISO image on the stick as its source for additional data needed for the installation. So your next step is to copy a Debian ISO image (businesscard, netinst or even a full CD image) onto your stick (be sure to select one that fits). The file name of the image must end in <filename>.iso</filename>."
msgstr ""

#. Tag: para
#: install-methods.xml:851
#, no-c-format
msgid "If you want to install over the network, without using an ISO image, you will of course skip the previous step. Moreover you will have to use the initial ramdisk from the <filename>netboot</filename> directory instead of the one from <filename>hd-media</filename>, because <filename>hd-media/initrd.gz</filename> does not have network support."
msgstr ""

#. Tag: para
#: install-methods.xml:860
#, no-c-format
msgid "When you are done, unmount the USB memory stick (<userinput>umount /mnt</userinput>) and activate its write protection switch."
msgstr ""

#. Tag: title
#: install-methods.xml:870
#, no-c-format
msgid "Booting the USB stick"
msgstr ""

#. Tag: para
#: install-methods.xml:871
#, no-c-format
msgid "If your system refuses to boot from the memory stick, the stick may contain an invalid master boot record (MBR). To fix this, use the <command>install-mbr</command> command from the package <classname>mbr</classname>:"
msgstr ""

#. Tag: screen
#: install-methods.xml:878
#, no-c-format
msgid "# install-mbr /dev/<replaceable>sda</replaceable>"
msgstr ""

#. Tag: title
#: install-methods.xml:889
#, no-c-format
msgid "Preparing Files for Hard Disk Booting"
msgstr ""

#. Tag: para
#: install-methods.xml:890
#, no-c-format
msgid "The installer may be booted using boot files placed on an existing hard drive partition, either launched from another operating system or by invoking a boot loader directly from the BIOS."
msgstr ""

#. Tag: para
#: install-methods.xml:896
#, no-c-format
msgid "A full, <quote>pure network</quote> installation can be achieved using this technique. This avoids all hassles of removable media, like finding and burning CD images or struggling with too numerous and unreliable floppy disks."
msgstr ""

#. Tag: para
#: install-methods.xml:903
#, no-c-format
msgid "The installer cannot boot from files on an NTFS file system."
msgstr ""

#. Tag: para
#: install-methods.xml:907
#, no-c-format
msgid "The installer cannot boot from files on an HFS+ file system. MacOS System 8.1 and above may use HFS+ file systems; NewWorld PowerMacs all use HFS+. To determine whether your existing file system is HFS+, select <userinput>Get Info</userinput> for the volume in question. HFS file systems appear as <userinput>Mac OS Standard</userinput>, while HFS+ file systems say <userinput>Mac OS Extended</userinput>. You must have an HFS partition in order to exchange files between MacOS and Linux, in particular the installation files you download."
msgstr ""

#. Tag: para
#: install-methods.xml:918
#, no-c-format
msgid "Different programs are used for hard disk installation system booting, depending on whether the system is a <quote>NewWorld</quote> or an <quote>OldWorld</quote> model."
msgstr ""

#. Tag: title
#: install-methods.xml:927
#, no-c-format
msgid "Hard disk installer booting using <command>LILO</command> or <command>GRUB</command>"
msgstr ""

#. Tag: para
#: install-methods.xml:929
#, no-c-format
msgid "This section explains how to add to or even replace an existing linux installation using either <command>LILO</command> or <command>GRUB</command>."
msgstr ""

#. Tag: para
#: install-methods.xml:935
#, no-c-format
msgid "At boot time, both bootloaders support loading in memory not only the kernel, but also a disk image. This RAM disk can be used as the root file-system by the kernel."
msgstr ""

#. Tag: para
#: install-methods.xml:941
#, no-c-format
msgid "Copy the following files from the Debian archives to a convenient location on your hard drive, for instance to <filename>/boot/newinstall/</filename>."
msgstr ""

#. Tag: para
#: install-methods.xml:948
#, no-c-format
msgid "<filename>vmlinuz</filename> (kernel binary)"
msgstr ""

#. Tag: para
#: install-methods.xml:953
#, no-c-format
msgid "<filename>initrd.gz</filename> (ramdisk image)"
msgstr ""

#. Tag: para
#: install-methods.xml:960
#, no-c-format
msgid "Finally, to configure the bootloader proceed to <xref linkend=\"boot-initrd\"/>."
msgstr ""

#. Tag: title
#: install-methods.xml:970
#, no-c-format
msgid "Hard Disk Installer Booting for OldWorld Macs"
msgstr ""

#. Tag: para
#: install-methods.xml:971
#, no-c-format
msgid "The <filename>boot-floppy-hfs</filename> floppy uses <application>miBoot</application> to launch Linux installation, but <application>miBoot</application> cannot easily be used for hard disk booting. <application>BootX</application>, launched from MacOS, supports booting from files placed on the hard disk. <application>BootX</application> can also be used to dual-boot MacOS and Linux after your Debian installation is complete. For the Performa 6360, it appears that <command>quik</command> cannot make the hard disk bootable. So <application>BootX</application> is required on that model."
msgstr ""

#. Tag: para
#: install-methods.xml:984
#, no-c-format
msgid "Download and unstuff the <application>BootX</application> distribution, available from <ulink url=\"&url-powerpc-bootx;\"></ulink>, or in the <filename>dists/woody/main/disks-powerpc/current/powermac</filename> directory on Debian http/ftp mirrors and official Debian CDs. Use <application>Stuffit Expander</application> to extract it from its archive. Within the package, there is an empty folder called <filename>Linux Kernels</filename>. Download <filename>linux.bin</filename> and <filename>ramdisk.image.gz</filename> from the <filename>disks-powerpc/current/powermac</filename> folder, and place them in the <filename>Linux Kernels</filename> folder. Then place the <filename>Linux Kernels</filename> folder in the active System Folder."
msgstr ""

#. Tag: title
#: install-methods.xml:1004
#, no-c-format
msgid "Hard Disk Installer Booting for NewWorld Macs"
msgstr ""

#. Tag: para
#: install-methods.xml:1005
#, no-c-format
msgid "NewWorld PowerMacs support booting from a network or an ISO9660 CD-ROM, as well as loading ELF binaries directly from the hard disk. These machines will boot Linux directly via <command>yaboot</command>, which supports loading a kernel and RAMdisk directly from an ext2 partition, as well as dual-booting with MacOS. Hard disk booting of the installer is particularly appropriate for newer machines without floppy drives. <command>BootX</command> is not supported and must not be used on NewWorld PowerMacs."
msgstr ""

#. Tag: para
#: install-methods.xml:1016
#, no-c-format
msgid "<emphasis>Copy</emphasis> (not move) the following four files which you downloaded earlier from the Debian archives, onto the root level of your hard drive (this can be accomplished by <keycap>option</keycap>-dragging each file to the hard drive icon)."
msgstr ""

#. Tag: filename
#: install-methods.xml:1026
#, no-c-format
msgid "vmlinux"
msgstr ""

#. Tag: filename
#: install-methods.xml:1031
#, no-c-format
msgid "initrd.gz"
msgstr ""

#. Tag: filename
#: install-methods.xml:1036
#, no-c-format
msgid "yaboot"
msgstr ""

#. Tag: filename
#: install-methods.xml:1041
#, no-c-format
msgid "yaboot.conf"
msgstr ""

#. Tag: para
#: install-methods.xml:1046
#, no-c-format
msgid "Make a note of the partition number of the MacOS partition where you place these files. If you have the MacOS <command>pdisk</command> program, you can use the <command>L</command> command to check for the partition number. You will need this partition number for the command you type at the Open Firmware prompt when you boot the installer."
msgstr ""

#. Tag: para
#: install-methods.xml:1054
#, no-c-format
msgid "To boot the installer, proceed to <xref linkend=\"boot-newworld\"/>."
msgstr ""

#. Tag: title
#: install-methods.xml:1067
#, no-c-format
msgid "Preparing Files for TFTP Net Booting"
msgstr ""

#. Tag: para
#: install-methods.xml:1068
#, no-c-format
msgid "If your machine is connected to a local area network, you may be able to boot it over the network from another machine, using TFTP. If you intend to boot the installation system from another machine, the boot files will need to be placed in specific locations on that machine, and the machine configured to support booting of your specific machine."
msgstr ""

#. Tag: para
#: install-methods.xml:1076
#, no-c-format
msgid "You need to setup a TFTP server, and for many machines a DHCP server<phrase condition=\"supports-rarp\">, or RARP server</phrase><phrase condition=\"supports-bootp\">, or BOOTP server</phrase>."
msgstr ""

#. Tag: para
#: install-methods.xml:1083
#, no-c-format
msgid "<phrase condition=\"supports-rarp\">The Reverse Address Resolution Protocol (RARP) is one way to tell your client what IP address to use for itself. Another way is to use the BOOTP protocol.</phrase> <phrase condition=\"supports-bootp\">BOOTP is an IP protocol that informs a computer of its IP address and where on the network to obtain a boot image.</phrase> <phrase arch=\"m68k\">Yet another alternative exists on VMEbus systems: the IP address can be manually configured in boot ROM.</phrase> The DHCP (Dynamic Host Configuration Protocol) is a more flexible, backwards-compatible extension of BOOTP. Some systems can only be configured via DHCP."
msgstr ""

#. Tag: para
#: install-methods.xml:1100
#, no-c-format
msgid "For PowerPC, if you have a NewWorld Power Macintosh machine, it is a good idea to use DHCP instead of BOOTP. Some of the latest machines are unable to boot using BOOTP."
msgstr ""

#. Tag: para
#: install-methods.xml:1106
#, no-c-format
msgid "Unlike the Open Firmware found on Sparc and PowerPC machines, the SRM console will <emphasis>not</emphasis> use RARP to obtain its IP address, and therefore you must use BOOTP for net booting your Alpha<footnote> <para> Alpha systems can also be net-booted using the DECNet MOP (Maintenance Operations Protocol), but this is not covered here. Presumably, your local OpenVMS operator will be happy to assist you should you have some burning need to use MOP to boot Linux on your Alpha. </para> </footnote>. You can also enter the IP configuration for network interfaces directly in the SRM console."
msgstr ""

#. Tag: para
#: install-methods.xml:1123
#, no-c-format
msgid "Some older HPPA machines (e.g. 715/75) use RBOOTD rather than BOOTP. There is an <classname>rbootd</classname> package available in Debian."
msgstr ""

#. Tag: para
#: install-methods.xml:1128
#, no-c-format
msgid "The Trivial File Transfer Protocol (TFTP) is used to serve the boot image to the client. Theoretically, any server, on any platform, which implements these protocols, may be used. In the examples in this section, we shall provide commands for SunOS 4.x, SunOS 5.x (a.k.a. Solaris), and GNU/Linux."
msgstr ""

#. Tag: para
#: install-methods.xml:1136
#, no-c-format
msgid "To use the Pre-boot Execution Environment (PXE) method of TFTP booting, you will need a TFTP server with <userinput>tsize</userinput> support. On a &debian; server, the <classname>atftpd</classname> and <classname>tftpd-hpa</classname> packages qualify; we recommend <classname>tftpd-hpa</classname>."
msgstr ""

#. Tag: title
#: install-methods.xml:1154
#, no-c-format
msgid "Setting up RARP server"
msgstr ""

#. Tag: para
#: install-methods.xml:1155
#, no-c-format
msgid "To set up RARP, you need to know the Ethernet address (a.k.a. the MAC address) of the client computers to be installed. If you don't know this information, you can <phrase arch=\"sparc\"> pick it off the initial OpenPROM boot messages, use the OpenBoot <userinput>.enet-addr</userinput> command, or </phrase> boot into <quote>Rescue</quote> mode (e.g., from the rescue floppy) and use the command <userinput>/sbin/ifconfig eth0</userinput>."
msgstr ""

#. Tag: para
#: install-methods.xml:1167
#, no-c-format
msgid "On a RARP server system using a Linux 2.4 or 2.6 kernel, or Solaris/SunOS, you use the <command>rarpd</command> program. You need to ensure that the Ethernet hardware address for the client is listed in the <quote>ethers</quote> database (either in the <filename>/etc/ethers</filename> file, or via NIS/NIS+) and in the <quote>hosts</quote> database. Then you need to start the RARP daemon. Issue the command (as root): <userinput>/usr/sbin/rarpd -a</userinput> on most Linux systems and SunOS 5 (Solaris 2), <userinput>/usr/sbin/in.rarpd -a</userinput> on some other Linux systems, or <userinput>/usr/etc/rarpd -a</userinput> in SunOS 4 (Solaris 1)."
msgstr ""

#. Tag: title
#: install-methods.xml:1189
#, no-c-format
msgid "Setting up a BOOTP server"
msgstr ""

#. Tag: para
#: install-methods.xml:1190
#, no-c-format
msgid "There are two BOOTP servers available for GNU/Linux. The first is CMU <command>bootpd</command>. The other is actually a DHCP server: ISC <command>dhcpd</command>. In &debian; these are contained in the <classname>bootp</classname> and <classname>dhcp3-server</classname> packages respectively."
msgstr ""

#. Tag: para
#: install-methods.xml:1198
#, no-c-format
msgid ""
      "To use CMU <command>bootpd</command>, you must first uncomment (or add) the relevant line in <filename>/etc/inetd.conf</filename>. On &debian;, you can run <userinput>update-inetd --enable bootps</userinput>, then <userinput>/etc/init.d/inetd reload</userinput> to do so. Just in case your BOOTP server does not run Debian, the line in question should look like: <informalexample><screen>\n"
      "bootps  dgram  udp  wait  root  /usr/sbin/bootpd  bootpd -i -t 120\n"
      "</screen></informalexample> Now, you must create an <filename>/etc/bootptab</filename> file. This has the same sort of familiar and cryptic format as the good old BSD <filename>printcap</filename>, <filename>termcap</filename>, and <filename>disktab</filename> files. See the <filename>bootptab</filename> manual page for more information. For CMU <command>bootpd</command>, you will need to know the hardware (MAC) address of the client. Here is an example <filename>/etc/bootptab</filename>: <informalexample><screen>\n"
      "client:\\\n"
      "  hd=/tftpboot:\\\n"
      "  bf=tftpboot.img:\\\n"
      "  ip=192.168.1.90:\\\n"
      "  sm=255.255.255.0:\\\n"
      "  sa=192.168.1.1:\\\n"
      "  ha=0123456789AB:\n"
      "</screen></informalexample> You will need to change at least the <quote>ha</quote> option, which specifies the hardware address of the client. The <quote>bf</quote> option specifies the file a client should retrieve via TFTP; see <xref linkend=\"tftp-images\"/> for more details. <phrase arch=\"mips\"> On SGI machines you can just enter the command monitor and type <userinput>printenv</userinput>. The value of the <userinput>eaddr</userinput> variable is the machine's MAC address. </phrase>"
msgstr ""

#. Tag: para
#: install-methods.xml:1231
#, no-c-format
msgid "By contrast, setting up BOOTP with ISC <command>dhcpd</command> is really easy, because it treats BOOTP clients as a moderately special case of DHCP clients. Some architectures require a complex configuration for booting clients via BOOTP. If yours is one of those, read the section <xref linkend=\"dhcpd\"/>. In that case, you will probably be able to get away with simply adding the <userinput>allow bootp</userinput> directive to the configuration block for the subnet containing the client, and restart <command>dhcpd</command> with <userinput>/etc/init.d/dhcpd3-server restart</userinput>."
msgstr ""

#. Tag: title
#: install-methods.xml:1252
#, no-c-format
msgid "Setting up a DHCP server"
msgstr ""

#. Tag: para
#: install-methods.xml:1253
#, no-c-format
msgid "One free software DHCP server is ISC <command>dhcpd</command>. For &debian;, the <classname>dhcp3-server</classname> package is recommended. Here is a sample configuration file for it (see <filename>/etc/dhcp3/dhcpd.conf</filename>):"
msgstr ""

#. Tag: screen
#: install-methods.xml:1260
#, no-c-format
msgid ""
      "option domain-name \"example.com\";\n"
      "option domain-name-servers ns1.example.com;\n"
      "option subnet-mask 255.255.255.0;\n"
      "default-lease-time 600;\n"
      "max-lease-time 7200;\n"
      "server-name \"servername\";\n"
      "\n"
      "subnet 192.168.1.0 netmask 255.255.255.0 {\n"
      "  range 192.168.1.200 192.168.1.253;\n"
      "  option routers 192.168.1.1;\n"
      "}\n"
      "\n"
      "host clientname {\n"
      "  filename \"/tftpboot/tftpboot.img\";\n"
      "  server-name \"servername\";\n"
      "  next-server servername;\n"
      "  hardware ethernet 01:23:45:67:89:AB;\n"
      "  fixed-address 192.168.1.90;\n"
      "}"
msgstr ""

#. Tag: para
#: install-methods.xml:1262
#, no-c-format
msgid "In this example, there is one server <replaceable>servername</replaceable> which performs all of the work of DHCP server, TFTP server, and network gateway. You will almost certainly need to change the domain-name options, as well as the server name and client hardware address. The <replaceable>filename</replaceable> option should be the name of the file which will be retrieved via TFTP."
msgstr ""

#. Tag: para
#: install-methods.xml:1272
#, no-c-format
msgid "After you have edited the <command>dhcpd</command> configuration file, restart it with <userinput>/etc/init.d/dhcpd3-server restart</userinput>."
msgstr ""

#. Tag: title
#: install-methods.xml:1280
#, no-c-format
msgid "Enabling PXE Booting in the DHCP configuration"
msgstr ""

#. Tag: para
#: install-methods.xml:1281
#, no-c-format
msgid ""
      "Here is another example for a <filename>dhcp.conf</filename> using the Pre-boot Execution Environment (PXE) method of TFTP. <informalexample><screen>\n"
      "option domain-name \"example.com\";\n"
      "\n"
      "default-lease-time 600;\n"
      "max-lease-time 7200;\n"
      "\n"
      "allow booting;\n"
      "allow bootp;\n"
      "\n"
      "# The next paragraph needs to be modified to fit your case\n"
      "subnet 192.168.1.0 netmask 255.255.255.0 {\n"
      "  range 192.168.1.200 192.168.1.253;\n"
      "  option broadcast-address 192.168.1.255;\n"
      "# the gateway address which can be different\n"
      "# (access to the internet for instance)\n"
      "  option routers 192.168.1.1;\n"
      "# indicate the dns you want to use\n"
      "  option domain-name-servers 192.168.1.3;\n"
      "}\n"
      "\n"
      "group {\n"
      "  next-server 192.168.1.3;\n"
      "  host tftpclient {\n"
      "# tftp client hardware address\n"
      "  hardware ethernet  00:10:DC:27:6C:15;\n"
      "  filename \"pxelinux.0\";\n"
      " }\n"
      "}\n"
      "</screen></informalexample> Note that for PXE booting, the client filename <filename>pxelinux.0</filename> is a boot loader, not a kernel image (see <xref linkend=\"tftp-images\"/> below)."
msgstr ""

#. Tag: title
#: install-methods.xml:1297
#, no-c-format
msgid "Enabling the TFTP Server"
msgstr ""

#. Tag: para
#: install-methods.xml:1298
#, no-c-format
msgid ""
      "To get the TFTP server ready to go, you should first make sure that <command>tftpd</command> is enabled. This is usually enabled by having something like the following line in <filename>/etc/inetd.conf</filename>: <informalexample><screen>\n"
      "tftp dgram udp wait nobody /usr/sbin/tcpd in.tftpd /tftpboot\n"
      "</screen></informalexample> Debian packages will in general set this up correctly by default when they are installed."
msgstr ""

#. Tag: para
#: install-methods.xml:1310
#, no-c-format
msgid "Historically, TFTP servers used <filename>/tftpboot</filename> as directory to serve images from. However, &debian; packages may use other directories to comply with the <ulink url=\"&url-fhs-home;\">Filesystem Hierarchy Standard</ulink>. For example, <classname>tftpd-hpa</classname> by default uses <filename>/var/lib/tftpboot</filename>. You may have to adjust the configuration examples in this section accordingly."
msgstr ""

#. Tag: para
#: install-methods.xml:1320
#, no-c-format
msgid "Look in <filename>/etc/inetd.conf</filename> and remember the directory which is used as the argument of <command>in.tftpd</command><footnote> <para> The <userinput>-l</userinput> argument enables some versions of <command>in.tftpd</command> to log all requests to the system logs; this is useful for diagnosing boot errors. </para> </footnote>; you'll need that below. If you've had to change <filename>/etc/inetd.conf</filename>, you'll have to notify the running <command>inetd</command> process that the file has changed. On a Debian machine, run <userinput>/etc/init.d/inetd reload</userinput>; on other machines, find out the process ID for <command>inetd</command>, and run <userinput>kill -HUP <replaceable>inetd-pid</replaceable></userinput>."
msgstr ""

#. Tag: para
#: install-methods.xml:1338
#, no-c-format
msgid ""
      "If you intend to install Debian on an SGI machine and your TFTP server is a GNU/Linux box running Linux 2.4, you'll need to set the following on your server: <informalexample><screen>\n"
      "# echo 1 &gt; /proc/sys/net/ipv4/ip_no_pmtu_disc\n"
      "</screen></informalexample> to turn off Path MTU discovery, otherwise the SGI's PROM can't download the kernel. Furthermore, make sure TFTP packets are sent from a source port no greater than 32767, or the download will stall after the first packet. Again, it's Linux 2.4.X tripping this bug in the PROM, and you can avoid it by setting <informalexample><screen>\n"
      "# echo \"2048 32767\" &gt; /proc/sys/net/ipv4/ip_local_port_range\n"
      "</screen></informalexample> to adjust the range of source ports the Linux TFTP server uses."
msgstr ""

#. Tag: title
#: install-methods.xml:1360
#, no-c-format
msgid "Move TFTP Images Into Place"
msgstr ""

#. Tag: para
#: install-methods.xml:1361
#, no-c-format
msgid "Next, place the TFTP boot image you need, as found in <xref linkend=\"where-files\"/>, in the <command>tftpd</command> boot image directory. You may have to make a link from that file to the file which <command>tftpd</command> will use for booting a particular client. Unfortunately, the file name is determined by the TFTP client, and there are no strong standards."
msgstr ""

#. Tag: para
#: install-methods.xml:1370
#, no-c-format
msgid "On NewWorld Power Macintosh machines, you will need to set up the <command>yaboot</command> boot loader as the TFTP boot image. <command>Yaboot</command> will then retrieve the kernel and RAMdisk images via TFTP itself. For net booting, use the <filename>yaboot-netboot.conf</filename>. Just rename this to <filename>yaboot.conf</filename> in the TFTP directory."
msgstr ""

#. Tag: para
#: install-methods.xml:1379
#, no-c-format
msgid "For PXE booting, everything you should need is set up in the <filename>netboot/netboot.tar.gz</filename> tarball. Simply extract this tarball into the <command>tftpd</command> boot image directory. Make sure your dhcp server is configured to pass <filename>pxelinux.0</filename> to <command>tftpd</command> as the filename to boot."
msgstr ""

#. Tag: para
#: install-methods.xml:1387
#, no-c-format
msgid "For PXE booting, everything you should need is set up in the <filename>netboot/netboot.tar.gz</filename> tarball. Simply extract this tarball into the <command>tftpd</command> boot image directory. Make sure your dhcp server is configured to pass <filename>/debian-installer/ia64/elilo.efi</filename> to <command>tftpd</command> as the filename to boot."
msgstr ""

#. Tag: title
#: install-methods.xml:1399
#, no-c-format
msgid "DECstation TFTP Images"
msgstr ""

#. Tag: para
#: install-methods.xml:1400
#, no-c-format
msgid "For DECstations, there are tftpimage files for each subarchitecture, which contain both kernel and installer in one file. The naming convention is <filename><replaceable>subarchitecture</replaceable>/netboot-boot.img</filename>. Copy the tftpimage file you would like to use to <userinput>/tftpboot/tftpboot.img</userinput> if you work with the example BOOTP/DHCP setups described above."
msgstr ""

#. Tag: para
#: install-methods.xml:1410
#, no-c-format
msgid "The DECstation firmware boots by TFTP with the command <userinput>boot <replaceable>#</replaceable>/tftp</userinput>, where <replaceable>#</replaceable> is the number of the TurboChannel device from which to boot. On most DECstations this is <quote>3</quote>. If the BOOTP/DHCP server does not supply the filename or you need to pass additional parameters, they can optionally be appended with the following syntax:"
msgstr ""

#. Tag: userinput
#: install-methods.xml:1422
#, no-c-format
msgid "boot #/tftp/filename param1=value1 param2=value2 ..."
msgstr ""

#. Tag: para
#: install-methods.xml:1424
#, no-c-format
msgid "Several DECstation firmware revisions show a problem with regard to net booting: the transfer starts, but after some time it stops with an <computeroutput>a.out err</computeroutput>. This can have several reasons: <orderedlist> <listitem><para> The firmware does not respond to ARP requests during a TFTP transfer. This leads to an ARP timeout and the transfer stops. The solution is to add the MAC address of the Ethernet card in the DECstation statically to the ARP table of the TFTP server. This is done by running <userinput>arp -s <replaceable>IP-address</replaceable> <replaceable>MAC-address</replaceable></userinput> as root on the machine acting as TFTP server. The MAC-address of the DECstation can be read out by entering <command>cnfg</command> at the DECstation firmware prompt. </para></listitem> <listitem><para> The firmware has a size limit on the files that can be booted by TFTP. </para></listitem> </orderedlist> There are also firmware revisions that cannot boot via TFTP at all. An overview about the different firmware revisions can be found at the NetBSD web pages: <ulink url=\"http://www.netbsd.org/Ports/pmax/board-list.html#proms\"></ulink>."
msgstr ""

#. Tag: title
#: install-methods.xml:1462
#, no-c-format
msgid "Alpha TFTP Booting"
msgstr ""

#. Tag: para
#: install-methods.xml:1463
#, no-c-format
msgid "On Alpha, you must specify the filename (as a relative path to the boot image directory) using the <userinput>-file</userinput> argument to the SRM <userinput>boot</userinput> command, or by setting the <userinput>BOOT_FILE</userinput> environment variable. Alternatively, the filename can be given via BOOTP (in ISC <command>dhcpd</command>, use the <userinput>filename</userinput> directive). Unlike Open Firmware, there is <emphasis>no default filename</emphasis> on SRM, so you <emphasis>must</emphasis> specify a filename by either one of these methods."
msgstr ""

#. Tag: title
#: install-methods.xml:1478
#, no-c-format
msgid "SPARC TFTP Booting"
msgstr ""

#. Tag: para
#: install-methods.xml:1479
#, no-c-format
msgid ""
      "Some SPARC architectures add the subarchitecture names, such as <quote>SUN4M</quote> or <quote>SUN4C</quote>, to the filename. Thus, if your system's subarchitecture is a SUN4C, and its IP is 192.168.1.3, the filename would be <filename>C0A80103.SUN4C</filename>. However, there are also subarchitectures where the file the client looks for is just <filename>client-ip-in-hex</filename>. An easy way to determine the hexadecimal code for the IP address is to enter the following command in a shell (assuming the machine's intended IP is 10.0.0.4). <informalexample><screen>\n"
      "$ printf '%.2x%.2x%.2x%.2x\\n' 10 0 0 4\n"
      "</screen></informalexample> To get to the correct filename, you will need to change all letters to uppercase and if necessary append the subarchitecture name."
msgstr ""

#. Tag: para
#: install-methods.xml:1495
#, no-c-format
msgid "If you've done all this correctly, giving the command <userinput>boot net</userinput> from the OpenPROM should load the image. If the image cannot be found, try checking the logs on your tftp server to see which image name is being requested."
msgstr ""

#. Tag: para
#: install-methods.xml:1502
#, no-c-format
msgid "You can also force some sparc systems to look for a specific file name by adding it to the end of the OpenPROM boot command, such as <userinput>boot net my-sparc.image</userinput>. This must still reside in the directory that the TFTP server looks in."
msgstr ""

#. Tag: title
#: install-methods.xml:1513
#, no-c-format
msgid "BVM/Motorola TFTP Booting"
msgstr ""

#. Tag: para
#: install-methods.xml:1514
#, no-c-format
msgid "For BVM and Motorola VMEbus systems copy the files &bvme6000-tftp-files; to <filename>/tftpboot/</filename>."
msgstr ""

#. Tag: para
#: install-methods.xml:1519
#, no-c-format
msgid "Next, configure your boot ROMs or BOOTP server to initially load the <filename>tftplilo.bvme</filename> or <filename>tftplilo.mvme</filename> files from the TFTP server. Refer to the <filename>tftplilo.txt</filename> file for your subarchitecture for additional system-specific configuration information."
msgstr ""

#. Tag: title
#: install-methods.xml:1531
#, no-c-format
msgid "SGI TFTP Booting"
msgstr ""

#. Tag: para
#: install-methods.xml:1532
#, no-c-format
msgid "On SGI machines you can rely on the <command>bootpd</command> to supply the name of the TFTP file. It is given either as the <userinput>bf=</userinput> in <filename>/etc/bootptab</filename> or as the <userinput>filename=</userinput> option in <filename>/etc/dhcpd.conf</filename>."
msgstr ""

#. Tag: title
#: install-methods.xml:1544
#, no-c-format
msgid "Broadcom BCM91250A and BCM91480B TFTP Booting"
msgstr ""

#. Tag: para
#: install-methods.xml:1545
#, no-c-format
msgid "You don't have to configure DHCP in a special way because you'll pass the full path of the file to be loaded to CFE."
msgstr ""

#. Tag: title
#: install-methods.xml:1650
#, no-c-format
msgid "Automatic Installation"
msgstr ""

#. Tag: para
#: install-methods.xml:1651
#, no-c-format
msgid "For installing on multiple computers it's possible to do fully automatic installations. Debian packages intended for this include <classname>fai</classname> (which uses an install server), <classname>replicator</classname>, <classname>systemimager</classname>, <classname>autoinstall</classname>, and the Debian Installer itself."
msgstr ""

#. Tag: title
#: install-methods.xml:1664
#, no-c-format
msgid "Automatic Installation Using the Debian Installer"
msgstr ""

#. Tag: para
#: install-methods.xml:1665
#, no-c-format
msgid "The Debian Installer supports automating installs via preconfiguration files. A preconfiguration file can be loaded from the network or from removable media, and used to fill in answers to questions asked during the installation process."
msgstr ""

#. Tag: para
#: install-methods.xml:1672
#, no-c-format
msgid "Full documentation on preseeding including a working example that you can edit is in <xref linkend=\"appendix-preseed\"/>."
msgstr ""

