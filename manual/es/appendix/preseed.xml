<?xml version="1.0" encoding="ISO-8859-1"?>
<!-- original version: 32512 untranslated -->
<!-- traducido por jfs, 30 dic 2005 -->

<!--
Tened cuidado con el formato de este fichero dado que se parsea
para generar el fichero de preconfiguración.

En ese fichero se incluye todo el texto dentro de marcas
<informalexample> que tienen el atributo 'role="example"'. 
Salvo si hay un atributo 'condition' que hace que no aplique a 
la versión específica o un atributo 'arch' que hace que no aplique
a una arquitectura específica.

Actualmente sólo se genera una variante del fichero de ejemplo (para i386).
-->

<appendix id="appendix-preseed" condition="etch">
<title>Instalar automáticamente utilizando preconfiguración</title>

<para>

Este apéndice explica los detalles de preconfigurar respuesas a preguntas
en &d-i;  para poder así automatizar una instalación.

</para><para>

Los fragmentos de configuración que se utilizan en este apéndice están también
disponibles como un fichero de preconfiguración de ejemplo en
&urlset-example-preseed;.

</para>

 <sect1 id="preseed-intro">
 <title>Introducción</title>
<para>

La preconfiguración ofrece un mecanismo para responder a preguntas sin tener
que introducir manualmente las respuestas mientras se ejecuta la instalación.
Esto hace posible que se automatizen la mayoría de las instalaciones e incluso
ofrece funcionalidades que no están disponibles durante una instalación normal.

</para><para>

Es posible responder a las preguntas que se realizan durante la primera
fase de la instalación (antes del reinicio al nuevo sistema) y también
a preguntas en la segunda fase utilizando la preconfiguración.

</para>

  <sect2 id="preseed-methods">
  <title>Métodos de preconfiguración</title>
<para>

Se pueden utilizar tres métodos de preconfiguración:
<firstterm>initrd</firstterm>, <firstterm>file</firstterm> (fichero, n. del t.)
y <firstterm>network</firstterm> (red, n. del t.). La preconfiguración a través
de initrd funciona en cualquier método de instalación y permite preconfigurar
más cosas, pero es la que más preparación requiere. Los metodos de
preconfiguración con fichero o vía red pueden utilizarse en distintos métodos
de instalación. No se pueden preconfigurar las primeras preguntas de la
instalación tanto en el caso de la precofinguración a través fichero o vía red
dado que sólo se cargan una vez se han preguntado.

</para><para>

La siguiente tabla muestra los métodos de preconfiguración que pueden utilizarse
con los distintos métodos de instalación.

<informaltable>
<tgroup cols="4">
<thead>
<row>
  <entry>Método de instalación</entry><entry>initrd</entry>
  <entry>file</entry><entry>network</entry>
</row>
</thead>

<tbody>
<row>
  <entry>CD/DVD</entry>
  <entry>sí</entry>
  <entry>sí</entry>
  <entry>no</entry>
</row><row>
  <entry>netboot</entry>
  <entry>sí</entry>
  <entry>no</entry>
  <entry>sí</entry>
</row><row>
  <entry>hd-media <phrase condition="bootable-usb">(incluyendo memorias usb)</phrase></entry>
  <entry>sí</entry>
  <entry>sí</entry>
  <entry>no</entry>
</row><row condition="supports-floppy-boot">
  <entry>basado en disquete (controladores de cd)</entry>
  <entry>sí</entry>
  <entry>sí</entry>
  <entry>no</entry>
</row><row condition="supports-floppy-boot">
  <entry>basado en disquete (controladores de red)</entry>
  <entry>sí</entry>
  <entry>no</entry>
  <entry>sí</entry>
</row><row arch="s390">
  <entry>genérico/cinta</entry>
  <entry>sí</entry>
  <entry>no</entry>
  <entry>sí</entry>
</row>
</tbody>

</tgroup></informaltable>

</para><para>

Una diferencia importante entre los métodos de preconfiguración es el punto en
el que se carga y procesa el fichero de preconfiguracio. Para la
preconfiguración a través del initrd ésto se produce justo al comienzo de la
instalación, antes de hacer siquiera la primera pregunta. Para la
preconfiguración con fichero ésto se hace después de que el CD o la imagen de
CD se haya cargado. Para la preconfiguración de red ésto se hace sólo después
de que se haya configurado la red.

</para><para>

En términos prácticos esto significa que en la preconfiguración por fichero y
vía red ya se habrá tenido que responder a las preguntas sobre idioma, país y
seleccio de teclado. Además, para la preconfiguración vía red, se habrán
respondido  todas las preguntas relacionadas con la configuración de red.
Algunas preguntas que sólo se muestra en prioridad media o baja (como el primer
intento de detección automática de hardware) también se habrán respondido en
este caso.

</para><para>

Obviamente, cualquier pregunta que se haya procesado antes de cargar el
fichero de preconfiguración no puede preconfigurarse.
Puede encontrar una forma para evitar que se omitan estas preguntas con
<xref linkend="preseed-bootparms"/>.

</para>
  </sect2>

  <sect2 id="preseed-limitations">
  <title>Limitaciones</title>
<para>

Aunque la mayoría de las preguntas que utiliza &d-i; pueden preconfigurarse
con este mecanismo hay algunas excepciones importantes. Tiene que (re)particionar
el disco completo o utilizar el espacio en disco libre disponible, no puede usar
particiones existentes. Tampoco puede aún utilizar la preconfiguración para 
configurar RAID ó LVM.

</para>
  </sect2>

<!-- Joeyh feels this is too technical, so leave it out for now
  <sect2 id="preseed-debconf">
  <title>Información básica de Debconf</title>
<para>

Preseeding makes use of the <classname>debconf</classname> framework. This
framework is the preferred mechanism used in Debian to interact with the user
when configuring packages and also forms the heart of &d-i;.
In the <classname>debconf</classname> framework questions or dialogs are
based on <firstterm>templates</firstterm>. There are different types of
templates for different types of questions. The actual questions are
<quote>generated</quote> from templates at runtime;  multiple questions can
use the same template.

</para><para>

The following types of templates are relevant for preseeding.

</para>

<itemizedlist>
<listitem><para>
  string: allows the user to type any value
</para></listitem>
<listitem><para>
  password: similar to string but the value typed is not displayed
</para></listitem>
<listitem><para>
  boolean: for yes/no or true/false type of questions
</para></listitem>
<listitem><para>
  select: allows the user to select one option from a list
</para></listitem>
<listitem><para>
  multiselect: allows the user to select zero, one or more options from a list
</para></listitem>
<listitem><para>
  note: used to display a message
</para></listitem>
</itemizedlist>

<para>

In &d-i; templates are stored in a readable file
<filename>/var/cache/debconf/templates.dat</filename>. This file contains all fixed
text and all translations. It can also contain a default value for the
template. The fixed text can include variables that will be replaced at
runtime.

</para><para>

Another readable file <filename>/var/cache/debconf/questions.dat</filename>
is used to store the values for variables and the answers given to questions.
A question always refers to the template used to ask it. For obvious
security reasons the values for templates of type <quote>password</quote>
are stored in a separate, non-readable file in the same directory.

</para>
  </sect2>
-->

  <sect2 id="preseed-hooks">
  <title>Ejecución de órdenes a medida durante la instalación</title>
<para>

Una opcio muy poderosa y flexible que ofrecen las herramientas de preconfiguración
es la capacidad de ejecutar órdenes o guiones en puntos específicos de la instalación.
Tiene más detalles en <xref linkend="preseed-shell"/>.

</para>

<itemizedlist>
<listitem><para>
  <userinput>preseed/early_command</userinput>: se procesa tan pronto como se haya
  cargado el fichero de preconfiguración.
</para></listitem>
<listitem><para>
  <userinput>preseed/late_command</userinput>: se procesa justo antes del reinicio
  del equipo al final de la primera fase de la instalación pero antes de que
  se desmonte el sistema de ficheros <filename>/target</filename>.
</para></listitem>
<listitem><para>
  <userinput>base-config/early_command</userinput>: se procesa en la segunda
  fase de la instalación cuando se arranca <command>base-config</command>
</para></listitem>
<listitem><para>
  <userinput>base-config/late_command</userinput>: se procesa al final de la ejecución
  de <command>base-config</command>, justo antes de mostrar el indicador de acceso al sistema.
</para></listitem>
</itemizedlist>

  </sect2>

  <sect2 id="preseed-seenflag">
  <title>Utilizar la preconfiguración para cambiar los valore por omisión</title>
<para>

Es posible utilizar la preconfiguración para cambiar las respuestas por omisión
a una pregunta, pero haciendo que esta pregunta se realice. Para hacer ésto
debe definirse la marca <firstterm>seen</firstterm> (visto, n. del t.) a
<quote>false</quote> una vez se ha fijado un valor para la plantilla.

</para>

<informalexample><screen>
d-i foo/bar string value
d-i foo/bar seen false
</screen></informalexample>

  </sect2>
 </sect1>

 <sect1 id="preseed-using">
 <title>Utilizar la preconfiguración</title>
<para>

Por supuesto, en primer lugar ha de crear primero el fichero de preconfiguracio
y ponerlo en la localización donde pretende utilizarlo. La creación del fichero
de preconfiguración se describe más adelante en este apéndice. Colocar el
fichero en la ubicación correcta es algo relativamente sencillo para la
preconfiguración vía red o si quiere leer el fichero de un disquete o una
memoria usb. Si desea incluir el fichero en un CD o DVD tendrá que rehacer la
imagen ISO. La inclusión del fichero de preconfiguración en el initrd queda
fuera del alcance de este documento, consulte la documentación de
desarrolladores de &d-i; si está interesado.

</para><para>

Tiene un fichero de preconfiguración de ejemplo, que puede utilizar como base
para su propio fichero de preconfiguración, en &urlset-example-preseed;. Este
fichero está basado en fragmentos de configuración incluídos en este apéndice.

</para>

  <sect2 id="preseed-loading">
  <title>Cargar el fichero de preconfiguración</title>
<para>

Si está utilizando la preconfiguración por initrd tiene que asegurarse que
existe un fichero con el nombre de <filename>preseed.cfg</filename> en el
directorio raíz del initrd. El instalador buscará automáticamente este fichero
y lo cargará.

</para><para>

Para otros métodos de preconfiguración tiene que decirle al instalador qué
ficheros utilizar cuando se arranca. Ésto se hace dadno un valor al parámetro
de arranque del núcleo, bien manualmente en el arranque o bien editando el
fichero de configuración del cargador de arranque (e.g.
<filename>syslinux.cfg</filename>) y añadiendo el parámetro al final de la/s
línea/s <quote>append</quote> para el núcleo.

</para><para>

Si especifica un fichero de preconfiguración en la configuración del cargador
de arranque podrá cambiar la configuración para que no tenga que pulsar enter
en el arranque del instalador. En el caso de syslinux esto signfica que
tiene que poner el valor de <quote>timeout</quote> en
<filename>syslinux.cfg</filename> a uno.

</para><para>

Para asegurarse de que el instalador obtiene el fichero de preconfiguración
correcto puede especificar (opcionalmente) una marca identificativa para el
fichero. Esta marca es actualmente una suma MD5 y, si se especifica, debe
coincidir el valor que se obtenga del fichero de preconfiguración o el
instalador se negará a utilizarlo.

</para>

<informalexample><screen>
Párametros de arranque a especificar:
- si está arrancando de red:
  preseed/url=http://host/path/to/preseed.cfg
  preseed/url/checksum=5da499872becccfeda2c4872f9171c3d

- si está arrancando de un CD remasterizado:
  preseed/file=/cdrom/preseed.cfg
  preseed/file/checksum=5da499872becccfeda2c4872f9171c3d

- si está instalando de un medio USB (ponga el fichero de preconfiguración
  en el directorio principal de la memoria USB):
  preseed/file=/hd-media/preseed.cfg
  preseed/file/checksum=5da499872becccfeda2c4872f9171c3d
</screen></informalexample>

<para>

Cuando haga esto puede quere añadir el parámetro
<userinput>debconf/priority=critical</userinput> en el arranque. Esto impedirá
que se haga ninguna pregunta aunque la preconfiguración mostrada más abajo no
responda a alguna.

</para>
  </sect2>

  <sect2 id="preseed-bootparms">
  <title>Utilizar parámetros de arranque para complementar la preconfiguración</title>
<para>

Hay algunas partes del proceso de instalación que no pueden automatizarse con
algunos métodos de preconfiguración porque las preguntas se responden antes de
que se cargue el fichero de preconfiguración. Por ejemplo, será necesario
configurar primero la red si el fichero de preconfiguración se descarga de
ésta.  Una razón para utilizar la preconfiguración de initrd es que permite la
preconfiguración incluso en estas etapas iniciales del proceso de instalación.

</para><para>

La instalación puede automatizarse por completo aún cuando  el fichero de
preconfiguración no puede utilizarse para preconfigurara ya que se pueden dar
valores de preconfiguración al núcleo en la línea de órdenes. Sólo es necesario
dar parámetros del tipo <userinput>ruta/a/variable=valor</userinput> para
cualquiera de las variables de preconfiguración que se detallan en los
ejemplos.

</para>
<note><para>

El núcleo 2.4 acepta un máximo de ocho opciones en línea de órdenes y
ocho opciones de entorno (incluyendo las opciones que añade por omisio el
propio instalador). Si se excede esta cantidad los núcleos 2.4 descartarán las
opciones que lo sobrepasen y los núcleos 2.6 abortarán (con un
<quote>panic</quote>). Se pueden utilizar hasta treinta y dos opciones de línea
de órdenes y treinta y dos opciones de entorno en el caso de las versiones del
núcleo 2.6.9 y posteriores.

</para></note>
<para>

Para la mayoría de las instalaciones se pueden eliminar algunas de las opciones
del fichero de configuracio del cargado de arranque, como por ejemplo
<quote>vga=normal</quote> lo que permite añadir más opciones para la
preconfiguración.

</para>
<note><para>

No siempre es posible especificar valores con espacios para los parámetros
de arranque aunque se delimiten con comillas dobles.

</para></note>
  </sect2>
 </sect1>

 <sect1 condition="FIXME" id="preseed-creating">
 <title>Crear un fichero de preconfiguración</title>
<para>

El fichero de preconfiguración tiene el formato que utiliza la orden
<command>debconf-set-selections</command>.

</para>

<itemizedlist>
<listitem><para>
  Fichero formato
</para></listitem>
<listitem><para>
  Sólo se permite un espacio entre tipo de plantilla y valor.
</para></listitem>
<listitem><para>
  Relacionado con /var/lib/(c)debconf/templates.
</para></listitem>
<listitem><para>
  Tipos de plantillas y cómo darles valor.
</para></listitem>
<listitem><para>
  La mayoría de los valores tienen que estar en inglés o ser códigos.
</para></listitem>
<listitem><para>
  Utilizar un manual de instalación como base.
</para></listitem>
<listitem><para>
  Encontrar otros valores posibles.
</para></listitem>
</itemizedlist>

<para>

Para comprobar si el formato de su fichero de preconfiguración es válido
antes de hacer una instalación puede utilizar la orden
<command>debconf-set-selections -c <replaceable>preseed.cfg</replaceable></command>.

</para>
 </sect1>

 <sect1 id="preseed-stage1">
 <title>Preconfiguración de la primera etapa de instalación</title>
<para>

Los fragmentos de configuración que se utilizan en este apéndice también están
disponible como un ejemplo de fichero de preconfiguración en 
&urlset-example-preseed;.

</para><para>

Tenga en cuenta que este ejemplo está basado en una instalación para la
arquitectura Intel x86. Si está instalando en otra arquitectura no serán
relevantes algunos de los ejemplos (como la seleccio de teclado o la
instalación del cargador) y tendrá que reemplazarlos por los valores de debconf
más apropiados a su arquitectura.

</para>

  <sect2 id="preseed-l10n">
  <title>Localization</title>
<para>

Setting localization values will only work if you are using initrd preseeding.
With all other methods the preseed file will only be loaded after these
questions have been asked.

</para><para>

The locale can be used to specify both language and country.
To specify the locale as a boot parameter, use
<userinput>debian-installer/locale=<replaceable>en_US</replaceable></userinput>.

<informalexample role="example"><screen>
# Locale sets language and country.
d-i debian-installer/locale string en_US
</screen></informalexample>

</para><para>

Keyboard configuration consists of selecting a keyboard architecture and a
keymap. In most cases the correct keyboard architecture is selected by
default, so there's normally no need to preseed it. The keymap must
be valid for the selected  keyboard architecture.

<informalexample role="example"><screen>
# Keyboard selection.
#d-i console-tools/archs select at
d-i console-keymaps-at/keymap select us
# Example for a different keyboard architecture
#d-i console-keymaps-usb/keymap select mac-usb-us
</screen></informalexample>

</para><para>

To skip keyboard configuration preseed
<classname>console-tools/archs</classname> with
<userinput>skip-config</userinput>.
This will result in the kernel keymap remaining active.

</para>

<note><para>

The changes in the input layer for 2.6 kernels have made the keyboard
architecture virtually obsolete. For 2.6 kernels normally a <quote>PC</quote>
(<userinput>at</userinput>) keymap should be selected.

</para></note>
  </sect2>

  <sect2 id="preseed-network">
  <title>Network configuration</title>
<para>

Of course, preseeding the network configuration won't work if you're
loading your preseed file from the network. But it's great when you're
booting from CD or USB stick. If you are loading preseed files from
the network, you can pass network config parameters in using kernel
boot parameters.

</para>

<informalexample role="example"><screen>
# netcfg will choose an interface that has link if possible. This makes it
# skip displaying a list if there is more than one interface.
d-i netcfg/choose_interface select auto

# If you have a slow dhcp server and the installer times out waiting for
# it, this might be useful.
#d-i netcfg/dhcp_timeout string 60

# If you prefer to configure the network manually, here's how:
#d-i netcfg/disable_dhcp boolean true
#d-i netcfg/get_nameservers string 192.168.1.1
#d-i netcfg/get_ipaddress string 192.168.1.42
#d-i netcfg/get_netmask string 255.255.255.0
#d-i netcfg/get_gateway string 192.168.1.1
#d-i netcfg/confirm_static boolean true

# Any hostname and domain names assigned from dhcp take precedence over
# values set here. However, setting the values still prevents the questions
# from being shown, even if values come from dhcp.
d-i netcfg/get_hostname string unassigned-hostname
d-i netcfg/get_domain string unassigned-domain

# Disable that annoying WEP key dialog.
d-i netcfg/wireless_wep string
# The wacky dhcp hostname that some ISPs use as a password of sorts.
#d-i netcfg/dhcp_hostname string radish
</screen></informalexample>

  </sect2>

  <sect2 id="preseed-mirror">
  <title>Mirror settings</title>
<para>

Depending on the installation method you use, a mirror may used both to
download additional components of the installer, the base system and to
set up the <filename>/etc/apt/sources.list</filename> for the installed
system.

</para><para>

The parameter <classname>mirror/suite</classname> determines the suite for
the installed system.

</para><para>

The parameter <classname>mirror/udeb/suite</classname> determines the suite
for additional components for the installer. It is only useful to set this
if components are actually downloaded over the network and should match the
suite that was used to build the initrd for the installation method used for
the installation.
By default the value for <classname>mirror/udeb/suite</classname> is the same
as <classname>mirror/suite</classname>.

</para>

<informalexample role="example"><screen>
d-i mirror/country string enter information manually
d-i mirror/http/hostname string http.us.debian.org
d-i mirror/http/directory string /debian
d-i mirror/http/proxy string

# Suite to install.
#d-i mirror/suite string testing
# Suite to use for loading installer components (optional).
#d-i mirror/udeb/suite string testing
</screen></informalexample>

  </sect2>

  <sect2 id="preseed-partman">
  <title>Partitioning</title>
<para>

Using preseeding to partition the harddisk is very much limited to what is
supported by <classname>partman-auto</classname>. You can choose to either
partition existing free space on a disk or a whole disk. The layout of the
disk can be determined by using a predefined recipe, a custom recipe from
a recipe file or a recipe included in the preseed file. It is currently not
possible to partition multiple disks using preseeding nor to set up RAID or
LVM.

</para>

<warning><para>

The identification of disks is dependent on the order in which their drivers
are loaded. If there are multiple disks in the system, make very sure the
correct one will be selected before using preseeding.

</para></warning>

<informalexample role="example"><screen>
# If the system has free space you can choose to only partition that space.
#d-i partman-auto/init_automatically_partition \
#      select Use the largest continuous free space

# Alternatively, you can specify a disk to partition. The device name can
# be given in either devfs or traditional non-devfs format.
# For example, to use the first disk devfs knows of:
d-i partman-auto/disk string /dev/discs/disc0/disc

# You can choose from any of the predefined partitioning recipes:
d-i partman-auto/choose_recipe \
       select All files in one partition (recommended for new users)
#d-i partman-auto/choose_recipe \
#       select Separate /home partition
#d-i partman-auto/choose_recipe \
#       select Separate /home, /usr, /var, and /tmp partitions

# Or provide a recipe of your own...
# The recipe format is documented in the file devel/partman-auto-recipe.txt.
# If you have a way to get a recipe file into the d-i environment, you can
# just point at it.
#d-i partman-auto/expert_recipe_file string /hd-media/recipe

# If not, you can put an entire recipe the preseed file in one (logical)
# line. This example creates a small /boot partition, suitable swap, and
# uses the rest of the space for the root partition:
#d-i partman-auto/expert_recipe string                         \
#      boot-root ::                                            \
#              40 50 100 ext3                                  \
#                      $primary{ } $bootable{ }                \
#                      method{ format } format{ }              \
#                      use_filesystem{ } filesystem{ ext3 }    \
#                      mountpoint{ /boot }                     \
#              .                                               \
#              500 10000 1000000000 ext3                       \
#                      method{ format } format{ }              \
#                      use_filesystem{ } filesystem{ ext3 }    \
#                      mountpoint{ / }                         \
#              .                                               \
#              64 512 300% linux-swap                          \
#                      method{ swap } format{ }                \
#              .

# This makes partman automatically partition without confirmation.
d-i partman/confirm_write_new_label boolean true
d-i partman/choose_partition \
       select Finish partitioning and write changes to disk
d-i partman/confirm boolean true
</screen></informalexample>

  </sect2>

  <sect2 id="preseed-time">
  <title>Clock and time zone setup</title>

<informalexample role="example"><screen>
# Controls whether or not the hardware clock is set to UTC.
d-i clock-setup/utc boolean true

# You may set this to any valid setting for $TZ; see the contents of
# /usr/share/zoneinfo/ for valid values.
d-i time/zone string US/Eastern
</screen></informalexample>

  </sect2>

  <sect2 id="preseed-apt">
  <title>Apt setup</title>
<para>

Setup of the <filename>/etc/apt/sources.list</filename> and basic configuration
options is fully automated based on your installation method and answers to
earlier questions. Only the two variables below are relevant for preseeding.

</para>

<informalexample role="example"><screen>
# You can choose to install non-free and contrib software.
#d-i apt-setup/non-free boolean true
#d-i apt-setup/contrib boolean true
</screen></informalexample>

  </sect2>

  <sect2 id="preseed-account">
  <title>Account setup</title>
<para>

The password for the root account and name and password for a first regular
user's account can be preseeded. For the passwords you can use either clear
text values or MD5 <emphasis>hashes</emphasis>.

</para>
<warning><para>

Be aware that preseeding passwords is not completely secure as everyone
with access to the preseed file will have the knowledge of these passwords.
Using MD5 hashes is considered slightly better in terms of security but it
might also give a false sense of security as access to a MD5 hash allows
for brute force attacks.

</para></warning>

<informalexample role="example"><screen>
# Root password, either in clear text
#passwd passwd/root-password password r00tme
#passwd passwd/root-password-again password r00tme
# or encrypted using an MD5 hash.
#passwd passwd/root-password-crypted password [MD5 hash]

# Skip creation of a normal user account.
#passwd passwd/make-user boolean false

# Alternatively, create a normal user account.
#passwd passwd/user-fullname string Debian User
#passwd passwd/username string debian
# Normal user's password, either in clear text
#passwd passwd/user-password password insecure
#passwd passwd/user-password-again password insecure
# or encrypted using an MD5 hash.
#passwd passwd/user-password-crypted password [MD5 hash]
</screen></informalexample>

<para>

The <classname>passwd/root-password-crypted</classname> and
<classname>passwd/user-password-crypted</classname> variables can also be
preseeded with <quote>!</quote> as their value. In that case, the corresponding
account is disabled. This may be convenient for the root account, provided
of course that an alternate method is setup to allow administrative
activities or root login (for instance by using SSH key authentication or
sudo).

</para><para>

An MD5 hash for a password can be generated using the following command.

<informalexample><screen>
$ echo "r00tme" | mkpasswd -s -H MD5
</screen></informalexample>

</para>
  </sect2>

  <sect2 id="preseed-bootloader">
  <title>Boot loader installation</title>

<informalexample role="example"><screen>
# Grub is the default boot loader (for x86). If you want lilo installed
# instead, uncomment this:
#d-i grub-installer/skip boolean true

# This is fairly safe to set, it makes grub install automatically to the MBR
# if no other operating system is detected on the machine.
d-i grub-installer/only_debian boolean true

# This one makes grub-installer install to the MBR if if finds some other OS
# too, which is less safe as it might not be able to boot that other OS.
d-i grub-installer/with_other_os boolean true

# Alternatively, if you want to install to a location other than the mbr,
# uncomment and edit these lines:
#d-i grub-installer/bootdev  string (hd0,0)
#d-i grub-installer/only_debian boolean false
#d-i grub-installer/with_other_os boolean false
</screen></informalexample>

  </sect2>

  <sect2 id="preseed-finish">
  <title>Finishing up the first stage install</title>

<informalexample role="example"><screen>
# Avoid that last message about the install being complete.
d-i prebaseconfig/reboot_in_progress note

# This will prevent the installer from ejecting the CD during the reboot,
# which is useful in some situations.
#d-i cdrom-detect/eject boolean false
</screen></informalexample>

  </sect2>
 </sect1>

 <sect1 id="preseed-stage2">
 <title>Preseeding the second stage of the installation</title>

  <sect2 id="preseed-baseconfig">
  <title>Base config</title>

<informalexample role="example"><screen>
# Avoid the introductory message.
base-config base-config/intro note

# Avoid the final message.
base-config base-config/login note

# If you installed a display manager, but don't want to start it immediately
# after base-config finishes.
#base-config base-config/start-display-manager boolean false

# Some versions of the installer can report back on what you've installed.
# The default is not to report back, but sending reports helps the project
# determine what software is most popular and include it on CDs.
#popularity-contest popularity-contest/participate boolean false
</screen></informalexample>

  </sect2>

  <sect2 id="preseed-tasksel">
  <title>Package selection</title>
<para>

You can choose to install any combination of tasks that are available.
Available tasks as of this writing include:

</para>

<itemizedlist>
<listitem><para>
  <userinput>Standard system</userinput>
</para></listitem>
<listitem><para>
  <userinput>Desktop environment</userinput>
</para></listitem>
<listitem><para>
  <userinput>Web server</userinput>
</para></listitem>
<listitem><para>
  <userinput>Print server</userinput>
</para></listitem>
<listitem><para>
  <userinput>DNS server</userinput>
</para></listitem>
<listitem><para>
  <userinput>File server</userinput>
</para></listitem>
<listitem><para>
  <userinput>Mail server</userinput>
</para></listitem>
<listitem><para>
  <userinput>SQL database</userinput>
</para></listitem>
<listitem><para>
  <userinput>Laptop</userinput>
</para></listitem>
<listitem><para>
  <userinput>manual package selection</userinput>
</para></listitem>
</itemizedlist>

<para>

The last of these will run aptitude. You can also choose to install no tasks,
and force the installation of a set of packages in some other way. We recommend
always including the <userinput>Standard system</userinput> task.

</para>

<informalexample role="example"><screen>
tasksel tasksel/first multiselect Standard system, Desktop environment
#tasksel tasksel/first multiselect Standard system, Web server
</screen></informalexample>

  </sect2>

  <sect2 id="preseed-mailer">
  <title>Mailer configuration</title>
<para>

During a normal install, exim asks only a few questions. Here's how to
avoid even those. More complicated preseeding is possible.

</para>

<informalexample role="example"><screen>
exim4-config exim4/dc_eximconfig_configtype \
       select no configuration at this time
exim4-config exim4/no_config boolean true
exim4-config exim4/no_config boolean true
exim4-config exim4/dc_postmaster string
</screen></informalexample>

  </sect2>

  <sect2 id="preseed-X">
  <title>X configuration</title>
<para>

Preseeding Debian's X config is possible, but you probably need to know
some details about the video hardware of the machine, since Debian's X
configurator does not do fully automatic configuration of everything.

</para>

<informalexample role="example"><screen>
# X can detect the right driver for some cards, but if you're preseeding,
# you override whatever it chooses. Still, vesa will work most places.
#xserver-xfree86 xserver-xfree86/config/device/driver select vesa

# A caveat with mouse autodetection is that if it fails, X will retry it
# over and over. So if it's preseeded to be done, there is a possibility of
# an infinite loop if the mouse is not autodetected.
#xserver-xfree86 xserver-xfree86/autodetect_mouse boolean true

# Monitor autodetection is recommended.
xserver-xfree86 xserver-xfree86/autodetect_monitor boolean true
# Uncomment if you have an LCD display.
#xserver-xfree86 xserver-xfree86/config/monitor/lcd boolean true
# X has three configuration paths for the monitor. Here's how to preseed
# the "medium" path, which is always available. The "simple" path may not
# be available, and the "advanced" path asks too many questions.
xserver-xfree86 xserver-xfree86/config/monitor/selection-method \
       select medium
xserver-xfree86 xserver-xfree86/config/monitor/mode-list \
       select 1024x768 @ 60 Hz
</screen></informalexample>

  </sect2>

  <sect2 id="preseed-other">
  <title>Preseeding other packages</title>

<informalexample role="example"><screen>
# Depending on what software you choose to install, or if things go wrong
# during the installation process, it's possible that other questions may
# be asked. You can preseed those too, of course. To get a list of every
# possible question that could be asked during an install, do an
# installation, and then run these commands:
#   debconf-get-selections --installer > file
#   debconf-get-selections >> file
</screen></informalexample>

  </sect2>
 </sect1>

 <sect1 id="preseed-advanced">
 <title>Advanced options</title>

  <sect2 id="preseed-shell">
  <title>Shell commands</title>

<informalexample role="example"><screen>
# d-i preseeding is inherently not secure. Nothing in the installer checks
# for attempts at buffer overflows or other exploits of the values of a
# preseed file like this one. Only use preseed files from trusted
# locations! To drive that home, and because it's generally useful, here's
# a way to run any shell command you'd like inside the installer,
# automatically.

# This first command is run as early as possible, just after
# preseeding is read.
#d-i preseed/early_command string anna-install some-udeb

# This command is run just before the install finishes, but when there is
# still a usable /target directory.
#d-i preseed/late_command string echo foo > /target/etc/bar

# This command is run just as base-config is starting up.
#base-config base-config/early_command string echo hi mom

# This command is run after base-config is done, just before the login:
# prompt. This is a good way to install a set of packages you want, or to
# tweak the configuration of the system.
#base-config base-config/late_command \
#      string apt-get install zsh; chsh -s /bin/zsh
</screen></informalexample>

  </sect2>

  <sect2 id="preseed-chainload">
  <title>Chainloading preseed files</title>
<para>

It is possible to include other preseed files from a preseed file. Any
settings in those files will override pre-existing settings from files
loaded earlier. This makes it possible to put, for example, general
networking settings for your location in one file and more specific
settings for certain configurations in other files.

</para>

<informalexample><screen>
# More that one file can be listed, separated by spaces; all will be
# loaded. The included files can have preseed/include directives of their
# own as well. Note that if the filenames are relative, they are taken from
# the same directory as the preseed file that includes them.
#d-i preseed/include string x.cfg

# The installer can optionally verify checksums of preseed files before
# using them. Currently only md5sums are supported, list the md5sums
# in the same order as the list of files to include.
#d-i preseed/include/checksum string 5da499872becccfeda2c4872f9171c3d

# More flexibly, this runs a shell command and if it outputs the names of
# preseed files, includes those files.
#d-i preseed/include_command \
#      string echo if [ "`hostname`" = bob ]; then echo bob.cfg; fi
</screen></informalexample>

  </sect2>
 </sect1>
</appendix>
