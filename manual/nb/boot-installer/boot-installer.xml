<!-- Start of file boot-installer/boot-installer.xml -->
<!-- $Id: boot-installer.xml 49985 2007-11-01 18:23:53Z fjp $ -->

<chapter id="boot-installer"
><title
>Booting the Installation System</title>

<!-- Include only archs that are documented to avoid build-errors -->
<!-- The arch="..." condition can be deleted when al archs are present -->
 <sect1 arch="alpha;arm;x86;ia64;m68k;mips;mipsel;s390;powerpc;sparc">
 <title
>Booting the Installer on &arch-title;</title>

<!-- This info is so architecture dependent, that I have turned the   -->
<!-- structure inside out for this chapter. Each arch has a document. -->
<!-- Note: arch hppa is currently missing -->

<warning arch="x86;powerpc"
><para
>If you have any other operating systems on your system that you wish to keep (dual boot setup), you should make sure that they have been properly shut down <emphasis
>before</emphasis
> you boot the installer. Installing an operating system while another operating system is in hibernation (has been suspended to disk) could result in loss of, or damage to the state of the suspended operating system which could cause problems when it is rebooted. </para
></warning>
<note condition="gtk"
><para
>For information on how to boot the graphical installer, see <xref linkend="graphical"/>. </para
></note>


<!-- Start of file boot-installer/alpha.xml -->
<!-- $Id: alpha.xml 43789 2007-01-03 09:27:39Z vorlon $ -->

 <sect2 arch="alpha" id="alpha-firmware">
 <title
>Alpha Console Firmware</title>
<para
>Console firmware is stored in a flash ROM and started when an Alpha system is powered up or reset. There are two different console specifications used on Alpha systems, and hence two classes of console firmware available: </para>

<itemizedlist>
<listitem
><para
><emphasis
>SRM console</emphasis
>, based on the Alpha Console Subsystem specification, which provides an operating environment for OpenVMS, Tru64 UNIX, and Linux operating systems. </para
></listitem>
<listitem
><para
><emphasis
>ARC, AlphaBIOS, or ARCSBIOS console</emphasis
>, based on the Advanced RISC Computing (ARC) specification, which provides an operating environment for Windows NT. </para
></listitem>
</itemizedlist>

<para
>From the user's perspective, the most important difference between SRM and ARC is that the choice of console constrains the possible disk-partitioning scheme for the hard disk which you wish to boot off of. </para
><para
>ARC requires that you use an MS-DOS partition table (as created by <command
>cfdisk</command
>) for the boot disk. Therefore MS-DOS partition tables are the <quote
>native</quote
> partition format when booting from ARC. In fact, since AlphaBIOS contains a disk partitioning utility, you may prefer to partition your disks from the firmware menus before installing Linux. </para
><para
>Conversely, SRM is <emphasis
>incompatible</emphasis
><footnote
> <para
> Specifically, the bootsector format required by the Console Subsystem Specification conflicts with the placement of the DOS partition table. </para
> </footnote
> with MS-DOS partition tables. Since Tru64 Unix uses the BSD disklabel format, this is the <quote
>native</quote
> partition format for SRM installations. </para
><para
>GNU/Linux is the only operating system on Alpha that can be booted from both console types, but &debian; &release; only supports booting on SRM-based systems. If you have an Alpha for which no version of SRM is available, if you will be dual-booting the system with Windows NT, or if your boot device requires ARC console support for BIOS initialization, you will not be able to use the &debian; &release; installer. You can still run &debian; &release; on such systems by using other install media; for instance, you can install Debian woody with MILO and upgrade. </para
><para
>Because <command
>MILO</command
> is not available for any of the Alpha systems currently in production (as of February 2000), and because it is no longer necessary to buy an OpenVMS or Tru64 Unix license to have SRM firmware on your older Alpha, it is recommended that you use SRM when possible. </para
><para
>The following table summarizes available and supported system type/console combinations (see <xref linkend="alpha-cpus"/> for the system type names). The word <quote
>ARC</quote
> below denotes any of the ARC-compliant consoles. </para
><para>

<informaltable
><tgroup cols="2">
<thead>
<row>
  <entry
>System Type</entry>
  <entry
>Console Type Supported</entry>
</row>
</thead>

<tbody>
<row>
  <entry
>alcor</entry>
  <entry
>ARC or SRM</entry>
</row
><row>
  <entry
>avanti</entry>
  <entry
>ARC or SRM</entry>
</row
><row>
  <entry
>book1</entry>
  <entry
>SRM only</entry>
</row
><row>
  <entry
>cabriolet</entry>
  <entry
>ARC or SRM</entry>
</row
><row>
  <entry
>dp264</entry>
  <entry
>SRM only</entry>
</row
><row>
  <entry
>eb164</entry>
  <entry
>ARC or SRM</entry>
</row
><row>
  <entry
>eb64p</entry>
  <entry
>ARC or SRM</entry>
</row
><row>
  <entry
>eb66</entry>
  <entry
>ARC or SRM</entry>
</row
><row>
  <entry
>eb66p</entry>
  <entry
>ARC or SRM</entry>
</row
><row>
  <entry
>jensen</entry>
  <entry
>SRM only</entry>
</row
><row>
  <entry
>lx164</entry>
  <entry
>ARC or SRM</entry>
</row
><row>
  <entry
>miata</entry>
  <entry
>ARC or SRM</entry>
</row
><row>
  <entry
>mikasa</entry>
  <entry
>ARC or SRM</entry>
</row
><row>
  <entry
>mikasa-p</entry>
  <entry
>SRM only</entry>
</row
><row>
  <entry
>nautilus</entry>
  <entry
>ARC (see motherboard manual) or SRM</entry>
</row
><row>
  <entry
>noname</entry>
  <entry
>ARC or SRM</entry>
</row
><row>
  <entry
>noritake</entry>
  <entry
>SRM only</entry>
</row
><row>
  <entry
>noritake-p</entry>
  <entry
>SRM only</entry>
</row
><row>
  <entry
>pc164</entry>
  <entry
>ARC or SRM</entry>
</row
><row>
  <entry
>rawhide</entry>
  <entry
>SRM only</entry>
</row
><row>
  <entry
>ruffian</entry>
  <entry
>ARC only</entry>
</row
><row>
  <entry
>sable</entry>
  <entry
>SRM only</entry>
</row
><row>
  <entry
>sable-g</entry>
  <entry
>SRM only</entry>
</row
><row>
  <entry
>sx164</entry>
  <entry
>ARC or SRM</entry>
</row
><row>
  <entry
>takara</entry>
  <entry
>ARC or SRM</entry>
</row
><row>
  <entry
>xl</entry>
  <entry
>ARC only</entry>
</row
><row>
  <entry
>xlt</entry>
  <entry
>ARC only</entry>
</row>

</tbody>
</tgroup>
</informaltable>

</para
><para
>Generally, none of these consoles can boot Linux directly, so the assistance of an intermediary bootloader is required. For the SRM console, <command
>aboot</command
>, a small, platform-independent bootloader, is used. See the (unfortunately outdated) <ulink url="&url-srm-howto;"
>SRM HOWTO</ulink
> for more information on <command
>aboot</command
>. </para
><para condition="FIXME"
>The following paragraphs are from the woody install manual, and are included here for reference; they may be useful to someone at a later date when Debian supports MILO-based installs again. </para
><para condition="FIXME"
>Generally, none of these consoles can boot Linux directly, so the assistance of an intermediary bootloader is required. There are two mainstream Linux loaders: <command
>MILO</command
> and <command
>aboot</command
>. </para
><para condition="FIXME"
><command
>MILO</command
> is itself a console, which replaces ARC or SRM in memory. <command
>MILO</command
> can be booted from both ARC and SRM and is the only way to bootstrap Linux from the ARC console. <command
>MILO</command
> is platform-specific (a different <command
>MILO</command
> is needed for each system type) and exist only for those systems, for which ARC support is shown in the table above. See also the (unfortunately outdated) <ulink url="&url-milo-howto;"
>MILO HOWTO</ulink
>. </para
><para condition="FIXME"
><command
>aboot</command
> is a small, platform-independent bootloader, which runs from SRM only. See the (also unfortunately outdated) <ulink url="&url-srm-howto;"
>SRM HOWTO</ulink
> for more information on <command
>aboot</command
>. </para
><para condition="FIXME"
>Thus, three scenarios are generally possible, depending on the system's console firmware and whether or not <command
>MILO</command
> is available: <informalexample
><screen
>
SRM -&gt; aboot
SRM -&gt; MILO
ARC -&gt; MILO
</screen
></informalexample
> Because <command
>MILO</command
> is not available for any of the Alpha systems currently in production (as of February 2000), and because it is no longer necessary to buy an OpenVMS or Tru64 Unix license to have SRM firmware on your older Alpha, it is recommended that you use SRM and <command
>aboot</command
> on new installations of GNU/Linux, unless you wish to dual-boot with Windows NT. </para
><para
>The majority of AlphaServers and all current server and workstation products contain both SRM and AlphaBIOS in their firmware. For <quote
>half-flash</quote
> machines such as the various evaluation boards, it is possible to switch from one version to another by reflashing the firmware. Also, once SRM is installed, it is possible to run ARC/AlphaBIOS from a floppy disk (using the <command
>arc</command
> command). For the reasons mentioned above, we recommend switching to SRM before installing &debian;. </para
><para
>As on other architectures, you should install the newest available revision of the firmware<footnote
> <para
> Except on Jensen, where Linux is not supported on firmware versions newer than 1.7 &mdash; see <ulink url="&url-jensen-howto;"
></ulink
> for more information. </para
> </footnote
> before installing &debian;. For Alpha, firmware updates can be obtained from <ulink url="&url-alpha-firmware;"
>Alpha Firmware Updates</ulink
>. </para>
 </sect2>


  <sect2 arch="alpha"
><title
>Booting with TFTP</title>
<para
>In SRM, Ethernet interfaces are named with the <userinput
>ewa</userinput
> prefix, and will be listed in the output of the <userinput
>show dev</userinput
> command, like this (edited slightly): <informalexample
><screen
>
&gt;&gt;&gt; show dev
ewa0.0.0.9.0               EWA0              08-00-2B-86-98-65
ewb0.0.0.11.0              EWB0              08-00-2B-86-98-54
ewc0.0.0.2002.0            EWC0              00-06-2B-01-32-B0
</screen
></informalexample
> You first need to set the boot protocol: <informalexample
><screen
>
&gt;&gt;&gt; set ewa0_protocols bootp
</screen
></informalexample
> Then check the medium type is correct: <informalexample
><screen
>
&gt;&gt;&gt; set ewa0_mode <replaceable>mode</replaceable>
</screen
></informalexample
> You can get a listing of valid modes with <userinput
>&gt;&gt;&gt;set ewa0_mode</userinput
>. </para
><para
>Then, to boot from the first Ethernet interface, you would type: <informalexample
><screen
>
&gt;&gt;&gt; boot ewa0 -flags ""
</screen
></informalexample
> This will boot using the default kernel parameters as included in the netboot image. </para
><para
>If you wish to use a serial console, you <emphasis
>must</emphasis
> pass the <userinput
>console=</userinput
> parameter to the kernel. This can be done using the <userinput
>-flags</userinput
> argument to the SRM <userinput
>boot</userinput
> command. The serial ports are named the same as their corresponding files in <userinput
>/dev</userinput
>. Also, when specifying additional kernel parameters, you must repeat certain default options that are needed by the &d-i; images. For example, to boot from <userinput
>ewa0</userinput
> and use a console on the first serial port, you would type: <informalexample
><screen
>&gt;&gt;&gt; boot ewa0 -flags &quot;root=/dev/ram ramdisk_size=16384 console=ttyS0&quot;
</screen
></informalexample>

</para>
  </sect2>

  <sect2 arch="alpha"
><title
>Booting from CD-ROM with the SRM Console</title>
<para
>The &debian; install CDs include several preconfigured boot options for VGA and serial consoles. Type <informalexample
><screen
>
&gt;&gt;&gt; boot xxxx -flags 0
</screen
></informalexample
> to boot using VGA console, where <replaceable
>xxxx</replaceable
> is your CD-ROM drive in SRM notation. To use serial console on the first serial device, type <informalexample
><screen
>
&gt;&gt;&gt; boot xxxx -flags 1
</screen
></informalexample
> and for console on the second serial port, type <informalexample
><screen
>&gt;&gt;&gt; boot xxxx -flags 2
</screen
></informalexample>

</para>
  </sect2>

  <sect2 arch="alpha" condition="FIXME">
  <title
>Booting from CD-ROM with the ARC or AlphaBIOS Console</title>
<para
>To boot a CD-ROM from the ARC console, find your sub-architecture code name (see <xref linkend="alpha-cpus"/>), then enter <filename
>\milo\linload.exe</filename
> as the boot loader and <filename
>\milo\<replaceable
>subarch</replaceable
></filename
> (where <replaceable
>subarch</replaceable
> is the proper subarchitecture name) as the OS Path in the `OS Selection Setup' menu. Ruffians make an exception: You need to use <filename
>\milo\ldmilo.exe</filename
> as boot loader. </para>
  </sect2>


  <sect2 arch="alpha" condition="supports-floppy-boot">
  <title
>Booting from Floppies with the SRM Console</title>
<para
>At the SRM prompt (<prompt
>&gt;&gt;&gt;</prompt
>), issue the following command: <informalexample
><screen
>
&gt;&gt;&gt; boot dva0 -flags 0
</screen
></informalexample
> possibly replacing <filename
>dva0</filename
> with the actual device name. Usually, <filename
>dva0</filename
> is the floppy; type <informalexample
><screen
>
&gt;&gt;&gt; show dev
</screen
></informalexample
> to see the list of devices (e.g., if you want to boot from a CD). Note that if you are booting via MILO, <command
>-flags</command
> argument is ignored, so you can just type <command
>boot dva0</command
>. If everything works OK, you will eventually see the Linux kernel boot. </para
><para
>If you want to specify kernel parameters when booting via <command
>aboot</command
>, use the following command: <informalexample
><screen
>
&gt;&gt;&gt; boot dva0 -file linux.bin.gz -flags "root=/dev/fd0 load_ramdisk=1 arguments"
</screen
></informalexample
> (typed on one line), substituting, if necessary, the actual SRM boot device name for <filename
>dva0</filename
>, the Linux boot device name for <filename
>fd0</filename
>, and the desired kernel parameters for <filename
>arguments</filename
>. </para
><para
>If you want to specify kernel parameters when booting via <command
>MILO</command
>, you will have to interrupt bootstrap once you get into MILO. See <xref linkend="booting-from-milo"/>. </para>
  </sect2>


  <sect2 arch="alpha" condition="supports-floppy-boot">
  <title
>Booting from Floppies with the ARC or AlphaBIOS Console</title>

<para
>In the OS Selection menu, set <command
>linload.exe</command
> as the boot loader, and <command
>milo</command
> as the OS Path. Bootstrap using the newly created entry. </para>
  </sect2>

 <sect2 arch="alpha" condition="FIXME" id="booting-from-milo"
><title
>Booting with MILO</title>
<para
>MILO contained on the bootstrap media is configured to proceed straight to Linux automatically. Should you wish to intervene, all you need is to press space during MILO countdown. </para
><para
>If you want to specify all the bits explicitly (for example, to supply additional parameters), you can use a command like this: <informalexample
><screen
>
MILO> boot fd0:linux.bin.gz root=/dev/fd0 load_ramdisk=1 <!-- arguments -->
</screen
></informalexample
> If you are booting from something other than a floppy, substitute <filename
>fd0</filename
> in the above example with the appropriate device name in Linux notation. The <command
>help</command
> command would give you a brief MILO command reference. </para>
 </sect2>
<!--   End of file boot-installer/alpha.xml -->

<!-- Start of file boot-installer/arm.xml -->
<!-- $Id: arm.xml 36639 2006-04-23 06:26:34Z jfs $ -->

  <sect2 arch="arm" id="boot-tftp"
><title
>Booting from TFTP</title>


<!-- Start of file boot-installer/intro-net.xml -->
<!-- $Id: intro-net.xml 11648 2004-03-22 00:37:46Z joeyh $ -->

<para
>Booting from the network requires that you have a network connection and a TFTP network boot server (DHCP, RARP, or BOOTP). </para
><para arch="hppa"
>Older systems such as the 715 might require the use of an RBOOT server instead of a BOOTP server. </para
><para
>The installation method to support network booting is described in <xref linkend="install-tftp"/>. </para>
<!--   End of file boot-installer/intro-net.xml -->

   <sect3 arch="arm"
><title
>Booting from TFTP on Netwinder</title>
<para
>Netwinders have two network interfaces: A 10Mbps NE2000-compatible card (which is generally referred to as <literal
>eth0</literal
>) and a 100Mbps Tulip card. There may be problems loading the image via TFTP using the 100Mbps card so it is recommended that you use the 10Mbps interface (the one labeled with <literal
>10 Base-T</literal
>). </para>
<note
><para
>You need NeTTrom 2.2.1 or later to boot the installation system, and version 2.3.3 is recommended. Unfortunately, firmware files are currently not available for download because of license issues. If this situation changes, you may find new images at <ulink url="http//www.netwinder.org/"
></ulink
>. </para
></note>
<para
>When you boot your Netwinder you have to interrupt the boot process during the countdown. This allows you to set a number of firmware settings needed in order to boot the installer. First of all, start by loading the default settings: <informalexample
><screen
>
    NeTTrom command-&gt; load-defaults
</screen
></informalexample
> Furthermore, you must configure the network, either with a static address: <informalexample
><screen
>
    NeTTrom command-&gt; setenv netconfig_eth0 flash
    NeTTrom command-&gt; setenv eth0_ip 192.168.0.10/24
</screen
></informalexample
> where 24 is the number of set bits in the netmask, or a dynamic address: <informalexample
><screen
>
    NeTTrom command-&gt; setenv netconfig_eth0 dhcp
</screen
></informalexample
> You may also need to configure the <userinput
>route1</userinput
> settings if the TFTP server is not on the local subnet. Following these settings, you have to specify the TFTP server and the location of the image. You can then store your settings to flash. <informalexample
><screen
>
    NeTTrom command-&gt; setenv kerntftpserver 192.168.0.1
    NeTTrom command-&gt; setenv kerntftpfile boot.img
    NeTTrom command-&gt; save-all
</screen
></informalexample
> Now you have to tell the firmware that the TFTP image should be booted: <informalexample
><screen
>
    NeTTrom command-&gt; setenv kernconfig tftp
    NeTTrom command-&gt; setenv rootdev /dev/ram
</screen
></informalexample
> If you use a serial console to install your Netwinder, you need to add the following setting: <informalexample
><screen
>
    NeTTrom command-&gt; setenv cmdappend root=/dev/ram console=ttyS0,115200
</screen
></informalexample
> Alternatively, for installations using a keyboard and monitor you have to set: <informalexample
><screen
>
    NeTTrom command-&gt; setenv cmdappend root=/dev/ram
</screen
></informalexample
> You can use the <command
>printenv</command
> command to review your environment settings. After you have verified that the settings are correct, you can load the image: <informalexample
><screen
>
    NeTTrom command-&gt; boot
</screen
></informalexample
> In case you run into any problems, a <ulink url="http://www.netwinder.org/howto/Firmware-HOWTO.html"
>detailed HOWTO</ulink
> is available. </para>
   </sect3>

   <sect3 arch="arm"
><title
>Booting from TFTP on CATS</title>
<para
>On CATS machines, use <command
>boot de0:</command
> or similar at the Cyclone prompt. </para>
   </sect3>
  </sect2>


  <sect2 arch="arm"
><title
>Booting from CD-ROM</title>


<!-- Start of file boot-installer/intro-cd.xml -->
<!-- $Id: intro-cd.xml 39614 2006-08-07 15:50:11Z fjp $ -->

<para
>The easiest route for most people will be to use a set of Debian CDs. If you have a CD set, and if your machine supports booting directly off the CD, great! Simply <phrase arch="x86"
> configure your system for booting off a CD as described in <xref linkend="boot-dev-select"/>, </phrase
> insert your CD, reboot, and proceed to the next chapter. </para
><para
>Note that certain CD drives may require special drivers, and thus be inaccessible in the early installation stages. If it turns out the standard way of booting off a CD doesn't work for your hardware, revisit this chapter and read about alternate kernels and installation methods which may work for you. </para
><para
>Even if you cannot boot from CD-ROM, you can probably install the Debian system components and any packages you want from CD-ROM. Simply boot using a different media, such as floppies. When it's time to install the operating system, base system, and any additional packages, point the installation system at the CD-ROM drive. </para
><para
>If you have problems booting, see <xref linkend="boot-troubleshooting"/>. </para>
<!--   End of file boot-installer/intro-cd.xml -->

<para
>To boot a CD-ROM from the Cyclone console prompt, use the command <command
>boot cd0:cats.bin</command
> </para>
  </sect2>


  <sect2 arch="arm" id="boot-firmware"
><title
>Booting from Firmware</title>


<!-- Start of file boot-installer/intro-firmware.xml -->
<!-- $Id: intro-firmware.xml 35309 2006-03-07 19:31:05Z tbm $ -->

<para
>There is an increasing number of consumer devices that directly boot from a flash chip on the device. The installer can be written to flash so it will automatically start when you reboot your machines. </para
><note
><para
>In many cases, changing the firmware of an embedded device voids your warranty. Sometimes you are also not able to recover your device if there are problems during the flashing process. Therefore, please take care and follow the steps precisely. </para
></note>

<!--   End of file boot-installer/intro-firmware.xml -->

   <sect3 arch="arm" id="boot-firmware-nslu2"
><title
>Booting the NSLU2</title>
<para
>There are three ways how to put the installer firmware into flash: </para>

    <sect4 arch="arm"
><title
>Using the NSLU2 web interface</title>
<para
>Go to the administration section and choose the menu item <literal
>Upgrade</literal
>. You can then browse your disk for the installer image you have previously downloaded. Then press the <literal
>Start Upgrade</literal
> button, confirm, wait for a few minutes and confirm again. The system will then boot straight into the installer. </para>
    </sect4>

    <sect4 arch="arm"
><title
>Via the network using Linux/Unix</title>
<para
>You can use <command
>upslug2</command
> from any Linux or Unix machine to upgrade the machine via the network. This software is packaged for Debian. First, you have to put your NSLU2 in upgrade mode: <orderedlist
> <listitem
><para
> Disconnect any disks and/or devices from the USB ports. </para
></listitem
> <listitem
><para
> Power off the NSLU2 </para
></listitem
> <listitem
><para
> Press and hold the reset button (accessible through the small hole on the back just above the power input). </para
></listitem
> <listitem
><para
> Press and release the power button to power on the NSLU2. </para
></listitem
> <listitem
><para
> Wait for 10 seconds watching the ready/status LED. After 10 seconds it will change from amber to red. Immediately release the reset button. </para
></listitem
> <listitem
><para
> The NSLU2 ready/status LED will flash alternately red/green (there is a 1 second delay before the first green). The NSLU2 is now in upgrade mode. </para
></listitem
> </orderedlist
> See the <ulink url="http://www.nslu2-linux.org/wiki/OpenSlug/UsingTheBinary"
>NSLU2-Linux pages</ulink
> if you have problems with this. Once your NSLU2 is in upgrade mode, you can flash the new image: <informalexample
><screen
>
sudo upslug2 -i di-nslu2.bin
</screen
></informalexample
> Note that the tool also shows the MAC address of your NSLU2, which may come in handy to configure your DHCP server. After the whole image has been written and verified, the system will automatically reboot. Make sure you connect your USB disk again now, otherwise the installer won't be able to find it. </para>
    </sect4>

    <sect4 arch="arm"
><title
>Via the network using Windows</title>
<para
>There is <ulink url="http://www.everbesthk.com/8-download/sercomm/firmware/all_router_utility.zip"
>a tool</ulink
> for Windows to upgrade the firmware via the network. </para>
    </sect4>
   </sect3>
  </sect2>
<!--   End of file boot-installer/arm.xml -->
<!-- &boot-installer-hppa.xml; -->

<!-- Start of file boot-installer/x86.xml -->
<!-- $Id: x86.xml 56419 2008-10-15 07:17:25Z fjp $ -->

  <sect2 arch="x86"
><title
>Booting from a CD-ROM</title>


<!-- Start of file boot-installer/intro-cd.xml -->
<!-- $Id: intro-cd.xml 39614 2006-08-07 15:50:11Z fjp $ -->

<para
>The easiest route for most people will be to use a set of Debian CDs. If you have a CD set, and if your machine supports booting directly off the CD, great! Simply <phrase arch="x86"
> configure your system for booting off a CD as described in <xref linkend="boot-dev-select"/>, </phrase
> insert your CD, reboot, and proceed to the next chapter. </para
><para
>Note that certain CD drives may require special drivers, and thus be inaccessible in the early installation stages. If it turns out the standard way of booting off a CD doesn't work for your hardware, revisit this chapter and read about alternate kernels and installation methods which may work for you. </para
><para
>Even if you cannot boot from CD-ROM, you can probably install the Debian system components and any packages you want from CD-ROM. Simply boot using a different media, such as floppies. When it's time to install the operating system, base system, and any additional packages, point the installation system at the CD-ROM drive. </para
><para
>If you have problems booting, see <xref linkend="boot-troubleshooting"/>. </para>
<!--   End of file boot-installer/intro-cd.xml -->

<!-- We'll comment the following section until we know exact layout -->
<!--
CD #1 of official Debian CD-ROM sets for &arch-title; will present a
<prompt
>boot:</prompt
> prompt on most hardware. Press
<keycap
>F4</keycap
> to see the list of kernel options available
from which to boot. Just type your chosen flavor name (idepci,
vanilla, compact, bf24) at the <prompt
>boot:</prompt
> prompt
followed by &enterkey;.

</para
><para>

If your hardware doesn't support booting of multiple images, put one
of the other CDs in the drive. It appears that most SCSI CD-ROM drives
do not support <command
>isolinux</command
> multiple image booting, so users
with SCSI CD-ROMs should try either CD2 (vanilla) or CD3 (compact),
or CD5 (bf2.4).

</para
><para>

CD's 2 through 5 will each boot a
different ``flavor'' depending on which CD-ROM is
inserted. See <xref linkend="kernel-choice"/> for a discussion of the
different flavors.  Here's how the flavors are laid out on the
different CD-ROMs:

<variablelist>
<varlistentry>
<term
>CD 1</term
><listitem
><para>

Allows a selection of kernel images to boot from (the idepci flavor is
the default if no selection is made).

</para
></listitem
></varlistentry>
<varlistentry>
<term
>CD 2</term
><listitem
><para>

Boots the <quote
>vanilla</quote
> flavor.

</para
></listitem
></varlistentry>
<varlistentry>
<term
>CD 3</term
><listitem
><para>

Boots the <quote
>compact</quote
> flavor.

</para
></listitem
></varlistentry>
<varlistentry>
<term
>CD 4</term
><listitem
><para>

Boots the <quote
>idepci</quote
> flavor.

</para
></listitem
></varlistentry>
<varlistentry>
<term
>CD 5</term
><listitem
><para>

Boots the <quote
>bf2.4</quote
> flavor.

</para
></listitem
></varlistentry>

 </variablelist>

</para
><para>

-->

  </sect2>

  <sect2 arch="x86" id="boot-win32">
  <title
>Booting from Windows</title>
<para
>To start the installer from Windows, you must first obtain CD-ROM/DVD-ROM or USB memory stick installation media as described in <xref linkend="official-cdrom"/> and <xref linkend="boot-usb-files"/>. </para
><para
>If you use an installation CD or DVD, a pre-installation program should be launched automatically when you insert the disc. In case Windows does not start it automatically, or if you are using a USB memory stick, you can run it manually by accessing the device and executing <command
>setup.exe</command
>. </para
><para
>After the program has been started, a few preliminary questions will be asked and the system will be prepared to start the &debian; installer. </para>
  </sect2>

<!-- FIXME the documented procedure does not exactly work, commented out
     until fixes

  <sect2 arch="x86" id="install-from-dos">
  <title
>Booting from a DOS partition</title>


<para>

Boot into DOS (not Windows) without any drivers being loaded.  To do
this, you have to press <keycap
>F8</keycap
> at exactly the right
moment (and optionally select the <quote
>safe mode command prompt only</quote>
option).  Enter the subdirectory for the flavor you chose, e.g.,

<informalexample
><screen
>
cd c:\install
</screen
></informalexample
>.

Next, execute <command
>install.bat</command
>.
The kernel will load and launch the installer system.

</para
><para>

Please note, there is currently a loadlin problem (#142421) which
precludes <filename
>install.bat</filename
> from being used with the
bf2.4 flavor. The symptom of the problem is an
<computeroutput
>invalid compressed format</computeroutput
> error.

</para>
  </sect2>

END FIXME -->

  <sect2 arch="x86" id="boot-initrd">
  <title
>Booting from Linux Using <command
>LILO</command
> or <command
>GRUB</command
></title>

<para
>To boot the installer from hard disk, you must first download and place the needed files as described in <xref linkend="boot-drive-files"/>. </para>

<para
>If you intend to use the hard drive only for booting and then download everything over the network, you should download the <filename
>netboot/debian-installer/&architecture;/initrd.gz</filename
> file and its corresponding kernel <filename
>netboot/debian-installer/&architecture;/linux</filename
>. This will allow you to repartition the hard disk from which you boot the installer, although you should do so with care. </para>

<para
>Alternatively, if you intend to keep an existing partition on the hard drive unchanged during the install, you can download the <filename
>hd-media/initrd.gz</filename
> file and its kernel, as well as copy a CD iso to the drive (make sure the file is named ending in <literal
>.iso</literal
>). The installer can then boot from the drive and install from the CD image, without needing the network. </para>

<para
>For <command
>LILO</command
>, you will need to configure two essential things in <filename
>/etc/lilo.conf</filename
>: <itemizedlist
> <listitem
><para
> to load the <filename
>initrd.gz</filename
> installer at boot time; </para
></listitem
> <listitem
><para
> have the <filename
>vmlinuz</filename
> kernel use a RAM disk as its root partition. </para
></listitem
> </itemizedlist
> Here is a <filename
>/etc/lilo.conf</filename
> example: </para
><para>

<informalexample
><screen
>image=/boot/newinstall/vmlinuz
       label=newinstall
       initrd=/boot/newinstall/initrd.gz
</screen
></informalexample
> For more details, refer to the <citerefentry
><refentrytitle
>initrd</refentrytitle
> <manvolnum
>4</manvolnum
></citerefentry
> and <citerefentry
><refentrytitle
>lilo.conf</refentrytitle
> <manvolnum
>5</manvolnum
></citerefentry
> man pages. Now run <userinput
>lilo</userinput
> and reboot. </para
><para
>The procedure for <command
>GRUB</command
> is quite similar. Locate your <filename
>menu.lst</filename
> in the <filename
>/boot/grub/</filename
> directory (sometimes in the <filename
>/boot/boot/grub/</filename
>), add the following lines: <informalexample
><screen
>
title  New Install
kernel (hd0,0)/boot/newinstall/vmlinuz
initrd (hd0,0)/boot/newinstall/initrd.gz
</screen
></informalexample
> and reboot. </para
><para
>Note that the value of the <userinput
>ramdisk_size</userinput
> may need to be adjusted for the size of the initrd image. From here on, there should be no difference between <command
>GRUB</command
> or <command
>LILO</command
>. </para>
  </sect2>

  <sect2 arch="x86" condition="bootable-usb" id="usb-boot">
  <title
>Booting from USB Memory Stick</title>
<para
>Let's assume you have prepared everything from <xref linkend="boot-dev-select"/> and <xref linkend="boot-usb-files"/>. Now just plug your USB stick into some free USB connector and reboot the computer. The system should boot up, and you should be presented with the <prompt
>boot:</prompt
> prompt. Here you can enter optional boot arguments, or just hit &enterkey;. </para>
  </sect2>

  <sect2 arch="x86" condition="supports-floppy-boot" id="floppy-boot">
  <title
>Booting from Floppies</title>
<para
>You will have already downloaded the floppy images you needed and created floppies from the images in <xref linkend="create-floppy"/>. </para
><para
>To boot from the installer boot floppy, place it in the primary floppy drive, shut down the system as you normally would, then turn it back on. </para
><para
>For installing from an LS-120 drive (ATAPI version) with a set of floppies, you need to specify the virtual location for the floppy device. This is done with the <emphasis
>root=</emphasis
> boot argument, giving the device that the ide-floppy driver maps the device to. For example, if your LS-120 drive is connected as the first IDE device (master) on the second cable, you enter <userinput
>install root=/dev/hdc</userinput
> at the boot prompt. </para
><para
>Note that on some machines, <keycombo
><keycap
>Control</keycap
> <keycap
>Alt</keycap
> <keycap
>Delete</keycap
></keycombo
> does not properly reset the machine, so a <quote
>hard</quote
> reboot is recommended. If you are installing from an existing operating system (e.g., from a DOS box) you don't have a choice. Otherwise, please do a hard reboot when booting. </para
><para
>The floppy disk will be accessed, and you should then see a screen that introduces the boot floppy and ends with the <prompt
>boot:</prompt
> prompt. </para
><para
>Once you press &enterkey;, you should see the message <computeroutput
>Loading...</computeroutput
>, followed by <computeroutput
>Uncompressing Linux...</computeroutput
>, and then a screenfull or so of information about the hardware in your system. More information on this phase of the boot process can be found below in <xref linkend="kernel-msgs"/>. </para
><para
>After booting from the boot floppy, the root floppy is requested. Insert the root floppy and press &enterkey;, and the contents are loaded into memory. The installer program <command
>debian-installer</command
> is automatically launched. </para>
  </sect2>

  <sect2 arch="x86" id="boot-tftp"
><title
>Booting with TFTP</title>


<!-- Start of file boot-installer/intro-net.xml -->
<!-- $Id: intro-net.xml 11648 2004-03-22 00:37:46Z joeyh $ -->

<para
>Booting from the network requires that you have a network connection and a TFTP network boot server (DHCP, RARP, or BOOTP). </para
><para arch="hppa"
>Older systems such as the 715 might require the use of an RBOOT server instead of a BOOTP server. </para
><para
>The installation method to support network booting is described in <xref linkend="install-tftp"/>. </para>
<!--   End of file boot-installer/intro-net.xml -->

<para
>There are various ways to do a TFTP boot on i386. </para>

   <sect3
><title
>NIC or Motherboard that support PXE</title>
<para
>It could be that your Network Interface Card or Motherboard provides PXE boot functionality. This is a <trademark class="trade"
>Intel</trademark
> re-implementation of TFTP boot. If so, you may be able to configure your BIOS to boot from the network. </para>
   </sect3>

   <sect3
><title
>NIC with Network BootROM</title>
<para
>It could be that your Network Interface Card provides TFTP boot functionality. </para
><para condition="FIXME"
>Let us (<email
>&email-debian-boot-list;</email
>) know how did you manage it. Please refer to this document. </para>
   </sect3>

   <sect3
><title
>Etherboot</title>
<para
>The <ulink url="http://www.etherboot.org"
>etherboot project</ulink
> provides bootdiskettes and even bootroms that do a TFTPboot. </para>
   </sect3>
  </sect2>

  <sect2 arch="x86" id="boot-screen">
  <title
>The Boot Screen</title>
<para
>When the installer boots, you should be presented with a friendly graphical screen showing the Debian logo and a menu: <informalexample
><screen
>
Installer boot menu

Install
Graphical install
Advanced options       >
Help

Press ENTER to boot or TAB to edit a menu entry
</screen
></informalexample
> Depending on the installation method you are using, the <quote
>Graphical install</quote
> option may not be available. </para
><para
>For a normal installation, select either the <quote
>Install</quote
> or the <quote
>Graphical install</quote
> entry &mdash; using either the arrow keys on your keyboard or by typing the first (highlighted) letter &mdash; and press &enterkey; to boot the installer. </para
><para
>The <quote
>Advanced options</quote
> entry gives access to a second menu that allows to boot the installer in expert mode, in rescue mode and for automated installs. </para
><para
>If you wish or need to add any boot parameters for either the installer or the kernel, press &tabkey;. This will display the default boot command for the selected menu entry and allow to add additional options. The help screens (see below) list some common possible options. Press &enterkey; to boot the installer with your options; pressing &escapekey; will return you to the boot menu and undo any changes you made. </para
><para
>Choosing the <quote
>Help</quote
> entry will result in the first help screen being displayed which gives an overview of all available help screens. Note that it is not possible to return to the boot menu after the help screens have been displayed. However, the F3 and F4 help screens list commands that are equivalent to the boot methods listed in the menu. All help screens have a boot prompt at which the boot command can be typed: <informalexample
><screen
>
Press F1 for the help index, or ENTER to boot:
</screen
></informalexample
> At this boot prompt you can either just press &enterkey; to boot the installer with default options or enter a specific boot command and, optionally, boot parameters. A number of boot parameters which might be useful can be found on the various help screens. If you do add any parameters to the boot command line, be sure to first type the boot method (the default is <userinput
>install</userinput
>) and a space before the first parameter (e.g., <userinput
>install fb=false</userinput
>). <note
><para
>The keyboard is assumed to have a default American English layout at this point. This means that if your keyboard has a different (language-specific) layout, the characters that appear on the screen may be different from what you'd expect when you type parameters. Wikipedia has a <ulink url="&url-us-keymap;"
>schema of the US keyboard layout</ulink
> which can be used as a reference to find the correct keys to use. </para
></note>
<note
><para
>If you are using a system that has the BIOS configured to use serial console, you may not be able to see the initial graphical splash screen upon booting the installer; you may even not see the boot menu. The same can happen if you are installing the system via a remote management device that provides a text interface to the VGA console. Examples of these devices include the text console of Compaq's <quote
>integrated Lights Out</quote
> (iLO) and HP's <quote
>Integrated Remote Assistant</quote
> (IRA). </para
><para
>To bypass the graphical boot screen you can either blindly press &escapekey; to get a text boot prompt, or (equally blindly) press <quote
>H</quote
> followed by &enterkey; to select the <quote
>Help</quote
> option described above. After that your keystrokes should be echoed at the prompt. To prevent the installer from using the framebuffer for the rest of the installation, you will also want to add <userinput
>fb=false</userinput
> to the boot prompt, as described in the help text. </para
></note>
</para>

  </sect2>
<!--   End of file boot-installer/x86.xml -->

<!-- Start of file boot-installer/ia64.xml -->
<!-- $Id: ia64.xml 43841 2007-01-04 01:45:08Z fjp $ -->

  <sect2 arch="ia64"
><title
>Booting from a CD-ROM</title>


<!-- Start of file boot-installer/intro-cd.xml -->
<!-- $Id: intro-cd.xml 39614 2006-08-07 15:50:11Z fjp $ -->

<para
>The easiest route for most people will be to use a set of Debian CDs. If you have a CD set, and if your machine supports booting directly off the CD, great! Simply <phrase arch="x86"
> configure your system for booting off a CD as described in <xref linkend="boot-dev-select"/>, </phrase
> insert your CD, reboot, and proceed to the next chapter. </para
><para
>Note that certain CD drives may require special drivers, and thus be inaccessible in the early installation stages. If it turns out the standard way of booting off a CD doesn't work for your hardware, revisit this chapter and read about alternate kernels and installation methods which may work for you. </para
><para
>Even if you cannot boot from CD-ROM, you can probably install the Debian system components and any packages you want from CD-ROM. Simply boot using a different media, such as floppies. When it's time to install the operating system, base system, and any additional packages, point the installation system at the CD-ROM drive. </para
><para
>If you have problems booting, see <xref linkend="boot-troubleshooting"/>. </para>
<!--   End of file boot-installer/intro-cd.xml -->

  <note>
  <title
>CD Contents</title>

<para
>There are three basic variations of Debian Install CDs. The <emphasis
>Business Card</emphasis
> CD has a minimal installation that will fit on the small form factor CD media. It requires a network connection in order to install the rest of the base installation and make a usable system. The <emphasis
>Network Install</emphasis
> CD has all of the packages for a base install but requires a network connection to a Debian mirror site in order to install the extra packages one would want for a complete system . The set of Debian CDs can install a complete system from the wide range of packages without needing access to the network. </para>
  </note>

<para
>The IA-64 architecture uses the next generation Extensible Firmware Interface (EFI) from Intel. Unlike the traditional x86 BIOS which knows little about the boot device other than the partition table and Master Boot Record (MBR), EFI can read and write files from FAT16 or FAT32 formatted disk partitions. This simplifies the often arcane process of starting a system. The system boot loader and the EFI firmware that supports it have a full filesystem to store the files necessary for booting the machine. This means that the system disk on an IA-64 system has an additional disk partition dedicated to EFI instead of the simple MBR or boot block on more conventional systems. </para
><para
>The Debian Installer CD contains a small EFI partition where the <command
>ELILO</command
> bootloader, its configuration file, the installer's kernel, and initial filesystem (initrd) are located. The running system also contains an EFI partition where the necessary files for booting the system reside. These files are readable from the EFI Shell as described below. </para
><para
>Most of the details of how <command
>ELILO</command
> actually loads and starts a system are transparent to the system installer. However, the installer must set up an EFI partition prior to installing the base system. Otherwise, the installation of <command
>ELILO</command
> will fail, rendering the system un-bootable. The EFI partition is allocated and formatted in the partitioning step of the installation prior to loading any packages on the system disk. The partitioning task also verifies that a suitable EFI partition is present before allowing the installation to proceed. </para
><para
>The EFI Boot Manager is presented as the last step of the firmware initialization. It displays a menu list from which the user can select an option. Depending on the model of system and what other software has been loaded on the system, this menu may be different from one system to another. There should be at least two menu items displayed, <command
>Boot Option Maintenance Menu</command
> and <command
>EFI Shell (Built-in)</command
>. Using the first option is preferred, however, if that option is not available or the CD for some reason does not boot with it, use the second option. </para>

  <warning>
  <title
>IMPORTANT</title>
<para
>The EFI Boot Manager will select a default boot action, typically the first menu choice, within a pre-set number of seconds. This is indicated by a countdown at the bottom of the screen. Once the timer expires and the systems starts the default action, you may have to reboot the machine in order to continue the installation. If the default action is the EFI Shell, you can return to the Boot Manager by running <command
>exit</command
> at the shell prompt. </para>
  </warning>

  <sect3 arch="ia64" id="bootable-cd">
  <title
>Option 1: Booting from the Boot Option Maintenance Menu</title>
 

<itemizedlist>

<listitem
><para
>Insert the CD in the DVD/CD drive and reboot the machine. The firmware will display the EFI Boot Manager page and menu after it completes its system initialization. </para
></listitem>

<listitem
><para
>Select <command
>Boot Maintenance Menu</command
> from the menu with the arrow keys and press <command
>ENTER</command
>. This will display a new menu. </para
></listitem>

<listitem
><para
>Select <command
>Boot From a File</command
> from the menu with the arrow keys and press <command
>ENTER</command
>. This will display a list of devices probed by the firmware. You should see two menu lines containing either the label <command
>Debian Inst [Acpi ...</command
> or <command
>Removable Media Boot</command
>. If you examine the rest of the menu line, you will notice that the device and controller information should be the same. </para
></listitem>

<listitem
><para
>You can choose either of the entries that refer to the CD/DVD drive. Select your choice with the arrow keys and press <command
>ENTER</command
>. If you choose <command
>Removable Media Boot</command
> the machine will immediately start the boot load sequence. If you choose <command
>Debian Inst [Acpi ...</command
> instead, it will display a directory listing of the bootable portion of the CD, requiring you to proceed to the next (additional) step. </para
></listitem>

<listitem
><para
>You will only need this step if you chose <command
>Debian Inst [Acpi ...</command
>. The directory listing will also show <command
>[Treat like Removable Media Boot]</command
> on the next to the last line. Select this line with the arrow keys and press <command
>ENTER</command
>. This will start the boot load sequence. </para
></listitem>

</itemizedlist>

<para
>These steps start the Debian boot loader which will display a menu page for you to select a boot kernel and options. Proceed to selecting the boot kernel and options. </para>
  </sect3>

  <sect3 arch="ia64" id="boot-with-efi">
  <title
>Option 2: Booting from the EFI Shell</title>
<para
>If, for some reason, option 1 is not successful, reboot the machine and when the EFI Boot Manager screen appears there should be one option called <command
>EFI Shell [Built-in]</command
>. Boot the Debian Installer CD with the following steps: </para>

<itemizedlist>

<listitem
><para
>Insert the CD in the DVD/CD drive and reboot the machine. The firmware will display the EFI Boot Manager page and menu after it completes system initialization. </para
></listitem>

<listitem
><para
>Select <command
>EFI Shell</command
> from the menu with the arrow keys and press <command
>ENTER</command
>. The EFI Shell will scan all of the bootable devices and display them to the console before displaying its command prompt. The recognized bootable partitions on devices will show a device name of <filename
>fs<replaceable
>n</replaceable
>:</filename
>. All other recognized partitions will be named <filename
>blk<replaceable
>n</replaceable
>:</filename
>. If you inserted the CD just before entering the shell, this may take a few extra seconds as it initializes the CD drive. </para>
</listitem>

<listitem
><para
>Examine the output from the shell looking for the CDROM drive. It is most likely the <filename
>fs0:</filename
> device although other devices with bootable partitions will also show up as <filename
>fs<replaceable
>n</replaceable
></filename
>. </para
></listitem>

<listitem
><para
>Enter <command
>fs<replaceable
>n</replaceable
>:</command
> and press <command
>ENTER</command
> to select that device where <replaceable
>n</replaceable
> is the partition number for the CDROM. The shell will now display the partition number as its prompt. </para
></listitem>

<listitem
><para
>Enter <command
>elilo</command
> and press <command
>ENTER</command
>. This will start the boot load sequence. </para
></listitem>

</itemizedlist>

<para
>As with option 1, these steps start the Debian boot loader which will display a menu page for you to select a boot kernel and options. You can also enter the shorter <command
>fs<replaceable
>n</replaceable
>:elilo</command
> command at the shell prompt. Proceed to selecting the boot kernel and options. </para>

  </sect3>

  <sect3 arch="ia64" id="serial-console">
  <title
>Installing using a Serial Console</title>

<para
>You may choose to perform an install using a monitor and keyboard or using a serial connection. To use a monitor/keyboard setup, select an option containing the string [VGA console]. To install over a serial connection, choose an option containing the string [<replaceable
>BAUD</replaceable
> baud serial console], where <replaceable
>BAUD</replaceable
> is the speed of your serial console. Menu items for the most typical baud rate settings on the ttyS0 device are preconfigured. </para
><para
>In most circumstances, you will want the installer to use the same baud rate as your connection to the EFI console. If you aren't sure what this setting is, you can obtain it using the command <command
>baud</command
> at the EFI shell. </para
><para
>If there is not an option available that is configured for the serial device or baud rate you would like to use, you may override the console setting for one of the existing menu options. For example, to use a 57600 baud console over the ttyS1 device, enter <command
>console=ttyS1,57600n8</command
> into the <classname
>Boot:</classname
> text window. </para>

<note
><para
>Most IA-64 boxes ship with a default console setting of 9600 baud. This setting is rather slow, and the normal installation process will take a significant time to draw each screen. You should consider either increasing the baud rate used for performing the installation, or performing a Text Mode installation. See the <classname
>Params</classname
> help menu for instructions on starting the installer in Text Mode. </para
></note>

<warning
><para
>If you select the wrong console type, you will be able to select the kernel and enter parameters but both the display and your input will go dead as soon as the kernel starts, requiring you to reboot before you can begin the installation. </para
></warning>
  </sect3>

  <sect3 arch="ia64" id="kernel-option-menu">
  <title
>Selecting the Boot Kernel and Options</title>

<para
>The boot loader will display a form with a menu list and a text window with a <classname
>Boot:</classname
> prompt. The arrow keys select an item from the menu and any text typed at the keyboard will appear in the text window. There are also help screens which can be displayed by pressing the appropriate function key. The <classname
>General</classname
> help screen explains the menu choices and the <classname
>Params</classname
> screen explains the common command line options. </para
><para
>Consult the <classname
>General</classname
> help screen for the description of the kernels and install modes most appropriate for your installation. You should also consult <xref linkend="boot-parms"/> below for any additional parameters that you may want to set in the <classname
>Boot:</classname
> text window. The kernel version you choose selects the kernel version that will be used for both the installation process and the installed system. If you encounter kernel problems with the installation, you may also have those same problems with the system you install. The following two steps will select and start the install: </para>

<itemizedlist>

<listitem
><para
>Select the kernel version and installation mode most appropriate to your needs with the arrow keys. </para
></listitem>

<listitem
><para
>Enter any boot parameters by typing at the keyboard. The text will be displayed directly in the text window. This is where kernel parameters (such as serial console settings) are specified. </para
></listitem>

<listitem
><para
>Press <command
>ENTER</command
>. This will load and start the kernel. The kernel will display its usual initialization messages followed by the first screen of the Debian Installer. </para
></listitem>

</itemizedlist>

<para
>Proceed to the next chapter to continue the installation where you will set up the language locale, network, and disk partitions. </para>
  </sect3>
  </sect2>

  <sect2 arch="ia64" id="boot-tftp"
><title
>Booting with TFTP</title>

<para
>Booting an IA-64 system from the network is similar to a CD boot. The only difference is how the installation kernel is loaded. The EFI Boot Manager can load and start programs from a server on the network. Once the installation kernel is loaded and starts, the system install will proceed through the same steps as the CD install with the exception that the packages of the base install will be loaded from the network rather than the CD drive. </para>


<!-- Start of file boot-installer/intro-net.xml -->
<!-- $Id: intro-net.xml 11648 2004-03-22 00:37:46Z joeyh $ -->

<para
>Booting from the network requires that you have a network connection and a TFTP network boot server (DHCP, RARP, or BOOTP). </para
><para arch="hppa"
>Older systems such as the 715 might require the use of an RBOOT server instead of a BOOTP server. </para
><para
>The installation method to support network booting is described in <xref linkend="install-tftp"/>. </para>
<!--   End of file boot-installer/intro-net.xml -->

<para
>Network booting an IA-64 system requires two architecture-specific actions. On the boot server, DHCP and TFTP must be configured to deliver <command
>elilo</command
>. On the client a new boot option must be defined in the EFI boot manager to enable loading over a network. </para>

  <sect3 arch="ia64" id="boot-tftp-server">
  <title
>Configuring the Server</title>
<para
>A suitable TFTP entry for network booting an IA-64 system looks something like this: <informalexample
><screen
>
host mcmuffin {
        hardware ethernet 00:30:6e:1e:0e:83;
        fixed-address 10.0.0.21;
        filename "debian-installer/ia64/elilo.efi";
}
</screen
></informalexample
> Note that the goal is to get <command
>elilo.efi</command
> running on the client. </para
><para
>Extract the <filename
>netboot.tar.gz</filename
> file into the directory used as the root for your tftp server. Typical tftp root directories include <filename
>/var/lib/tftp</filename
> and <filename
>/tftpboot</filename
>. This will create a <filename
>debian-installer</filename
> directory tree containing the boot files for an IA-64 system. </para
><para>

<informalexample
><screen
># cd /var/lib/tftp
# tar xvfz /home/user/netboot.tar.gz
./
./debian-installer/
./debian-installer/ia64/
[...]
</screen
></informalexample
> The <filename
>netboot.tar.gz</filename
> contains an <filename
>elilo.conf</filename
> file that should work for most configurations. However, should you need to make changes to this file, you can find it in the <filename
>debian-installer/ia64/</filename
> directory. It is possible to have different config files for different clients by naming them using the client's IP address in hex with the suffix <filename
>.conf</filename
> instead of <filename
>elilo.conf</filename
>. See documentation provided in the <classname
>elilo</classname
> package for details. </para>
  </sect3>

  <sect3 arch="ia64" id="boot-tftp-client">
  <title
>Configuring the Client</title>
<para
>To configure the client to support TFTP booting, start by booting to EFI and entering the <guimenu
>Boot Option Maintenance Menu</guimenu
>. <itemizedlist
> <listitem
><para
> Add a boot option. </para
></listitem
> <listitem
><para
> You should see one or more lines with the text <guimenuitem
>Load File [Acpi()/.../Mac()]</guimenuitem
>. If more than one of these entries exist, choose the one containing the MAC address of the interface from which you'll be booting. Use the arrow keys to highlight your choice, then press enter. </para
></listitem
> <listitem
><para
> Name the entry <userinput
>Netboot</userinput
> or something similar, save, and exit back to the boot options menu. </para
></listitem
> </itemizedlist
> You should see the new boot option you just created, and selecting it should initiate a DHCP query, leading to a TFTP load of <filename
>elilo.efi</filename
> from the server. </para
><para
>The boot loader will display its prompt after it has downloaded and processed its configuration file. At this point, the installation proceeds with the same steps as a CD install. Select a boot option as in above and when the kernel has completed installing itself from the network, it will start the Debian Installer. </para
><para
>Proceed to the next chapter to continue the installation where you will set up the language locale, network, and disk partitions. </para>
  </sect3>
  </sect2>
<!--   End of file boot-installer/ia64.xml -->

<!-- Start of file boot-installer/m68k.xml -->
<!-- $Id: m68k.xml 45435 2007-02-26 18:29:36Z wouter $ -->

  <sect2 arch="m68k"
><title
>Choosing an Installation Method</title>

<para
>Some &arch-title; subarchs have the option of booting using either a 2.4.x or 2.2.x linux kernel. When such a choice exists, try the 2.4.x linux kernel. The installer should also require less memory when using a 2.4.x linux kernel as 2.2.x support requires a fixed-sized ramdisk and 2.4.x uses tmpfs. </para
><para
>If you are using a 2.2.x linux kernel, then you need to use the &ramdisksize; kernel parameter. </para
><para
>Make sure <userinput
>root=/dev/ram</userinput
> is one of your kernel parameters. </para
><para
>If you're having trouble, check <ulink url="&url-m68k-cts-faq;"
>cts's &arch-title; debian-installer FAQ</ulink
>. </para>

<itemizedlist>
	<listitem
><para
><xref linkend="m68k-boot-amiga"/></para
></listitem>
	<listitem
><para
><xref linkend="m68k-boot-atari"/></para
></listitem>
	<listitem
><para
><xref linkend="m68k-boot-bvme6000"/></para
></listitem>
	<listitem
><para
><xref linkend="m68k-boot-mac"/></para
></listitem>
	<listitem
><para
><xref linkend="m68k-boot-mvme"/></para
></listitem>
	<listitem
><para
><xref linkend="m68k-boot-q40"/></para
></listitem>
</itemizedlist>


    <sect3 id="m68k-boot-amiga"
><title
>Amiga</title>
<para
>The only method of installation available to amiga is the hard drive (see <xref linkend="m68k-boot-hd"/>). <emphasis
>In other words the cdrom is not bootable.</emphasis
> </para
><para
>Amiga does not currently work with bogl, so if you are seeing bogl errors, you need to include the boot parameter <userinput
>fb=false</userinput
>. </para>
    </sect3>

    <sect3 id="m68k-boot-atari"
><title
>Atari</title>
<para
>The installer for atari may be started from either the hard drive (see <xref linkend="m68k-boot-hd"/>) or from floppies (see <xref linkend="boot-from-floppies"/>). <emphasis
>In other words the cdrom is not bootable.</emphasis
> </para
><para
>Atari does not currently work with bogl, so if you are seeing bogl errors, you need to include the boot parameter <userinput
>fb=false</userinput
>. </para>
    </sect3>

    <sect3 id="m68k-boot-bvme6000"
><title
>BVME6000</title>
<para
>The installer for BVME6000 may be started from a cdrom (see <xref linkend="m68k-boot-cdrom"/>), floppies (see <xref linkend="boot-from-floppies"/>), or the net (see <xref linkend="boot-tftp"/>). </para>
    </sect3>

    <sect3 id="m68k-boot-mac"
><title
>Macintosh</title>
<para
>The only method of installation available to mac is from the hard drive (see <xref linkend="m68k-boot-hd"/>). <emphasis
>In other words the cdrom is not bootable.</emphasis
> Macs do not have a working 2.4.x kernel. </para
><para
>If your hardware uses a 53c9x-based scsi bus, then you may need to include the kernel parameter <userinput
>mac53c9x=1,0</userinput
>. Hardware with two such scsi buses, such as the Quadra 950, will need <userinput
>mac53c9x=2,0</userinput
> instead. Alternatively, the parameter can be specified as <userinput
>mac53c9x=-1,0</userinput
> which will leave autodetection on, but which will disable SCSI disconnects. Note that specifying this parameter is only necessary if you have more than one hard disk; otherwise, the system will run faster if you do not specify it. </para>
    </sect3>

    <sect3 id="m68k-boot-mvme"
><title
>MVME147 and MVME16x</title>
<para
>The installer for MVME147 and MVME16x may be started from either floppies (see <xref linkend="boot-from-floppies"/>) or the net (see <xref linkend="boot-tftp"/>). <emphasis
>In other words the cdrom is not bootable.</emphasis
> </para>
    </sect3>

    <sect3 id="m68k-boot-q40"
><title
>Q40/Q60</title>
<para
>The only method of installation available to Q40/Q60 is from the hard drive (see <xref linkend="m68k-boot-hd"/>). <emphasis
>In other words the cdrom is not bootable.</emphasis
> </para>
    </sect3>

  </sect2>

  <sect2 arch="m68k" id="m68k-boot-hd"
><title
>Booting from a Hard Disk</title>


<!-- Start of file boot-installer/intro-hd.xml -->
<!-- $Id: intro-hd.xml 28672 2005-06-26 10:06:30Z fjp $ -->

<para
>Booting from an existing operating system is often a convenient option; for some systems it is the only supported method of installation. </para
><para
>To boot the installer from hard disk, you will have already completed downloading and placing the needed files in <xref linkend="boot-drive-files"/>. </para>
<!--   End of file boot-installer/intro-hd.xml -->

<para
>At least six different ramdisks may be used to boot from the hard drive, three different types each with and without support for a 2.2.x linux kernel (see <ulink url="&disturl;/main/installer-&architecture;/current/images/MANIFEST"
>MANIFEST</ulink
> for details). </para
><para
>The three different types of ramdisks are <filename
>cdrom</filename
>, <filename
>hd-media</filename
>, and <filename
>nativehd</filename
>. These ramdisks differ only in their source for installation packages. The <filename
>cdrom</filename
> ramdisk uses a cdrom to get debian-installer packages. The <filename
>hd-media</filename
> ramdisk uses an iso image file of a cdrom currently residing on a hard disk. Finally, the <filename
>nativehd</filename
> ramdisk uses the net to install packages. </para>

<itemizedlist>
	<listitem
><para
><xref linkend="m68k-boothd-amiga"/></para
></listitem>
	<listitem
><para
><xref linkend="m68k-boothd-atari"/></para
></listitem>
	<listitem
><para
><xref linkend="m68k-boothd-mac"/></para
></listitem>
	<listitem
><para
><xref linkend="m68k-boothd-q40"/></para
></listitem>
</itemizedlist>


    <sect3 id="m68k-boothd-amiga"
><title
>Booting from AmigaOS</title>
<para
>In the <command
>Workbench</command
>, start the Linux installation process by double-clicking on the <guiicon
>StartInstall</guiicon
> icon in the <filename
>debian</filename
> directory. </para
><para
>You may have to press the &enterkey; key twice after the Amiga installer program has output some debugging information into a window. After this, the screen will go grey, there will be a few seconds' delay. Next, a black screen with white text should come up, displaying all kinds of kernel debugging information. These messages may scroll by too fast for you to read, but that's OK. After a couple of seconds, the installation program should start automatically, so you can continue down at <xref linkend="d-i-intro"/>. </para>
    </sect3>


    <sect3 id="m68k-boothd-atari"
><title
>Booting from Atari TOS</title>
<para
>At the GEM desktop, start the Linux installation process by double-clicking on the <guiicon
>bootstra.prg</guiicon
> icon in the <filename
>debian</filename
> directory and clicking <guibutton
>Ok</guibutton
> at the program options dialog box. </para
><para
>You may have to press the &enterkey; key after the Atari bootstrap program has output some debugging information into a window. After this, the screen will go grey, there will be a few seconds' delay. Next, a black screen with white text should come up, displaying all kinds of kernel debugging information. These messages may scroll by too fast for you to read, but that's OK. After a couple of seconds, the installation program should start automatically, so you can continue below at <xref linkend="d-i-intro"/>. </para>
    </sect3>


    <sect3 id="m68k-boothd-mac"
><title
>Booting from MacOS</title>
<para
>You must retain the original Mac system and boot from it. It is <emphasis
>essential</emphasis
> that, when booting MacOS in preparation for booting the Penguin linux loader, you hold the <keycap
>shift</keycap
> key down to prevent extensions from loading. If you don't use MacOS except for loading linux, you can accomplish the same thing by removing all extensions and control panels from the Mac's System Folder. Otherwise extensions may be left running and cause random problems with the running linux kernel. </para
><para
>Macs require the <command
>Penguin</command
> bootloader, which can be downloaded from <ulink url="&url-m68k-mac;"
>the Linux/mac68k sourceforge.net project</ulink
>. If you do not have the tools to handle a <command
>Stuffit</command
> archive, you can put it on a MacOS-formatted floppy using a second GNU/Linux machine of any architecture and the <command
>hmount</command
>, <command
>hcopy</command
>, and <command
>humount</command
> tools from the <classname
>hfsutils</classname
> suite. </para
><para
>At the MacOS desktop, start the Linux installation process by double-clicking on the <guiicon
>Penguin Prefs</guiicon
> icon in the <filename
>Penguin</filename
> directory. The <command
>Penguin</command
> booter will start up. Go to the <guimenuitem
>Settings</guimenuitem
> item in the <guimenu
>File</guimenu
> menu, click the <guilabel
>Kernel</guilabel
> tab. Select the kernel (<filename
>vmlinuz</filename
>) and ramdisk (<filename
>initrd.gz</filename
>) images in the <filename
>install</filename
> directory by clicking on the corresponding buttons in the upper right corner, and navigating the file select dialogs to locate the files. </para
><para
>To set the boot parameters in Penguin, choose <guimenu
>File</guimenu
> -&gt; <guimenuitem
>Settings...</guimenuitem
>, then switch to the <guilabel
>Options</guilabel
> tab. Boot parameters may be typed in to the text entry area. If you will always want to use these settings, select <guimenu
>File</guimenu
> -&gt; <guimenuitem
>Save Settings as Default</guimenuitem
>. </para
><para
>Close the <guilabel
>Settings</guilabel
> dialog, save the settings and start the bootstrap using the <guimenuitem
>Boot Now</guimenuitem
> item in the <guimenu
>File</guimenu
> menu. </para
><para
>The <command
>Penguin</command
> booter will output some debugging information into a window. After this, the screen will go grey, there will be a few seconds' delay. Next, a black screen with white text should come up, displaying all kinds of kernel debugging information. These messages may scroll by too fast for you to read, but that's OK. After a couple of seconds, the installation program should start automatically, so you can continue below at <xref linkend="d-i-intro"/>. </para>

    </sect3>

    <sect3 id="m68k-boothd-q40"
><title
>Booting from Q40/Q60</title>

<para
>FIXME </para
><para
>The installation program should start automatically, so you can continue below at <xref linkend="d-i-intro"/>. </para>

    </sect3>
  </sect2>


  <sect2 arch="m68k" id="m68k-boot-cdrom"
><title
>Booting from a CD-ROM</title>
<para
>Currently, the only &arch-title; subarchitecture that supports CD-ROM booting is the BVME6000. </para>


<!-- Start of file boot-installer/intro-cd.xml -->
<!-- $Id: intro-cd.xml 39614 2006-08-07 15:50:11Z fjp $ -->

<para
>The easiest route for most people will be to use a set of Debian CDs. If you have a CD set, and if your machine supports booting directly off the CD, great! Simply <phrase arch="x86"
> configure your system for booting off a CD as described in <xref linkend="boot-dev-select"/>, </phrase
> insert your CD, reboot, and proceed to the next chapter. </para
><para
>Note that certain CD drives may require special drivers, and thus be inaccessible in the early installation stages. If it turns out the standard way of booting off a CD doesn't work for your hardware, revisit this chapter and read about alternate kernels and installation methods which may work for you. </para
><para
>Even if you cannot boot from CD-ROM, you can probably install the Debian system components and any packages you want from CD-ROM. Simply boot using a different media, such as floppies. When it's time to install the operating system, base system, and any additional packages, point the installation system at the CD-ROM drive. </para
><para
>If you have problems booting, see <xref linkend="boot-troubleshooting"/>. </para>
<!--   End of file boot-installer/intro-cd.xml -->

  </sect2>


  <sect2 arch="m68k" id="boot-tftp"
><title
>Booting with TFTP</title>


<!-- Start of file boot-installer/intro-net.xml -->
<!-- $Id: intro-net.xml 11648 2004-03-22 00:37:46Z joeyh $ -->

<para
>Booting from the network requires that you have a network connection and a TFTP network boot server (DHCP, RARP, or BOOTP). </para
><para arch="hppa"
>Older systems such as the 715 might require the use of an RBOOT server instead of a BOOTP server. </para
><para
>The installation method to support network booting is described in <xref linkend="install-tftp"/>. </para>
<!--   End of file boot-installer/intro-net.xml -->

<para
>After booting the VMEbus systems you will be presented with the LILO <prompt
>Boot:</prompt
> prompt. At that prompt enter one of the following to boot Linux and begin installation proper of the Debian software using vt102 terminal emulation: <itemizedlist>
<listitem
><para
>type <screen
>i6000 &enterkey;</screen
> to install a BVME4000/6000 </para
></listitem>
<listitem
><para
>type <screen
>i162 &enterkey;</screen
> to install an MVME162 </para
></listitem>
<listitem
><para
>type <screen
>i167 &enterkey;</screen
> to install an MVME166/167 </para
></listitem>
    </itemizedlist>

</para
><para
>You may additionally append the string <screen
>TERM=vt100</screen
> to use vt100 terminal emulation, e.g., <screen
>i6000 TERM=vt100 &enterkey;</screen
>. </para>
  </sect2>


  <sect2 arch="m68k" id="boot-from-floppies">
  <title
>Booting from Floppies</title>
<para
>For most &arch-title; architectures, booting from a local filesystem is the recommended method. </para
><para
>Booting from the boot floppy is supported only for Atari and VME (with a SCSI floppy drive on VME) at this time. </para>
 </sect2>
<!--   End of file boot-installer/m68k.xml -->

<!-- Start of file boot-installer/mips.xml -->
<!-- $Id: mips.xml 35613 2006-03-19 04:18:28Z tbm $ -->


  <sect2 arch="mips" id="boot-tftp"
><title
>Booting with TFTP</title>

   <sect3>
   <title
>SGI TFTP Booting</title>
<para
>After entering the command monitor use <informalexample
><screen
>
bootp():
</screen
></informalexample
> on SGI machines to boot linux and to begin installation of the Debian Software. In order to make this work you may have to unset the <envar
>netaddr</envar
> environment variable. Type <informalexample
><screen
>
unsetenv netaddr
</screen
></informalexample
> in the command monitor to do this. </para>
  </sect3>

   <sect3>
   <title
>Broadcom BCM91250A and BCM91480B TFTP Booting</title>
<para
>On the Broadcom BCM91250A and BCM91480B evaluation boards, you have to load the SiByl boot loader via TFTP which will then load and start the Debian installer. In most cases, you will first obtain an IP address via DHCP but it is also possible to configure a static address. In order to use DHCP, you can enter the following command on the CFE prompt: <informalexample
><screen
>
ifconfig eth0 -auto
</screen
></informalexample
> Once you have obtained an IP address, you can load SiByl with the following command: <informalexample
><screen
>
boot 192.168.1.1:/boot/sibyl
</screen
></informalexample
> You need to substitute the IP address listed in this example with either the name or the IP address of your TFTP server. Once you issue this command, the installer will be loaded automatically. </para>
</sect3>
  </sect2>

  <sect2 arch="mips"
><title
>Boot Parameters</title>

   <sect3>
   <title
>SGI TFTP Booting</title>
<para
>On SGI machines you can append boot parameters to the <command
>bootp():</command
> command in the command monitor. </para
><para
>Following the <command
>bootp():</command
> command you can give the path and name of the file to boot if you did not give an explicit name via your bootp/dhcp server. Example: <informalexample
><screen
>
bootp():/boot/tftpboot.img
</screen
></informalexample
> Further kernel parameters can be passed via <command
>append</command
>: <informalexample
><screen
>bootp(): append="root=/dev/sda1"
</screen
></informalexample>

</para>
  </sect3>

   <sect3>
   <title
>Broadcom BCM91250A and BCM91480B TFTP Booting</title>
<para
>You cannot pass any boot parameters directly from the CFE prompt. Instead, you have to edit the <filename
>/boot/sibyl.conf</filename
> file on the TFTP server and add your parameters to the <replaceable
>extra_args</replaceable
> variable. </para>
  </sect3>

  </sect2>
<!--   End of file boot-installer/mips.xml -->

<!-- Start of file boot-installer/mipsel.xml -->
<!-- $Id: mipsel.xml 35612 2006-03-19 03:34:30Z tbm $ -->

  <sect2 arch="mipsel" id="boot-tftp"
><title
>Booting with TFTP</title>

   <sect3>
   <title
>Cobalt TFTP Booting</title>
<para
>Strictly speaking, Cobalt does not use TFTP but NFS to boot. You need to install an NFS server and put the installer files in <filename
>/nfsroot</filename
>. When you boot your Cobalt, you have to press the left and the right cursor buttons at the same time and the machine will boot via the network from NFS. It will then display several options on the display. There are the following two installation methods: <itemizedlist>
<listitem
><para
>Via SSH (default): In this case, the installer will configure the network via DHCP and start an SSH server. It will then display a random password and other login information (such as the IP address) on the Cobalt LCD. When you connect to the machine with an SSH client you can start with the installation. </para
></listitem>
<listitem
><para
>Via serial console: Using a null modem cable, you can connect to the serial port of your Cobalt machine (using 115200 bps) and perform the installation this way. This option is not available on Qube 2700 (Qube1) machines since they have no serial port. </para
></listitem>
</itemizedlist>

</para>
  </sect3>

   <sect3>
<!-- Note to translators: this is the same section as in mips.xml -->
   <title
>Broadcom BCM91250A and BCM91480B TFTP Booting</title>
<para
>On the Broadcom BCM91250A and BCM91480B evaluation boards, you have to load the SiByl boot loader via TFTP which will then load and start the Debian installer. In most cases, you will first obtain an IP address via DHCP but it is also possible to configure a static address. In order to use DHCP, you can enter the following command on the CFE prompt: <informalexample
><screen
>
ifconfig eth0 -auto
</screen
></informalexample
> Once you have obtained an IP address, you can load SiByl with the following command: <informalexample
><screen
>
boot 192.168.1.1:/boot/sibyl
</screen
></informalexample
> You need to substitute the IP address listed in this example with either the name or the IP address of your TFTP server. Once you issue this command, the installer will be loaded automatically. </para>
</sect3>
  </sect2>

  <sect2 arch="mipsel"
><title
>Boot Parameters</title>

   <sect3>
   <title
>Cobalt TFTP Booting</title>
<para
>You cannot pass any boot parameters directly. Instead, you have to edit the <filename
>/nfsroot/default.colo</filename
> file on the NFS server and add your parameters to the <replaceable
>args</replaceable
> variable. </para>
  </sect3>

   <sect3>
<!-- Note to translators: this is the same section as in mips.xml -->
   <title
>Broadcom BCM91250A and BCM91480B TFTP Booting</title>
<para
>You cannot pass any boot parameters directly from the CFE prompt. Instead, you have to edit the <filename
>/boot/sibyl.conf</filename
> file on the TFTP server and add your parameters to the <replaceable
>extra_args</replaceable
> variable. </para>
  </sect3>

  </sect2>
<!--   End of file boot-installer/mipsel.xml -->

<!-- Start of file boot-installer/s390.xml -->
<!-- $Id: s390.xml 43745 2007-01-01 13:52:38Z fjp $ -->

  <sect2 arch="s390"
><title
>s390 Limitations</title>
<para
>In order to run the installation system a working network setup and ssh session is needed on S/390. </para
><para
>The booting process starts with a network setup that prompts you for several network parameters. If the setup is successful, you will login to the system by starting an ssh session which will launch the standard installation system. </para>
  </sect2>


  <sect2 arch="s390"
><title
>s390 Boot Parameters</title>
<para
>On S/390 you can append boot parameters in the parm file. This file can either be in ASCII or EBCDIC format. A sample parm file <filename
>parmfile.debian</filename
> is provided with the installation images. </para>
  </sect2>
<!--   End of file boot-installer/s390.xml -->

<!-- Start of file boot-installer/powerpc.xml -->
<!-- $Id: powerpc.xml 56248 2008-10-03 17:07:28Z fjp $ -->

  <sect2 arch="powerpc" id="boot-cd"
><title
>Booting from a CD-ROM</title>


<!-- Start of file boot-installer/intro-cd.xml -->
<!-- $Id: intro-cd.xml 39614 2006-08-07 15:50:11Z fjp $ -->

<para
>The easiest route for most people will be to use a set of Debian CDs. If you have a CD set, and if your machine supports booting directly off the CD, great! Simply <phrase arch="x86"
> configure your system for booting off a CD as described in <xref linkend="boot-dev-select"/>, </phrase
> insert your CD, reboot, and proceed to the next chapter. </para
><para
>Note that certain CD drives may require special drivers, and thus be inaccessible in the early installation stages. If it turns out the standard way of booting off a CD doesn't work for your hardware, revisit this chapter and read about alternate kernels and installation methods which may work for you. </para
><para
>Even if you cannot boot from CD-ROM, you can probably install the Debian system components and any packages you want from CD-ROM. Simply boot using a different media, such as floppies. When it's time to install the operating system, base system, and any additional packages, point the installation system at the CD-ROM drive. </para
><para
>If you have problems booting, see <xref linkend="boot-troubleshooting"/>. </para>
<!--   End of file boot-installer/intro-cd.xml -->

<para
>Currently, the only &arch-title; subarchitectures that support CD-ROM booting are PReP (though not all systems) and New World PowerMacs. On PowerMacs, hold the <keycap
>c</keycap
> key, or else the combination of <keycap
>Command</keycap
>, <keycap
>Option</keycap
>, <keycap
>Shift</keycap
>, and <keycap
>Delete</keycap
> keys together while booting to boot from the CD-ROM. </para
><para
>OldWorld PowerMacs will not boot a Debian CD, because OldWorld computers relied on a Mac OS ROM CD boot driver to be present on the CD, and a free-software version of this driver is not available. All OldWorld systems have floppy drives, so use the floppy drive to launch the installer, and then point the installer to the CD for the needed files. </para
><para
>If your system doesn't boot directly from CD-ROM, you can still use the CD-ROM to install the system. On NewWorlds, you can also use an OpenFirmware command to boot from the CD-ROM manually. Follow the instructions in <xref linkend="boot-newworld"/> for booting from the hard disk, except use the path to <command
>yaboot</command
> on the CD at the OF prompt, such as <informalexample
><screen
>0 &gt; boot cd:,\install\yaboot
</screen
></informalexample>

</para>
  </sect2>

  <sect2 arch="powerpc" id="install-drive">
  <title
>Booting from Hard Disk</title>


<!-- Start of file boot-installer/intro-hd.xml -->
<!-- $Id: intro-hd.xml 28672 2005-06-26 10:06:30Z fjp $ -->

<para
>Booting from an existing operating system is often a convenient option; for some systems it is the only supported method of installation. </para
><para
>To boot the installer from hard disk, you will have already completed downloading and placing the needed files in <xref linkend="boot-drive-files"/>. </para>
<!--   End of file boot-installer/intro-hd.xml -->

<!--
  <sect3
><title
>Booting CHRP from OpenFirmware</title>

<para>

  <emphasis
>Not yet written.</emphasis>

</para>
   </sect3>
-->

   <sect3
><title
>Booting OldWorld PowerMacs from MacOS</title>
<para
>If you set up BootX in <xref linkend="files-oldworld"/>, you can use it to boot into the installation system. Double click the <guiicon
>BootX</guiicon
> application icon. Click on the <guibutton
>Options</guibutton
> button and select <guilabel
>Use Specified RAM Disk</guilabel
>. This will give you the chance to select the <filename
>ramdisk.image.gz</filename
> file. You may need to select the <guilabel
>No Video Driver</guilabel
> checkbox, depending on your hardware. Then click the <guibutton
>Linux</guibutton
> button to shut down MacOS and launch the installer. </para>
   </sect3>


  <sect3 id="boot-newworld">
  <title
>Booting NewWorld Macs from OpenFirmware</title>
<para
>You will have already placed the <filename
>vmlinux</filename
>, <filename
>initrd.gz</filename
>, <filename
>yaboot</filename
>, and <filename
>yaboot.conf</filename
> files at the root level of your HFS partition in <xref linkend="files-newworld"/>. You will now have to boot into OpenFirmware (see <xref linkend="invoking-openfirmware"/>). At the prompt, type <informalexample
><screen
>
0 &gt; boot hd:<replaceable>x</replaceable>,yaboot
</screen
></informalexample
> replacing <replaceable
>x</replaceable
> with the partition number of the HFS partition where the kernel and yaboot files were placed, followed by a &enterkey;. On some machines, you may need to use <userinput
>ide0:</userinput
> instead of <userinput
>hd:</userinput
>. In a few more seconds you will see a yaboot prompt <informalexample
><screen
>
boot:
</screen
></informalexample
> At yaboot's <prompt
>boot:</prompt
> prompt, type either <userinput
>install</userinput
> or <userinput
>install video=ofonly</userinput
> followed by a &enterkey;. The <userinput
>video=ofonly</userinput
> argument is for maximum compatibility; you can try it if <userinput
>install</userinput
> doesn't work. The Debian installation program should start. </para>
   </sect3>
  </sect2>

  <sect2 arch="powerpc" condition="bootable-usb" id="usb-boot">
  <title
>Booting from USB memory stick</title>
<para
>Currently, NewWorld PowerMac systems are known to support USB booting. </para>

<para
>Make sure you have prepared everything from <xref linkend="boot-usb-files"/>. To boot a Macintosh system from a USB stick, you will need to use the Open Firmware prompt, since Open Firmware does not search USB storage devices by default. See <xref linkend="invoking-openfirmware"/>. </para
><para
>You will need to work out where the USB storage device appears in the device tree, since at the moment <command
>ofpath</command
> cannot work that out automatically. Type <userinput
>dev / ls</userinput
> and <userinput
>devalias</userinput
> at the Open Firmware prompt to get a list of all known devices and device aliases. On the author's system with various types of USB stick, paths such as <filename
>usb0/disk</filename
>, <filename
>usb0/hub/disk</filename
>, <filename
>/pci@f2000000/usb@1b,1/disk@1</filename
>, and <filename
>/pci@f2000000/usb@1b,1/hub@1/disk@1</filename
> work. </para
><para
>Having worked out the device path, use a command like this to boot the installer: <informalexample
><screen
>
boot <replaceable>usb0/disk</replaceable>:<replaceable>2</replaceable>,\\:tbxi
</screen
></informalexample
> The <replaceable
>2</replaceable
> matches the Apple_HFS or Apple_Bootstrap partition onto which you copied the boot image earlier, and the <userinput
>,\\:tbxi</userinput
> part instructs Open Firmware to boot from the file with an HFS file type of "tbxi" (i.e. <command
>yaboot</command
>) in the directory previously blessed with <command
>hattrib -b</command
>. </para
><para
>The system should now boot up, and you should be presented with the <prompt
>boot:</prompt
> prompt. Here you can enter optional boot arguments, or just hit &enterkey;. </para
><warning
><para
>This boot method is new, and may be difficult to get to work on some NewWorld systems. If you have problems, please file an installation report, as explained in <xref linkend="submit-bug"/>. </para
></warning>
  </sect2>

  <sect2 arch="powerpc" id="boot-tftp"
><title
>Booting with TFTP</title>


<!-- Start of file boot-installer/intro-net.xml -->
<!-- $Id: intro-net.xml 11648 2004-03-22 00:37:46Z joeyh $ -->

<para
>Booting from the network requires that you have a network connection and a TFTP network boot server (DHCP, RARP, or BOOTP). </para
><para arch="hppa"
>Older systems such as the 715 might require the use of an RBOOT server instead of a BOOTP server. </para
><para
>The installation method to support network booting is described in <xref linkend="install-tftp"/>. </para>
<!--   End of file boot-installer/intro-net.xml -->

<para
>Currently, PReP and New World PowerMac systems support netbooting. </para
><para
>On machines with Open Firmware, such as NewWorld Power Macs, enter the boot monitor (see <xref linkend="invoking-openfirmware"/>) and use the command <informalexample
><screen
>
0 &gt; boot enet:0
</screen
></informalexample
> If this doesn't work, you might have to add the filename like this: <informalexample
><screen
>
0 &gt; boot enet:0,yaboot
</screen
></informalexample
> PReP and CHRP boxes may have different ways of addressing the network. On a PReP machine, you should try <informalexample
><screen
>
boot net:<replaceable>server_ipaddr</replaceable>,<replaceable>file</replaceable>,<replaceable>client_ipaddr</replaceable>
</screen
></informalexample
> On some PReP systems (e.g. Motorola PowerStack machines) the command <userinput
>help boot</userinput
> may give a description of syntax and available options. </para>
  </sect2>


  <sect2 arch="powerpc" condition="supports-floppy-boot">
  <title
>Booting from Floppies</title>
<para
>Booting from floppies is supported for &arch-title;, although it is generally only applicable for OldWorld systems. NewWorld systems are not equipped with floppy drives, and attached USB floppy drives are not supported for booting. </para
><para
>You will have already downloaded the floppy images you needed and created floppies from the images in <xref linkend="create-floppy"/>. </para
><para
>To boot from the <filename
>boot-floppy-hfs.img</filename
> floppy, place it in floppy drive after shutting the system down, and before pressing the power-on button. </para
><note
><para
>For those not familiar with Macintosh floppy operations: a floppy placed in the machine prior to boot will be the first priority for the system to boot from. A floppy without a valid boot system will be ejected, and the machine will then check for bootable hard disk partitions. </para
></note
><para
>After booting, the <filename
>root.bin</filename
> floppy is requested. Insert the root floppy and press &enterkey;. The installer program is automatically launched after the root system has been loaded into memory. </para>
  </sect2>


  <sect2 arch="powerpc"
><title
>PowerPC Boot Parameters</title>
<para
>Many older Apple monitors used a 640x480 67Hz mode. If your video appears skewed on an older Apple monitor, try appending the boot argument <userinput
>video=atyfb:vmode:6</userinput
> , which will select that mode for most Mach64 and Rage video hardware. For Rage 128 hardware, this changes to <userinput
>video=aty128fb:vmode:6</userinput
> . </para>
  </sect2>
<!--   End of file boot-installer/powerpc.xml -->

<!-- Start of file boot-installer/sparc.xml -->
<!-- $Id: sparc.xml 48719 2007-07-26 00:36:32Z fjp $ -->

  <sect2 arch="sparc" id="boot-tftp"
><title
>Booting with TFTP</title>


<!-- Start of file boot-installer/intro-net.xml -->
<!-- $Id: intro-net.xml 11648 2004-03-22 00:37:46Z joeyh $ -->

<para
>Booting from the network requires that you have a network connection and a TFTP network boot server (DHCP, RARP, or BOOTP). </para
><para arch="hppa"
>Older systems such as the 715 might require the use of an RBOOT server instead of a BOOTP server. </para
><para
>The installation method to support network booting is described in <xref linkend="install-tftp"/>. </para>
<!--   End of file boot-installer/intro-net.xml -->

<para
>On machines with OpenBoot, simply enter the boot monitor on the machine which is being installed (see <xref linkend="invoking-openboot"/>). Use the command <userinput
>boot net</userinput
> to boot from a TFTP and RARP server, or try <userinput
>boot net:bootp</userinput
> or <userinput
>boot net:dhcp</userinput
> to boot from a TFTP and BOOTP or DHCP server. </para>
  </sect2>


  <sect2 arch="sparc"
><title
>Booting from a CD-ROM</title>


<!-- Start of file boot-installer/intro-cd.xml -->
<!-- $Id: intro-cd.xml 39614 2006-08-07 15:50:11Z fjp $ -->

<para
>The easiest route for most people will be to use a set of Debian CDs. If you have a CD set, and if your machine supports booting directly off the CD, great! Simply <phrase arch="x86"
> configure your system for booting off a CD as described in <xref linkend="boot-dev-select"/>, </phrase
> insert your CD, reboot, and proceed to the next chapter. </para
><para
>Note that certain CD drives may require special drivers, and thus be inaccessible in the early installation stages. If it turns out the standard way of booting off a CD doesn't work for your hardware, revisit this chapter and read about alternate kernels and installation methods which may work for you. </para
><para
>Even if you cannot boot from CD-ROM, you can probably install the Debian system components and any packages you want from CD-ROM. Simply boot using a different media, such as floppies. When it's time to install the operating system, base system, and any additional packages, point the installation system at the CD-ROM drive. </para
><para
>If you have problems booting, see <xref linkend="boot-troubleshooting"/>. </para>
<!--   End of file boot-installer/intro-cd.xml -->

<para
>Most OpenBoot versions support the <userinput
>boot cdrom</userinput
> command which is simply an alias to boot from the SCSI device on ID 6 (or the secondary master for IDE based systems). </para>
  </sect2>

  <sect2 arch="sparc"
><title
>IDPROM Messages</title>
<para
>If you cannot boot because you get messages about a problem with <quote
>IDPROM</quote
>, then it's possible that your NVRAM battery, which holds configuration information for you firmware, has run out. See the <ulink url="&url-sun-nvram-faq;"
>Sun NVRAM FAQ</ulink
> for more information. </para>
  </sect2>
<!--   End of file boot-installer/sparc.xml -->

 </sect1>


<!-- Start of file boot-installer/parameters.xml -->
<!-- $Id: parameters.xml 57693 2009-02-27 05:55:08Z cjwatson $ -->

 <sect1 id="boot-parms"
><title
>Boot Parameters</title>
<para
>Boot parameters are Linux kernel parameters which are generally used to make sure that peripherals are dealt with properly. For the most part, the kernel can auto-detect information about your peripherals. However, in some cases you'll have to help the kernel a bit. </para
><para
>If this is the first time you're booting the system, try the default boot parameters (i.e., don't try setting parameters) and see if it works correctly. It probably will. If not, you can reboot later and look for any special parameters that inform the system about your hardware. </para
><para
>Information on many boot parameters can be found in the <ulink url="http://www.tldp.org/HOWTO/BootPrompt-HOWTO.html"
> Linux BootPrompt HOWTO</ulink
>, including tips for obscure hardware. This section contains only a sketch of the most salient parameters. Some common gotchas are included below in <xref linkend="boot-troubleshooting"/>. </para
><para
>When the kernel boots, a message <informalexample
><screen
>
Memory:<replaceable>avail</replaceable>k/<replaceable>total</replaceable>k available
</screen
></informalexample
> should be emitted early in the process. <replaceable
>total</replaceable
> should match the total amount of RAM, in kilobytes. If this doesn't match the actual amount of RAM you have installed, you need to use the <userinput
>mem=<replaceable
>ram</replaceable
></userinput
> parameter, where <replaceable
>ram</replaceable
> is set to the amount of memory, suffixed with <quote
>k</quote
> for kilobytes, or <quote
>m</quote
> for megabytes. For example, both <userinput
>mem=65536k</userinput
> and <userinput
>mem=64m</userinput
> mean 64MB of RAM. </para
><para condition="supports-serial-console"
>If you are booting with a serial console, generally the kernel will autodetect this. If you have a videocard (framebuffer) and a keyboard also attached to the computer which you wish to boot via serial console, you may have to pass the <userinput
>console=<replaceable
>device</replaceable
></userinput
> argument to the kernel, where <replaceable
>device</replaceable
> is your serial device, which is usually something like <filename
>ttyS0</filename
>. </para
><para arch="sparc"
>For &arch-title; the serial devices are <filename
>ttya</filename
> or <filename
>ttyb</filename
>. Alternatively, set the <envar
>input-device</envar
> and <envar
>output-device</envar
> OpenPROM variables to <filename
>ttya</filename
>. </para>


  <sect2 id="installer-args"
><title
>Debian Installer Parameters</title>
<para
>The installation system recognizes a few additional boot parameters<footnote
> <para
> With current kernels (2.6.9 or newer) you can use 32 command line options and 32 environment options. If these numbers are exceeded, the kernel will panic. </para
> </footnote
> which may be useful. </para
><para
>A number of parameters have a <quote
>short form</quote
> that helps avoid the limitations of the kernel command line options and makes entering the parameters easier. If a parameter has a short form, it will be listed in brackets behind the (normal) long form. Examples in this manual will normally use the short form too. </para>

<variablelist>
<varlistentry>
<term
>debconf/priority (priority)</term>
<listitem
><para
>This parameter sets the lowest priority of messages to be displayed. </para
><para
>The default installation uses <userinput
>priority=high</userinput
>. This means that both high and critical priority messages are shown, but medium and low priority messages are skipped. If problems are encountered, the installer adjusts the priority as needed. </para
><para
>If you add <userinput
>priority=medium</userinput
> as boot parameter, you will be shown the installation menu and gain more control over the installation. When <userinput
>priority=low</userinput
> is used, all messages are shown (this is equivalent to the <emphasis
>expert</emphasis
> boot method). With <userinput
>priority=critical</userinput
>, the installation system will display only critical messages and try to do the right thing without fuss. </para
></listitem>
</varlistentry>


<varlistentry>
<term
>DEBIAN_FRONTEND</term>
<listitem
><para
>This boot parameter controls the type of user interface used for the installer. The current possible parameter settings are: <itemizedlist
> <listitem
> <para
><userinput
>DEBIAN_FRONTEND=noninteractive</userinput
></para
> </listitem
><listitem
> <para
><userinput
>DEBIAN_FRONTEND=text</userinput
></para
> </listitem
><listitem
> <para
><userinput
>DEBIAN_FRONTEND=newt</userinput
></para
> </listitem
><listitem
> <para
><userinput
>DEBIAN_FRONTEND=gtk</userinput
></para
> </listitem
> </itemizedlist
> The default frontend is <userinput
>DEBIAN_FRONTEND=newt</userinput
>. <userinput
>DEBIAN_FRONTEND=text</userinput
> may be preferable for serial console installs. Generally, only the <userinput
>newt</userinput
> frontend is available on default install media. On architectures that support it, the graphical installer uses the <userinput
>gtk</userinput
> frontend. </para
></listitem>
</varlistentry>


<varlistentry>
<term
>BOOT_DEBUG</term>
<listitem
><para
>Setting this boot parameter to 2 will cause the installer's boot process to be verbosely logged. Setting it to 3 makes debug shells available at strategic points in the boot process. (Exit the shells to continue the boot process.) <variablelist>
<varlistentry>
<term
><userinput
>BOOT_DEBUG=0</userinput
></term>
<listitem
><para
>This is the default.</para
></listitem>
</varlistentry>

<varlistentry>
<term
><userinput
>BOOT_DEBUG=1</userinput
></term>
<listitem
><para
>More verbose than usual.</para
></listitem>
</varlistentry>

<varlistentry>
<term
><userinput
>BOOT_DEBUG=2</userinput
></term>
<listitem
><para
>Lots of debugging information.</para
></listitem>
</varlistentry>

<varlistentry>
<term
><userinput
>BOOT_DEBUG=3</userinput
></term>
<listitem
><para
>Shells are run at various points in the boot process to allow detailed debugging. Exit the shell to continue the boot. </para
></listitem>
</varlistentry>
</variablelist>

</para
></listitem>
</varlistentry>


<varlistentry>
<term
>INSTALL_MEDIA_DEV</term>
<listitem
><para
>The value of the parameter is the path to the device to load the Debian installer from. For example, <userinput
>INSTALL_MEDIA_DEV=/dev/floppy/0</userinput
> </para
><para
>The boot floppy, which normally scans all floppies it can to find the root floppy, can be overridden by this parameter to only look at the one device. </para
></listitem>
</varlistentry>

<varlistentry>
<term
>lowmem</term>
<listitem
><para
>Can be used to force the installer to a lowmem level higher than the one the installer sets by default based on available memory. Possible values are 1 and 2. See also <xref linkend="lowmem"/>. </para
></listitem>
</varlistentry>

<varlistentry condition="squeeze">
<term
>noshell</term>
<listitem
><para
>Prevents the installer from offering interactive shells on tty2 and tty3. Useful for unattended installations where physical security is limited. </para
></listitem>
</varlistentry>

<varlistentry>
<term
>debian-installer/framebuffer (fb)</term>
<listitem
><para
>Some architectures use the kernel framebuffer to offer installation in a number of languages. If framebuffer causes a problem on your system you can disable the feature by the parameter <userinput
>fb=false</userinput
>. Problem symptoms are error messages about bterm or bogl, a blank screen, or a freeze within a few minutes after starting the install. </para
><para arch="x86"
>The <userinput
>video=vga16:off</userinput
> argument may also be used to disable the kernel's use of the framebuffer. Such problems have been reported on a Dell Inspiron with Mobile Radeon card. </para
><para arch="m68k"
>Such problems have been reported on the Amiga 1200 and SE/30. </para
><para arch="hppa"
>Such problems have been reported on hppa. </para
><note arch="sparc"
><para
>Because of display problems on some systems, framebuffer support is <emphasis
>disabled by default</emphasis
> for &arch-title;. This can result in ugly display on systems that do properly support the framebuffer, like those with ATI graphical cards. If you see display problems in the installer, you can try booting with parameter <userinput
>debian-installer/framebuffer=true</userinput
> or <userinput
>fb=true</userinput
> for short. </para
></note
></listitem>
</varlistentry>

<varlistentry arch="not-s390">
<term
>debian-installer/theme (theme)</term>
<listitem
><para
>A theme determines how the user interface of the installer looks (colors, icons, etc.). What themes are available differs per frontend. Currently both the newt and gtk frontends only have a <quote
>dark</quote
> theme that was designed for visually impaired users. Set the theme by booting with <userinput
>theme=<replaceable
>dark</replaceable
></userinput
>. </para
></listitem>
</varlistentry>

<varlistentry>
<term
>netcfg/disable_dhcp</term>
<listitem
><para
>By default, the &d-i; automatically probes for network configuration via DHCP. If the probe succeeds, you won't have a chance to review and change the obtained settings. You can get to the manual network setup only in case the DHCP probe fails. </para
><para
>If you have a DHCP server on your local network, but want to avoid it because e.g. it gives wrong answers, you can use the parameter <userinput
>netcfg/disable_dhcp=true</userinput
> to prevent configuring the network with DHCP and to enter the information manually. </para
></listitem>
</varlistentry>

<varlistentry>
<term
>hw-detect/start_pcmcia</term>
<listitem
><para
>Set to <userinput
>false</userinput
> to prevent starting PCMCIA services, if that causes problems. Some laptops are well known for this misbehavior. </para
></listitem>
</varlistentry>

<varlistentry>
<term
>disk-detect/dmraid/enable (dmraid)</term>
<listitem
><para
>Set to <userinput
>true</userinput
> to enable support for Serial ATA RAID (also called ATA RAID, BIOS RAID or fake RAID) disks in the installer. Note that this support is currently experimental. Additional information can be found on the <ulink url="&url-d-i-wiki;"
>Debian Installer Wiki</ulink
>. </para
></listitem>
</varlistentry>

<varlistentry>
<term
>preseed/url (url)</term>
<listitem
><para
>Specify the url to a preconfiguration file to download and use for automating the install. See <xref linkend="automatic-install"/>. </para
></listitem>
</varlistentry>

<varlistentry>
<term
>preseed/file (file)</term>
<listitem
><para
>Specify the path to a preconfiguration file to load for automating the install. See <xref linkend="automatic-install"/>. </para
></listitem>
</varlistentry>

<varlistentry>
<term
>preseed/interactive</term>
<listitem
><para
>Set to <userinput
>true</userinput
> to display questions even if they have been preseeded. Can be useful for testing or debugging a preconfiguration file. Note that this will have no effect on parameters that are passed as boot parameters, but for those a special syntax can be used. See <xref linkend="preseed-seenflag"/> for details. </para
></listitem>
</varlistentry>

<varlistentry>
<term
>auto-install/enable (auto)</term>
<listitem
><para
>Delay questions that are normally asked before preseeding is possible until after the network is configured. See <xref linkend="preseed-auto"/> for details about using this to automate installs. </para
></listitem>
</varlistentry>

<varlistentry>
<term
>finish-install/keep-consoles</term>
<listitem
><para
>During installations from serial or management console, the regular virtual consoles (VT1 to VT6) are normally disabled in <filename
>/etc/inittab</filename
>. Set to <userinput
>true</userinput
> to prevent this. </para
></listitem>
</varlistentry>

<varlistentry>
<term
>cdrom-detect/eject</term>
<listitem
><para
>By default, before rebooting, &d-i; automatically ejects the optical media used during the installation. This can be unnecessary if the system does not automatically boot off the CD. In some cases it may even be undesirable, for example if the optical drive cannot reinsert the media itself and the user is not there to do it manually. Many slot loading, slim-line, and caddy style drives cannot reload media automatically. </para
><para
>Set to <userinput
>false</userinput
> to disable automatic ejection, and be aware that you may need to ensure that the system does not automatically boot from the optical drive after the initial installation. </para
></listitem>
</varlistentry>

<varlistentry>
<term
>debian-installer/allow_unauthenticated</term>
<listitem
><para
>By default the installer requires that repositories be authenticated using a known gpg key. Set to <userinput
>true</userinput
> to disable that authentication. <emphasis role="bold"
>Warning: insecure, not recommended.</emphasis
> </para
></listitem>
</varlistentry>

<varlistentry arch="alpha;m68k;mips;mipsel">
<term
>ramdisk_size</term>
<listitem
><para
>This parameter should already be set to a correct value where needed; set it only it you see errors during the boot that indicate the ramdisk could not be loaded completely. The value is in kB. </para
></listitem>
</varlistentry>

<varlistentry condition="gtk">
<term
>mouse/protocol</term>
<listitem
><para
>For the gtk frontend (graphical installer), users can set the mouse protocol to be used by setting this parameter. Supported values are<footnote
> <para
> See the man page for <citerefentry
><refentrytitle
>directfbrc</refentrytitle
> <manvolnum
>5</manvolnum
></citerefentry
> for additional information. </para
> </footnote
>: <userinput
>PS/2</userinput
>, <userinput
>IMPS/2</userinput
>, <userinput
>MS</userinput
>, <userinput
>MS3</userinput
>, <userinput
>MouseMan</userinput
> and <userinput
>MouseSystems</userinput
>. In most cases the default protocol should work correctly. </para
></listitem>
</varlistentry>

<varlistentry condition="gtk">
<term
>mouse/device</term>
<listitem
><para
>For the gtk frontend (graphical installer), users can specify the mouse device to be used by setting this parameter. This is mostly useful if the mouse is connected to a serial port (serial mouse). Example: <userinput
>mouse/device=<replaceable
>/dev/ttyS1</replaceable
></userinput
>. </para
></listitem>
</varlistentry>

<varlistentry condition="gtk">
<term
>mouse/left</term>
<listitem
><para
>For the gtk frontend (graphical installer), users can switch the mouse to left-handed operation by setting this parameter to <userinput
>true</userinput
>. </para
></listitem>
</varlistentry>

<varlistentry condition="gtk">
<term
>directfb/hw-accel</term>
<listitem
><para
>For the gtk frontend (graphical installer), hardware acceleration in directfb is disabled by default. Set this parameter to <userinput
>true</userinput
> to enable it. </para
></listitem>
</varlistentry>

<varlistentry>
<term
>rescue/enable</term>
<listitem
><para
>Set to <userinput
>true</userinput
> to enter rescue mode rather than performing a normal installation. See <xref linkend="rescue"/>. </para
></listitem>
</varlistentry>

</variablelist>

   <sect3 id="preseed-args">
   <title
>Using boot parameters to answer questions</title>
<para
>With some exceptions, a value can be set at the boot prompt for any question asked during the installation, though this is only really useful in specific cases. General instructions how to do this can be found in <xref linkend="preseed-bootparms"/>. Some specific examples are listed below. </para>

<variablelist>

<varlistentry>
<term
>debian-installer/locale (locale)</term>
<listitem
><para
>Can be used to set both the language and country for the installation. This will only work if the locale is supported in Debian. For example, use <userinput
>locale=de_CH</userinput
> to select German as language and Switzerland as country. </para
></listitem>
</varlistentry>

<varlistentry>
<term
>anna/choose_modules (modules)</term>
<listitem
><para
>Can be used to automatically load installer components that are not loaded by default. Examples of optional components that may be useful are <classname
>openssh-client-udeb</classname
> (so you can use <command
>scp</command
> during the installation)<phrase arch="not-s390"
> and <classname
>ppp-udeb</classname
> (see <xref linkend="pppoe"/>)</phrase
>. </para
></listitem>
</varlistentry>

<varlistentry>
<term
>netcfg/disable_dhcp</term>
<listitem
><para
>Set to <userinput
>true</userinput
> if you want to disable DHCP and instead force static network configuration. </para
></listitem>
</varlistentry>

<varlistentry>
<term
>mirror/protocol (protocol)</term>
<listitem
><para
>By default the installer will use the http protocol to download files from Debian mirrors and changing that to ftp is not possible during installations at normal priority. By setting this parameter to <userinput
>ftp</userinput
>, you can force the installer to use that protocol instead. Note that you cannot select an ftp mirror from a list, you have to enter the hostname manually. </para
></listitem>
</varlistentry>

<varlistentry>
<term
>tasksel:tasksel/first (tasks)</term>
<listitem
><para
>Can be used to select tasks that are not available from the interactive task list, such as the <literal
>kde-desktop</literal
> task. See <xref linkend="pkgsel"/> for additional information. </para
></listitem>
</varlistentry>

</variablelist>

   </sect3>

   <sect3 id="module-parms">
   <title
>Passing parameters to kernel modules</title>
<para
>If drivers are compiled into the kernel, you can pass parameters to them as described in the kernel documentation. However, if drivers are compiled as modules and because kernel modules are loaded a bit differently during an installation than when booting an installed system, it is not possible to pass parameters to modules as you would normally do. Instead, you need to use a special syntax recognized by the installer which will then make sure that the parameters are saved in the proper configuration files and will thus be used when the modules are actually loaded. The parameters will also be propagated automatically to the configuration for the installed system. </para
><para
>Note that it is now quite rare that parameters need to be passed to modules. In most cases the kernel will be able to probe the hardware present in a system and set good defaults that way. However, in some situations it may still be needed to set parameters manually. </para
><para
>The syntax to use to set parameters for modules is: <informalexample
><screen
>
<replaceable>module_name</replaceable>.<replaceable>parameter_name</replaceable>=<replaceable>value</replaceable>
</screen
></informalexample
> If you need to pass multiple parameters to the same or different modules, just repeat this. For example, to set an old 3Com network interface card to use the BNC (coax) connector and IRQ 10, you would pass: <informalexample
><screen
>3c509.xcvr=3 3c509.irq=10
</screen
></informalexample>

</para>
   </sect3>

   <sect3 id="module-blacklist">
   <title
>Blacklisting kernel modules</title>
<para
>Sometimes it may be necessary to blacklist a module to prevent it from being loaded automatically by the kernel and udev. One reason could be that a particular module causes problems with your hardware. The kernel also sometimes lists two different drivers for the same device. This can cause the device to not work correctly if the drivers conflict or if the wrong driver is loaded first. </para
><para
>You can blacklist a module using the following syntax: <userinput
><replaceable
>module_name</replaceable
>.blacklist=yes</userinput
>. This will cause the module to be blacklisted in <filename
>/etc/modprobe.d/blacklist.local</filename
> both during the installation and for the installed system. </para
><para
>Note that a module may still be loaded by the installation system itself. You can prevent that from happening by running the installation in expert mode and unselecting the module from the list of modules displayed during the hardware detection phases. </para>
   </sect3>
  </sect2>
 </sect1>
<!--   End of file boot-installer/parameters.xml -->

<!-- Start of file boot-installer/trouble.xml -->
<!-- $Id: trouble.xml 56669 2008-11-17 22:21:26Z jfs $ -->

 <sect1 id="boot-troubleshooting">
 <title
>Troubleshooting the Installation Process</title>
 

  <sect2 arch="not-s390" id="unreliable-cd">
  <title
>CD-ROM Reliability</title>
<para
>Sometimes, especially with older CD-ROM drives, the installer may fail to boot from a CD-ROM. The installer may also &mdash; even after booting successfully from CD-ROM &mdash; fail to recognize the CD-ROM or return errors while reading from it during the installation. </para
><para
>There are many different possible causes for these problems. We can only list some common issues and provide general suggestions on how to deal with them. The rest is up to you. </para
><para
>There are two very simple things that you should try first. <itemizedlist>
<listitem
><para
>If the CD-ROM does not boot, check that it was inserted correctly and that it is not dirty. </para
></listitem>
<listitem
><para
>If the installer fails to recognize a CD-ROM, try just running the option <menuchoice
> <guimenuitem
>Detect and mount CD-ROM</guimenuitem
> </menuchoice
> a second time. Some DMA related issues with older CD-ROM drives are known to be resolved in this way. </para
></listitem>
</itemizedlist>

</para
><para
>If this does not work, then try the suggestions in the subsections below. Most, but not all, suggestions discussed there are valid for both CD-ROM and DVD, but we'll use the term CD-ROM for simplicity. </para
><para
>If you cannot get the installation working from CD-ROM, try one of the other installation methods that are available. </para>

  <sect3>
  <title
>Common issues</title>

<itemizedlist>
  <listitem
><para
>Some older CD-ROM drives do not support reading from discs that were burned at high speeds using a modern CD writer. </para
></listitem>
  <listitem
><para
>If your system boots correctly from the CD-ROM, it does not necessarily mean that Linux also supports the CD-ROM (or, more correctly, the controller that your CD-ROM drive is connected to). </para
></listitem>
  <listitem
><para
>Some older CD-ROM drives do not work correctly if <quote
>direct memory access</quote
> (DMA) is enabled. </para
></listitem>
</itemizedlist>

  </sect3>

  <sect3>
  <title
>How to investigate and maybe solve issues</title>
<para
>If the CD-ROM fails to boot, try the suggestions listed below. <itemizedlist>
  <listitem
><para
>Check that your BIOS actually supports booting from CD-ROM (older systems possibly don't) and that your CD-ROM drive supports the media you are using. </para
></listitem>
  <listitem
><para
>If you downloaded an iso image, check that the md5sum of that image matches the one listed for the image in the <filename
>MD5SUMS</filename
> file that should be present in the same location as where you downloaded the image from. <informalexample
><screen
>
$ md5sum <replaceable>debian-testing-i386-netinst.iso</replaceable>
a20391b12f7ff22ef705cee4059c6b92  <replaceable>debian-testing-i386-netinst.iso</replaceable>
</screen
></informalexample
> Next, check that the md5sum of the burned CD-ROM matches as well. The following command should work. It uses the size of the image to read the correct number of bytes from the CD-ROM. <informalexample
><screen
>$ dd if=/dev/cdrom | \
> head -c `stat --format=%s <replaceable>debian-testing-i386-netinst.iso</replaceable>` | \
> md5sum
a20391b12f7ff22ef705cee4059c6b92  -
262668+0 records in
262668+0 records out
134486016 bytes (134 MB) copied, 97.474 seconds, 1.4 MB/s
</screen
></informalexample>

  </para
></listitem>
</itemizedlist>

</para
><para
>If, after the installer has been booted successfully, the CD-ROM is not detected, sometimes simply trying again may solve the problem. If you have more than one CD-ROM drive, try changing the CD-ROM to the other drive. If that does not work or if the CD-ROM is recognized but there are errors when reading from it, try the suggestions listed below. Some basic knowledge of Linux is required for this. To execute any of the commands, you should first switch to the second virtual console (VT2) and activate the shell there. <itemizedlist>
  <listitem
><para
>Switch to VT4 or view the contents of <filename
>/var/log/syslog</filename
> (use <command
>nano</command
> as editor) to check for any specific error messages. After that, also check the output of <command
>dmesg</command
>. </para
></listitem>
  <listitem
><para
>Check in the output of <command
>dmesg</command
> if your CD-ROM drive was recognized. You should see something like (the lines do not necessarily have to be consecutive): <informalexample
><screen
>
Probing IDE interface ide1...
hdc: TOSHIBA DVD-ROM SD-R6112, ATAPI CD/DVD-ROM drive
ide1 at 0x170-0x177,0x376 on irq 15
hdc: ATAPI 24X DVD-ROM DVD-R CD-R/RW drive, 2048kB Cache, UDMA(33)
Uniform CD-ROM driver Revision: 3.20
</screen
></informalexample
> If you don't see something like that, chances are the controller your CD-ROM is connected to was not recognized or may be not supported at all. If you know what driver is needed for the controller, you can try loading it manually using <command
>modprobe</command
>. </para
></listitem>
  <listitem
><para
>Check that there is a device node for your CD-ROM drive under <filename
>/dev/</filename
>. In the example above, this would be <filename
>/dev/hdc</filename
>. There should also be a <filename
>/dev/cdrom</filename
>. </para
></listitem>
  <listitem
><para
>Use the <command
>mount</command
> command to check if the CD-ROM is already mounted; if not, try mounting it manually: <informalexample
><screen
>
$ mount /dev/<replaceable>hdc</replaceable> /cdrom
</screen
></informalexample
> Check if there are any error messages after that command. </para
></listitem>
  <listitem
><para
>Check if DMA is currently enabled: <informalexample
><screen
>
$ cd /proc/<replaceable>ide</replaceable>/<replaceable>hdc</replaceable>
$ grep using_dma settings
using_dma      1       0       1       rw
</screen
></informalexample
> A <quote
>1</quote
> in the first column after <literal
>using_dma</literal
> means it is enabled. If it is, try disabling it: <informalexample
><screen
>
$ echo -n "using_dma:0" >settings
</screen
></informalexample
> Make sure that you are in the directory for the device that corresponds to your CD-ROM drive. </para
></listitem>
  <listitem
><para
>If there are any problems during the installation, try checking the integrity of the CD-ROM using the option near the bottom of the installer's main menu. This option can also be used as a general test if the CD-ROM can be read reliably. </para
></listitem>
</itemizedlist>

</para>
  </sect3>
  </sect2>

  <sect2 condition="supports-floppy-boot" id="unreliable-floppies">
  <title
>Floppy Disk Reliability</title>

<para
>The biggest problem for people using floppy disks to install Debian seems to be floppy disk reliability. </para
><para
>The boot floppy is the floppy with the worst problems, because it is read by the hardware directly, before Linux boots. Often, the hardware doesn't read as reliably as the Linux floppy disk driver, and may just stop without printing an error message if it reads incorrect data. There can also be failures in the driver floppies, most of which indicate themselves with a flood of messages about disk I/O errors. </para
><para
>If you are having the installation stall at a particular floppy, the first thing you should do is write the image to a <emphasis
>different</emphasis
> floppy and see if that solves the problem. Simply reformatting the old floppy may not be sufficient, even if it appears that the floppy was reformatted and written with no errors. It is sometimes useful to try writing the floppy on a different system. </para
><para
>One user reports he had to write the images to floppy <emphasis
>three</emphasis
> times before one worked, and then everything was fine with the third floppy. </para
><para
>Normally you should not have to download a floppy image again, but if you are experiencing problems it is always useful to verify that the images were downloaded correctly by verifying their md5sums. </para
><para
>Other users have reported that simply rebooting a few times with the same floppy in the floppy drive can lead to a successful boot. This is all due to buggy hardware or firmware floppy drivers. </para>
  </sect2>

  <sect2
><title
>Boot Configuration</title>

<para
>If you have problems and the kernel hangs during the boot process, doesn't recognize peripherals you actually have, or drives are not recognized properly, the first thing to check is the boot parameters, as discussed in <xref linkend="boot-parms"/>. </para
><para
>Often, problems can be solved by removing add-ons and peripherals, and then trying booting again. <phrase arch="x86"
>Internal modems, sound cards, and Plug-n-Play devices can be especially problematic.</phrase
> </para
><para
>If you have a large amount of memory installed in your machine, more than 512M, and the installer hangs when booting the kernel, you may need to include a boot argument to limit the amount of memory the kernel sees, such as <userinput
>mem=512m</userinput
>. </para>
  </sect2>

  <sect2 arch="x86" id="i386-boot-problems">
  <title
>Common &arch-title; Installation Problems</title>
<para
>There are some common installation problems that can be solved or avoided by passing certain boot parameters to the installer. </para
><para
>Some systems have floppies with <quote
>inverted DCLs</quote
>. If you receive errors reading from the floppy, even when you know the floppy is good, try the parameter <userinput
>floppy=thinkpad</userinput
>. </para
><para
>On some systems, such as the IBM PS/1 or ValuePoint (which have ST-506 disk drivers), the IDE drive may not be properly recognized. Again, try it first without the parameters and see if the IDE drive is recognized properly. If not, determine your drive geometry (cylinders, heads, and sectors), and use the parameter <userinput
>hd=<replaceable
>cylinders</replaceable
>,<replaceable
>heads</replaceable
>,<replaceable
>sectors</replaceable
></userinput
>. </para
><para
>If you have a very old machine, and the kernel hangs after saying <computeroutput
>Checking 'hlt' instruction...</computeroutput
>, then you should try the <userinput
>no-hlt</userinput
> boot argument, which disables this test. </para
><para
>Some systems (especially laptops) that have a native resolution that is not a 4:3 ratio (i.e. not for example 800x600 or 1024x768) may have a blank display after the installer has been booted. In that case adding the boot parameter <userinput
>vga=788</userinput
><footnote
> <para
> The parameter <userinput
>vga=788</userinput
> will activate the VESA framebuffer with a resolution of 800x600. This will probably work, but may not be the optimal resolution for your system. A list of supported resolutions can be obtained by using <userinput
>vga=ask</userinput
>, but you should be aware that list may not be complete. </para
> </footnote
> may help. If that does not work, try adding the boot parameter <userinput
>fb=false</userinput
>. </para
><para
>If your screen begins to show a weird picture while the kernel boots, eg. pure white, pure black or colored pixel garbage, your system may contain a problematic video card which does not switch to the framebuffer mode properly. Then you can use the boot parameter <userinput
>fb=false</userinput
> to disable the framebuffer console. Only a reduced set of languages will be available during the installation due to limited console features. See <xref linkend="boot-parms"/> for details. </para>

  <sect3>
  <title
>System Freeze During the PCMCIA Configuration Phase</title>
<para
>Some laptop models produced by Dell are known to crash when PCMCIA device detection tries to access some hardware addresses. Other laptops may display similar problems. If you experience such a problem and you don't need PCMCIA support during the installation, you can disable PCMCIA using the <userinput
>hw-detect/start_pcmcia=false</userinput
> boot parameter. You can then configure PCMCIA after the installation is completed and exclude the resource range causing the problems. </para
><para
>Alternatively, you can boot the installer in expert mode. You will then be asked to enter the resource range options your hardware needs. For example, if you have one of the Dell laptops mentioned above, you should enter <userinput
>exclude port 0x800-0x8ff</userinput
> here. There is also a list of some common resource range options in the <ulink url="http://pcmcia-cs.sourceforge.net/ftp/doc/PCMCIA-HOWTO-1.html#ss1.12"
>System resource settings section of the PCMCIA HOWTO</ulink
>. Note that you have to omit the commas, if any, when you enter this value in the installer. </para>
   </sect3>

   <sect3>
   <title
>System Freeze while Loading USB Modules</title>
<para
>The kernel normally tries to install USB modules and the USB keyboard driver in order to support some non-standard USB keyboards. However, there are some broken USB systems where the driver hangs on loading. A possible workaround may be disabling the USB controller in your mainboard BIOS setup. Another option is passing the <userinput
>nousb</userinput
> parameter at the boot prompt. </para>
   </sect3>
  </sect2>

  <sect2 arch="sparc" id="sparc-boot-problems">
  <title
>Common &arch-title; Installation Problems</title>
<para
>There are some common installation problems that are worth mentioning. </para>
   <sect3>
   <title
>Misdirected video output</title>
<para
>It is fairly common for &arch-title; to have two video cards in one machine, for example an ATI card and a Sun Creator 3D. In some cases, this may result in the video output getting misdirected soon after the system boots. In typical cases, the display will only show: <informalexample
><screen
>
Remapping the kernel... done
Booting Linux...
</screen
></informalexample
> To work around this, you can either pull out one of the video cards, or disable the one not used during the OpenProm boot phase using a kernel parameter. For example, to disable an ATI card, you should boot the installer with <userinput
>video=atyfb:off</userinput
>. </para
><para
>Note that you may also have to manually add this parameter to the silo configuration (edit <filename
>/target/etc/silo.conf</filename
> before rebooting) and, if you installed X11, modify the video driver in <filename
>/etc/X11/xorg.conf</filename
>. </para>
   </sect3>

   <sect3>
   <title
>Failure to Boot or Install from CD-ROM</title>
<para
>Some Sparc systems are notoriously difficult to boot from CD-ROM and even if they do boot, there may be inexplicable failures during the installation. Most problems have been reported with SunBlade systems. </para
><para
>We recommend to install such systems by netbooting the installer. </para>
   </sect3>
  </sect2>

  <sect2 id="kernel-msgs">
  <title
>Interpreting the Kernel Startup Messages</title>

<para
>During the boot sequence, you may see many messages in the form <computeroutput
>can't find <replaceable
>something</replaceable
></computeroutput
>, or <computeroutput
><replaceable
>something</replaceable
> not present</computeroutput
>, <computeroutput
>can't initialize <replaceable
>something</replaceable
></computeroutput
>, or even <computeroutput
>this driver release depends on <replaceable
>something</replaceable
></computeroutput
>. Most of these messages are harmless. You see them because the kernel for the installation system is built to run on computers with many different peripheral devices. Obviously, no one computer will have every possible peripheral device, so the operating system may emit a few complaints while it looks for peripherals you don't own. You may also see the system pause for a while. This happens when it is waiting for a device to respond, and that device is not present on your system. If you find the time it takes to boot the system unacceptably long, you can create a custom kernel later (see <xref linkend="kernel-baking"/>). </para>
  </sect2>


  <sect2 id="problem-report">
  <title
>Reporting Installation Problems</title>
<para
>If you get through the initial boot phase but cannot complete the install, the menu option <guimenuitem
>Save debug logs</guimenuitem
> may be helpful. It lets you store system error logs and configuration information from the installer to a floppy, or download them using a web browser. This information may provide clues as to what went wrong and how to fix it. If you are submitting a bug report, you may want to attach this information to the bug report. </para
><para
>Other pertinent installation messages may be found in <filename
>/var/log/</filename
> during the installation, and <filename
>/var/log/installer/</filename
> after the computer has been booted into the installed system. </para>
  </sect2>

  <sect2 id="submit-bug">
  <title
>Submitting Installation Reports</title>
<para
>If you still have problems, please submit an installation report. We also encourage installation reports to be sent even if the installation is successful, so that we can get as much information as possible on the largest number of hardware configurations. </para
><para
>Note that your installation report will be published in the Debian Bug Tracking System (BTS) and forwarded to a public mailing list. Make sure that you use an e-mail address that you do not mind being made public. </para
><para
>If you have a working Debian system, the easiest way to send an installation report is to install the <classname
>installation-report</classname
> and <classname
>reportbug</classname
> packages (<command
>aptitude install installation-report reportbug</command
>), configure <classname
>reportbug</classname
> as explained in <xref linkend="mail-outgoing"/>, and run the command <command
>reportbug installation-reports</command
>. </para
><para
>Alternatively you can use this template when filling out installation reports, and file the report as a bug report against the <classname
>installation-reports</classname
> pseudo package, by sending it to <email
>submit@bugs.debian.org</email
>. <informalexample
><screen
>
Package: installation-reports

Boot method: &lt;How did you boot the installer? CD? floppy? network?&gt;
Image version: &lt;Full URL to image you downloaded is best&gt;
Date: &lt;Date and time of the install&gt;

Machine: &lt;Description of machine (eg, IBM Thinkpad R32)&gt;
Processor:
Memory:
Partitions: &lt;df -Tl will do; the raw partition table is preferred&gt;

Output of lspci -knn (or lspci -nn):

Base System Installation Checklist:
[O] = OK, [E] = Error (please elaborate below), [ ] = didn't try it

Initial boot:           [ ]
Detect network card:    [ ]
Configure network:      [ ]
Detect CD:              [ ]
Load installer modules: [ ]
Detect hard drives:     [ ]
Partition hard drives:  [ ]
Install base system:    [ ]
Clock/timezone setup:   [ ]
User/password setup:    [ ]
Install tasks:          [ ]
Install boot loader:    [ ]
Overall install:        [ ]

Comments/Problems:

&lt;Description of the install, in prose, and any thoughts, comments
      and ideas you had during the initial install.&gt;
</screen
></informalexample
> In the bug report, describe what the problem is, including the last visible kernel messages in the event of a kernel hang. Describe the steps that you did which brought the system into the problem state. </para>
  </sect2>
 </sect1>
<!--   End of file boot-installer/trouble.xml -->

</chapter>
<!--   End of file boot-installer/boot-installer.xml -->
