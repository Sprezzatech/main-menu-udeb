<?xml version="1.0" encoding="EUC-JP"?>
<!-- retain these comments for translator revision tracking -->
<!-- original version: 43841 -->

<!--
Be careful with the format of this file as it is parsed to generate
the example preconfiguration file.
このファイルをパースしてサンプル事前設定ファイルを生成するので、
形式に注意してください。
In that file all text between <informalexample> tags that have the
attribute 'role="example"' set is included, except if a 'condition'
attribute is in force that does not match the specified release or if an
'arch' attribute is in force that does not match the specified architecture.
このファイルには、'role="example"' 属性が設定された <informalexample>
タグの間のすべてのテキストが含まれています。
'condition' 属性が有効な場合に指定されたリリースに一致しない物や、
'arch' 属性が有効な場合に指定されたアーキテクチャに一致しない物は除かれます。

Currently only a single variant of the example file is generated (for i386).
現在、サンプルファイルは 1 種類 (i386 用) しか生成しません。
(訳注 訳してしまうとサンプルファイルが動作するか分からないので、未訳のままにします)
-->

<appendix id="appendix-preseed">
<!--
<title>Automating the installation using preseeding</title>
-->
<title>preseed を利用したインストールの自動化</title>
<para>

<!--
This appendix explains how to preseed answers to questions in &d-i; to
automate your installation.
-->
本付録は preseed の方法を説明します。
これは &d-i; の質問に回答しておきインストールを自動化するものです。

</para><para>

<!--
The configuration fragments used in this appendix are also available as an
example preconfiguration file from &urlset-example-preseed;.
-->
本付録で使用する設定の断片は、
&urlset-example-preseed; のサンプル事前設定ファイルでも利用できます。

</para>

 <sect1 id="preseed-intro">
<!--
 <title>Introduction</title>
-->
 <title>はじめに</title>
<para>

<!--
Preseeding provides a way to set answers to questions asked during the
installation process, without having to manually enter the answers while
the installation is running. This makes it possible to fully automate most
types of installation and even offers some features not available during
normal installations.
-->
preseed は、インストールの実行中に手動で回答を入力せずに、
インストールプロセス中の質問の答を設定する方法を提供します。
これにより、ほとんどの方法のインストールを自動化し、
さらに通常のインストールでは利用できない特徴もあります。

</para>

  <sect2 id="preseed-methods">
<!--
  <title>Preseeding methods</title>
-->
  <title>preseed の方法</title>
<para>

<!--
There are three methods that can be used for preseeding:
<firstterm>initrd</firstterm>, <firstterm>file</firstterm> and
<firstterm>network</firstterm>. Initrd preseeding will work with any
installation method and supports preseeding of more things, but it requires
the most preparation. File and network preseeding each can be used with
different installation methods.
-->
preseed を利用するには、
<firstterm>initrd</firstterm>, <firstterm>ファイル</firstterm>,
<firstterm>ネットワーク</firstterm> と 3 種類の方法があります。
initrd preseed は、いずれのインストール方法でも動作し、
より多くの preseed をサポートしますが、大量の準備が必要です。
ファイル preseed やネットワーク preseed は、
それぞれインストール方法が異なる場合に使用されます。

</para><para>

<!--
The following table shows which preseeding methods can be used with which
installation methods.
-->
以下の表では、各インストール方法で使用できる preseed 方法を示します。

<informaltable>
<tgroup cols="4">
<thead>
<row>
<!--
  <entry>Installation method</entry><entry>initrd</entry>
  <entry>file</entry><entry>network</entry>
-->
  <entry>インストール方法</entry><entry>initrd</entry>
  <entry>ファイル</entry><entry>ネットワーク</entry>
</row>
</thead>

<tbody>
<row>
  <entry>CD/DVD</entry>
  <entry>yes</entry>
  <entry>yes</entry>
  <entry>yes<footnote id='apx-ps-net'>

  <para>
<!--
  but only if you have network access, and set <literal>preseed/url</literal>
  appropriately
-->
  ネットワークアクセスを行う場合だけでなく、
  適切な <literal>preseed/url</literal> を設定する場合。
  </para>

  </footnote></entry>
</row><row>
  <entry>netboot</entry>
  <entry>yes</entry>
  <entry>no</entry>
  <entry>yes</entry>
</row><row>
<!--
  <entry>hd-media <phrase condition="bootable-usb">(including usb-stick)</phrase></entry>
-->
  <entry>hd-media <phrase condition="bootable-usb">(USB メモリを含む)</phrase></entry>
  <entry>yes</entry>
  <entry>yes</entry>
  <entry>yes<footnoteref linkend='apx-ps-net'/></entry>
</row><row condition="supports-floppy-boot">
<!--
  <entry>floppy based (cd-drivers)</entry>
-->
  <entry>フロッピーベース (CD ドライバ)</entry>
  <entry>yes</entry>
  <entry>yes</entry>
  <entry>yes<footnoteref linkend='apx-ps-net'/></entry>
</row><row condition="supports-floppy-boot">
<!--
  <entry>floppy based (net-drivers)</entry>
-->
  <entry>フロッピーベース (ネットドライバ)</entry>
  <entry>yes</entry>
  <entry>no</entry>
  <entry>yes</entry>
</row><row arch="s390">
  <entry>generic/tape</entry>
  <entry>yes</entry>
  <entry>no</entry>
  <entry>yes</entry>
</row>
</tbody>

</tgroup></informaltable>

</para><para>

<!--
An important difference between the preseeding methods is the point at which
the preconfiguration file is loaded and processed. For initrd preseeding
this is right at the start of the installation, before the first question is
even asked. For file preseeding this is after the CD or CD image has been
loaded. For network preseeding it is only after the network has been
configured.
-->
preseed 方法の重要な違いは、事前設定ファイルを読込・処理するポイントです。
initrd preseed では、インストールの始め (最初の質問が行われる前) に読み込まれます。
ファイル preseed では、CD や CD イメージが読み込まれた後です。
ネットワーク preseed では、ネットワークの設定の後でないと読み込まれません。

</para><para>

<!--
Obviously, any questions that have been processed before the
preconfiguration file is loaded cannot be preseeded (this will include
questions that are only displayed at medium or low priority, like the
first hardware detection run). <xref linkend="preseed-bootparms"/>
offers a way to avoid these questions being asked.
-->
言うまでもなく、事前設定ファイルが読み込まれる前に処理される質問は、
preseed できません。
(最初のハードウェア検出のように、
優先度が中や低でしか表示されない質問も含んでいます)
<xref linkend="preseed-bootparms"/> では、
そういった質問が出ないようにする方法を提供しています。

</para><para>

<!--
In order to avoid the questions that would normally appear before the
preseeding occurs, you can start the installer in <quote>auto</quote>
mode. This delays questions that would normally be asked too early for
preseeding (i.e. language, country and keyboard selection) until after
the network comes up, thus allowing them to be preseeded. It also runs
the installation in crtitical priority, which avoids many unimportant
questions. See <xref linkend="preseed-auto"/> for details.
-->
preseed が起動する前に、通常現れる質問を回避するのに、
<quote>自動</quote> モードでインストーラを起動できます。
これによりネットワークの設定が終わるまで、preseed の前に行われる質問 
(言語、国、キーボード選択など) を遅らせ、preseed にその質問を含められます。
また、インストールの優先度を最重要で行うため、
大量にある重要でない質問を回避できます。
詳細は <xref linkend="preseed-auto"/> をご覧ください。

</para>
  </sect2>

  <sect2 id="preseed-limitations">
<!--
  <title>Limitations</title>
-->
  <title>制限</title>
<para>

<!--
Although most questions used by &d-i; can be preseeded using this method,
there are some notable exceptions. You must (re)partition an entire disk
or use available free space on a disk; it is not possible to use existing
partitions.
-->
&d-i; で行われる質問のほとんどはこの方法で preseed できますが、
いくつか注目すべき例外があります。
ディスク全体を (再度) パーティション分割するか、
ディスクの空き領域を利用しなければなりません。
つまり既存のパーティションを利用できないと言うことです。

</para>
  </sect2>

<!-- Joeyh feels this is too technical, so leave it out for now
     Joeyh は技術的すぎると感じています。現在この項は外しています。
     (訳注)なので訳を省略します。
  <sect2 id="preseed-debconf">
  <title>Debconf basics</title>
<para>

Preseeding makes use of the <classname>debconf</classname> framework. This
framework is the preferred mechanism used in Debian to interact with the user
when configuring packages and also forms the heart of &d-i;.
In the <classname>debconf</classname> framework questions or dialogs are
based on <firstterm>templates</firstterm>. There are different types of
templates for different types of questions. The actual questions are
<quote>generated</quote> from templates at runtime;  multiple questions can
use the same template.

</para><para>

The following types of templates are relevant for preseeding.

</para>

<itemizedlist spacing="compact">
<listitem><para>
  string: allows the user to type any value
</para></listitem>
<listitem><para>
  password: similar to string but the value typed is not displayed
</para></listitem>
<listitem><para>
  boolean: for yes/no or true/false type of questions
</para></listitem>
<listitem><para>
  select: allows the user to select one option from a list
</para></listitem>
<listitem><para>
  multiselect: allows the user to select zero, one or more options from a list
</para></listitem>
<listitem><para>
  note: used to display a message
</para></listitem>
</itemizedlist>

<para>

In &d-i; templates are stored in a readable file
<filename>/var/cache/debconf/templates.dat</filename>. This file contains all fixed
text and all translations. It can also contain a default value for the
template. The fixed text can include variables that will be replaced at
runtime.

</para><para>

Another readable file <filename>/var/cache/debconf/questions.dat</filename>
is used to store the values for variables and the answers given to questions.
A question always refers to the template used to ask it. For obvious
security reasons the values for questions of type <quote>password</quote>
are stored in a separate, non-readable file in the same directory.

</para>
  </sect2>
-->
 </sect1>


 <sect1 id="preseed-using">
<!--
 <title>Using preseeding</title>
-->
 <title>preseed の利用</title>
<para>

<!--
You will first need to create a preconfiguration file and place it in
the location from where you want to use it. Creating the preconfiguration file
is covered later in this appendix. Putting it in the correct location is fairly
straightforward for network preseeding or if you want to read the file off
a floppy or usb-stick. If you want to include the file on a CD or DVD, you
will have to remaster the ISO image. How to get the preconfiguration file
included in the initrd is outside the scope of this document; please consult
the developers' documentation for &d-i;.
-->
事前設定ファイルを最初に作成し、使用する場所に配置する必要があります。
事前設定ファイルの作成は本付録で後ほど扱います。
ネットワーク preseed の場合や、
ファイルをフロッピーや USB メモリから読み込む場合、
簡単に正しい位置に事前設定ファイルを配置できます。
CD や DVD にファイルを含めたければ、
ISO イメージを再度マスタリングする必要があります。
initrd に含まれている事前設定ファイルを取り出す方法は、
この文書では扱いません。&d-i; の開発者向け文書を当たってください。

</para><para>

<!--
An example preconfiguration file that you can use as basis for your own
preconfiguration file is available from &urlset-example-preseed;. This file is
based on the configuration fragments included in this appendix.
-->
事前設定ファイルの手本にできる事前設定ファイルのサンプルは、
&urlset-example-preseed; から取得できます。
このファイルは、この付録にある設定の断片を元にしています。

</para>

  <sect2 id="preseed-loading">
<!--
  <title>Loading the preconfiguration file</title>
-->
  <title>事前設定ファイルの読み込み</title>
<para>

<!--
If you are using initrd preseeding, you only have to make sure a file named
<filename>preseed.cfg</filename> is included in the root directory of the
initrd. The installer will automatically check if this file is present and
load it.
-->
initrd preseed を使用する場合、<filename>preseed.cfg</filename>
というファイルが initrd のルートディレクトリに確実にある必要があります。
インストーラは、このファイルがあるか自動的にチェックし、読み込みます。

</para><para>

<!--
For the other preseeding methods you need to tell the installer what file
to use when you boot it. This is normally done by passing the kernel a boot
parameter, either manually at boot time or by editing the bootloader
configuration file (e.g. <filename>syslinux.cfg</filename>) and adding the
parameter to the end of the append line(s) for the kernel.
-->
他の preseed 方法では、ブート時にどのファイルを読み込むか、
インストーラに指定する必要があります。
通常、カーネルのブートパラメータで渡して行います。
これは起動時に手動で与えるか、
ブートローダ設定ファイル (例: <filename>syslinux.cfg</filename>) を編集し、
カーネルへの append 行の最後にパラメータを追加して与えます。

</para><para>

<!--
If you do specify the preconfiguration file in the bootloader configuration,
you might change the configuration so you don't need to hit enter to boot the
installer. For syslinux this means setting the timeout to <literal>1</literal>
in <filename>syslinux.cfg</filename>.
-->
ブートローダの設定で事前設定ファイルを指定する場合、
設定を変更すれば、インストーラの起動時に ENTER を押す必要はありません。
syslinux ではこの設定をするのに、
<filename>syslinux.cfg</filename> でタイムアウトを <literal>1</literal> にします。

</para><para>

<!--
To make sure the installer gets the right preconfiguration file, you can
optionally specify a checksum for the file. Currently this needs to be a
md5sum, and if specified it must match the preconfiguration file or the
installer will refuse to use it.
-->
インストーラが確実に正しい事前設定ファイルを取得するのに、
このファイルのチェックサムを指定できます。
現在、これには md5sum 値の指定が必要です。
指定した値と事前設定ファイルの値は一致しなければなりません。
一致しない場合は、インストーラは事前設定ファイルを使用しません。

</para>

<!--
<informalexample><screen>
Boot parameters to specify:
- if you're netbooting:
  preseed/url=http://host/path/to/preseed.cfg
  preseed/url/checksum=5da499872becccfeda2c4872f9171c3d

- if you're booting a remastered CD:
  preseed/file=/cdrom/preseed.cfg
  preseed/file/checksum=5da499872becccfeda2c4872f9171c3d

- if you're installing from USB media (put the preconfiguration file in the
  toplevel directory of the USB stick):
  preseed/file=/hd-media/preseed.cfg
  preseed/file/checksum=5da499872becccfeda2c4872f9171c3d
</screen></informalexample>
-->
<informalexample><screen>
ブートパラメータの設定:
- netboot の場合:
  preseed/url=http://host/path/to/preseed.cfg
  preseed/url/checksum=5da499872becccfeda2c4872f9171c3d

- リマスタリングした CD で起動する場合:
  preseed/file=/cdrom/preseed.cfg
  preseed/file/checksum=5da499872becccfeda2c4872f9171c3d

- USB メディアで起動する場合 (事前設定ファイルを USB メモリの
  トップレベルディレクトリに置くこと):
  preseed/file=/hd-media/preseed.cfg
  preseed/file/checksum=5da499872becccfeda2c4872f9171c3d
</screen></informalexample>

<para>

<!--
Note that <filename>preseed/url</filename> can be shortened to just
<filename>url</filename> and <filename>preseed/file</filename> to just
<filename>file</filename> when they are passed as boot parameters.
-->
ブートパラメータに渡す際に、
<filename>preseed/url</filename> は <filename>url</filename> に、
<filename>preseed/file</filename> は <filename>file</filename> に
短縮できることに注意してください。

</para>
  </sect2>
  
  <sect2 id="preseed-bootparms">
<!--
  <title>Using boot parameters to preseed questions</title>
-->
  <title>preseed が質問するブートパラメータの利用</title>
<para>

<!--
If a preconfiguration file cannot be used to preseed some steps, the
install can still be fully automated, since you can pass preseed values on
the command line when booting the installer.
-->
事前設定ファイルを preseed の各段階で使用できない場合でも、
preseed の値をインストーラ起動時のコマンドラインに与えることで、
インストールを自動で行えます。

</para><para>

<!--
Boot parameters can also be used if you do not really want to use preseeding,
but just want to provide an answer for a specific question. Some examples where
this can be useful are documented elsewhere in this manual.
-->
preseed を使用せず指定した質問への答を設定したい場合にも、
ブートパラメータを使用します。
有用な使用法のサンプルが、このマニュアルの別の場所にあります。

</para><para>

<!--
To set a value to be used inside &d-i;, just pass
<userinput><replaceable>path/to/variable</replaceable>=<replaceable>value</replaceable></userinput>
for any of the preseed variables listed in the examples in this appendix.
If a value is to be used to configure packages for the target system, you
will need to prepend the <firstterm>owner</firstterm><footnote>

<para>
The owner of a debconf variable (or template) is normally the name of the
package that contains the corresponding debconf template. For variables
used in the installer itself the owner is <quote>d-i</quote>.
Templates and variables can have more than one owner which helps to
determine whether they can be removed from the debconf database if the
package is purged.
</para>

</footnote> of the variable as in
<userinput><replaceable>owner</replaceable>:<replaceable>path/to/variable</replaceable>=<replaceable>value</replaceable></userinput>.
If you don't specify the owner, the value for the variable will not be
copied to the debconf database in the target system and thus remain unused
during the configuration of the relevant package.
-->
&d-i; 内部で使用する値をセットするには、
<userinput><replaceable>path/to/variable</replaceable>=<replaceable>value</replaceable></userinput>
のように本付録の例にある preseed 変数を渡すだけです。
値がターゲットシステムのパッケージを設定することがある場合、
<firstterm>owner</firstterm><footnote>

<para>
debconf 変数 (やテンプレート) の所有者 (owner) は、
debconf テンプレートに含まれるように、通常パッケージ名です。
インストーラ自体が使用する値は、<quote>d-i</quote> になっています。
テンプレートや変数は、複数の owner を持て、パッケージを完全削除する際に 
debconf データベースから削除できるかどうかを決定するのに利用されます。
</para>

</footnote> 変数を、あらかじめ用意し、
<userinput><replaceable>owner</replaceable>:<replaceable>path/to/variable</replaceable>=<replaceable>value</replaceable></userinput>
で使用する必要があります。
owner を指定しない場合、
変数の値はターゲットシステムの debconf データベースにコピーされず、
関連パッケージの設定中使用されません。

</para><para>

<!--
Note that some variables that are frequently set at the boot prompt
have a shorter alias. If an alias is available, it is used in the
examples in this appendix instead of the full variable.  In
particular, the <literal>preseed/url</literal> variable has been
aliased as <literal>url</literal> and has some extra magic to allow
shortened urls to be used. Another example is the <literal>tasks</literal>
alias, which translates to <literal>tasksel:tasksel/first</literal>.
-->
ブートプロンプトによく使用される変数には、
短いエイリアスがあることに注意してください。
有効なエイリアスは、本サンプル内で完全な変数名の代わりに使用しています。
特に、<literal>preseed/url</literal> 変数には <literal>url</literal> 
というエイリアスがあり、短い URL が使えることによる技がいくつかあります。
もう一つ、<literal>tasks</literal> というエイリアスがあり、
これは <literal>tasksel:tasksel/first</literal> に変換されます。

</para><para>

<!--
A <quote>-\-</quote> in the boot options has special meaning. Kernel
parameters that appear after the last <quote>-\-</quote> may be copied
into the bootloader configuration for the installed system (if supported by
the installer for the bootloader). The installer will automatically filter
out any options (like preconfiguration options) that it recognizes.
-->
ブートオプションの <quote>--</quote> は特別な意味を持ちます。
最後の <quote>--</quote> に続きカーネルパラメータがあると、
(インストーラがサポートするブートローダの場合) 
インストール済みのブートローダの設定にコピーされます。
インストーラは、(事前設定オプションのような) オプションを認識すると、
自動的にフィルタをかけます。

</para>
<note><para>

<!--
Current linux kernels (2.6.9 and later) accept a maximum of 32 command line
options and 32 environment options, including any options added by default
for the installer. If these numbers are exceeded, the kernel will panic
(crash). (For earlier kernels, these numbers were lower.)
-->
現在の Linux カーネル (2.6.9 以降) では、
最大 (インストーラがデフォルトで指定するオプションを含め) 
コマンドラインオプションを 32 個、環境オプションを 32 個受け取れます。
この数を超えると、カーネルはパニック (クラッシュ) してしまいます。
(初期のカーネルではこの数字がもっと少ないです)

</para></note>
<para>

<!--
For most installations some of the default options in your bootloader
configuration file, like <literal>vga=normal</literal>, may be safely
removed which may allow you to add more options for preseeding.
-->
ほとんどのインストールでは、ブートローダ設定ファイルにある
(<literal>vga=normal</literal> のような) 
デフォルトオプションを安全に削除できるかもしれません。
これにより preseed 用にもっとオプションを追加できます。

</para>
<note><para>

<!--
It may not always be possible to specify values with spaces for boot
parameters, even if you delimit them with quotes.
-->
ブートパラメータに空白を含んだ値を設定するのは、
引用符で囲んだとしてもいつもうまくいくとは限りません。

</para></note>
  </sect2>
  
  <sect2 id="preseed-auto">
<!--
  <title>Auto mode</title>
-->
  <title>自動モード</title>
<para>

<!--
There are several features of Debian Installer that combine to allow
fairly simple command lines at the boot prompt to result in
arbitrarily complex customized automatic installs.  To illustrate
this, here are some examples that can be used at the boot prompt:
-->
かなりシンプルなコマンドラインをブートプロンプトに与え、
任意の複雑なカスタマイズを自動インストールに対して行う 
Debian Installer の機能があります。
これを説明するため、以下にブートプロンプトで使用できる例を示します。

<informalexample><screen>
auto url=autoserver
</screen></informalexample>

<!--
This relies on there being a DHCP server that will get the machine to
the point where <literal>autoserver</literal> can be resolved by DNS,
perhaps after adding the local domain if that was provided by DHCP.
If this was done at a site where the domain is
<literal>example.com</literal>, and they have a reasonably sane DHCP
setup, it would result in the preseed file being retrieved from
<literal>http://autoserver.example.com/d-i/etch/./preseed.cfg</literal>.
-->
これは、DNS で <literal>autoserver</literal> の名前解決ができ 
(おそらく DHCP でローカルドメイン追加後)、
そのマシンが DHCP サーバであることを前提にしています。
<literal>example.com</literal> というドメインのサイトが、
普通のまともな DHCP を設定していれば、
<literal>http://autoserver.example.com/d-i/etch/./preseed.cfg</literal>
から、preseed ファイルを取得するようになります。

</para><para>

<!--
The last part of that url (<literal>d-i/etch/./preseed.cfg</literal>)
is taken from <literal>auto-install/defaultroot</literal>. By default
this includes the directory <literal>etch</literal> to allow future versions
to specify their own codename and let people migrate forwards in a
controlled manner.  The <literal>/./</literal> bit is used to indicate
a root, relative to which subsequent paths can be anchored (for use in
preseed/include and preseed/run).  This allows files to be specified
either as full URLs, paths starting with / that are thus anchored, or
even paths relative to the location where the last preseed file was
found.  This can be used to construct more portable scripts where an
entire hierarchy of scripts can be moved to a new location without
breaking it, for example copying the files onto a USB stick when they
started out on a web server.  In this example, if the preseed file
sets <literal>preseed/run</literal> to
<literal>/scripts/late_command.sh</literal> then the file will be
fetched from
<literal>http://autoserver.example.com/d-i/etch/./scripts/late_command.sh</literal>.
-->
URL (<literal>d-i/etch/./preseed.cfg</literal>) の最後の部分は、
<literal>auto-install/defaultroot</literal> から取られています。
デフォルトでは、将来のバージョンでコードネームを指定して移行していけるように、
<literal>etch</literal> ディレクトリが含まれています。
<literal>/./</literal> は、その後に続くパスが確定するように、
ルートからの相対パスを示します (preseed/include や preseed/run で使用)。
これにより、完全な URLや / で始まるパス、
前回 preseed が見つかった場所からの相対パスでファイルを指定できます。
スクリプトの階層構造を壊さずに新しい場所に移動できる 
(例えば ウェブサーバで開始し、USB メモリにコピーする)、
よりポータブルなスクリプトを構成するのに便利です。
このサンプルでは、preseed ファイルの <literal>preseed/run</literal> に 
<literal>/scripts/late_command.sh</literal> が設定されている場合、
<literal>http://autoserver.example.com/d-i/etch/./scripts/late_command.sh</literal>
からファイルを取得します。

</para><para>

<!--
If there is no local DHCP or DNS infrastructure, or if you do not want to
use the default path to <filename>preseed.cfg</filename>, you can still
use an explicit url, and if you don't use the <literal>/./</literal>
element it will be anchored to the start of the path (i.e. the third
<literal>/</literal> in the URL).  Here is an example that requires minimal
support from the local network infrastructure:
-->
手元に DHCP や DNS のインフラがない場合や、
<filename>preseed.cfg</filename> のデフォルトパスを使用したくない場合でも、
きちんとした URL を使用でき、<literal>/./</literal> 要素を使用しない場合は、
パスの開始点を決定できます (例えば URL の 3 つ目の <literal>/</literal>)。
以下は、手元のネットワークインフラから最低限必要な物のサンプルです。

<informalexample><screen>
auto url=<replaceable>http://192.168.1.2/path/to/mypreseed.file</replaceable>
</screen></informalexample>

<!--
The way this works is that:
-->
この方法は次のように動作します。
<itemizedlist spacing="compact">
<listitem><para>
<!--
if the URL is missing a protocol, http is assumed,
-->
URL が見つからない場合、http だと仮定します。
</para></listitem>
<listitem><para>
<!--
if the hostname section contains no periods, it has the domain derived
from DHCP appended to it, and
-->
ホスト名セクションにピリオドがなければ、DHCP から引き出して追加します。
</para></listitem>
<listitem><para>
<!--
if there's no <literal>/</literal>'s after the hostname, then the default
path is added.
-->
ホスト名の後に <literal>/</literal> がなければ、デフォルトパスを追加します。
</para></listitem>
</itemizedlist>

</para><para>

<!--
In addition to specifying the url, you can also specify settings that
do not directly affect the behavior of &d-i; itself, but can be passed
through to scripts specified using <literal>preseed/run</literal>
in the loaded preseed file.  At present, the only example of
this is <literal>auto-install/classes</literal>, which has an alias
<literal>classes</literal>.  This can be used thus:
-->
URL を指定するのに加えて、
&d-i; 自身の振る舞いには直接影響しない設定も追加できますが、
読み込んだ preseed ファイルの <literal>preseed/run</literal> で指定した、
スクリプトに渡すことができます。
現在のところ、<literal>classes</literal> というエイリアスを持つ、
<literal>auto-install/classes</literal> のサンプルのみです。
以下のように使用します。

<informalexample><screen>
auto url=<replaceable>example.com</replaceable> classes=<replaceable>class_A;class_B</replaceable>
</screen></informalexample>

<!--
The classes could for example denote the type of system to be installed,
or the localization to be used.
-->
classes にはこのサンプルでは、インストールするシステムのタイプや、
地域化を指定するのに使用できます。

</para><para>

<!--
It is of course possible to extend this concept, and if you do, it is
reasonable to use the auto-install namespace for this. So one might have
something like <literal>auto-install/style</literal> which is then used
in your scripts.  If you feel the need to do this, please mention it on
the <email>debian-boot@lists.debian.org</email> mailing list so that we
can avoid namespace conflicts, and perhaps add an alias for the parameter
for you.
-->
この概念はもちろん拡張でき、もしそうする場合、
auto-install 名前空間を使用するのが妥当です。
ですから、次にあなたのスクリプトで使用する 
<literal>auto-install/style</literal> のような物かもしれません。
これが必要だと思うのなら、名前空間の衝突を避けるために
<email>debian-boot@lists.debian.org</email> メーリングリストで提案してください。
おそらくパラメータのエイリアスが追加されます。

</para><para>

<!--
The <literal>auto</literal> boot label is not yet defined on all
architectures. The same effect may be achieved by simply adding the two
parameters <literal>auto=true priority=critical</literal> to the kernel
command line.  The <literal>auto</literal> parameter is an alias for
<literal>auto-install/enabled</literal> and controls the delay of the
locale and keyboard questions until after there has been a chance to
preseed them, while <literal>priority</literal> is an alias for
<literal>preseed/priority</literal> and setting it to
<literal>critical</literal> stops any questions with a lower priority
from being asked.
-->
<literal>auto</literal> ブートラベルは、
どのアーキテクチャでもまだ定義されていません。
カーネルのコマンドラインに、単にパラメータを 2 つ 
<literal>auto=true priority=critical</literal> を追加すると、
同じ効果を得られます。
<literal>auto</literal> パラメータは <literal>auto-install/enabled</literal> 
のエイリアスで、ロケールやキーボードの質問を preseed で行えるよう遅らせます。
また、<literal>priority</literal> は <literal>preseed/priority</literal> 
のエイリアスで、<literal>critical</literal> に設定すると、
優先度の低い質問を抑制するようになります。

</para><para>

<!--
Additional options that may be of interest while attempting to
automate an install while using DHCP are: <literal>interface=auto
netcfg/dhcp_timeout=60</literal> which makes the machine choose the
first viable NIC and be more patient about getting a reply to its
DHCP query.
-->
DHCP を使用してインストールの自動化を行う際に、
関連する追加オプションは以下の通りです。<literal>interface=auto
netcfg/dhcp_timeout=60</literal> これはマシンが最初の使用可能 NIC を選択し、
DHCP 問い合わせに対する返答をもっと我慢強く待つようになります。

</para>
  </sect2>

  <sect2 id="preseed-aliases">
<!--
  <title>Aliases useful with preseeding</title>
-->
  <title>preseed で利用できるエイリアス</title>
<para>

<!--
The following aliases can be useful when using (auto mode) preseeding.
-->
以下のエイリアスが (自動モード) preseed を使用する際に利用できます。

</para>

<!-- Setting column width does not seem to work; use non-breaking spaces
     to separate columns a bit -->
<informaltable frame="none">
<tgroup cols="2"><tbody>
<row><entry>auto</entry><entry>auto-install/enabled</entry></row>
<row><entry>classes</entry><entry>auto-install/classes</entry></row>
<row><entry>fb</entry><entry>debian-installer/framebuffer</entry></row>
<row><entry>locale</entry><entry>debian-installer/locale</entry></row>
<row><entry>priority</entry><entry>debconf/priority</entry></row>
<row><entry>file</entry><entry>preseed/file</entry></row>
<row><entry>url</entry><entry>preseed/url</entry></row>
<row><entry>interface</entry><entry>netcfg/choose_interface</entry></row>
<row><entry>hostname&nbsp;&nbsp;&nbsp;</entry><entry>netcfg/get_hostname</entry></row>
<row><entry>domain</entry><entry>netcfg/get_domain</entry></row>
<row><entry>protocol</entry><entry>mirror/protocol</entry></row>
<row><entry>suite</entry><entry>mirror/suite</entry></row>
</tbody></tgroup>
</informaltable>

  </sect2>
  
  <sect2 id="preseed-dhcp">
<!--
  <title>Using a DHCP server to specify preconfiguration files</title>
-->
  <title>事前設定ファイルを指定するための DHCP の利用方法</title>
<para>

<!--
It's also possible to use DHCP to specify a preconfiguration file to download
from the network. DHCP allows specifying a filename. Normally this is a file
to netboot, but if it appears to be an URL then installation media that
support network preseeding will download the file from the URL and use it as a
preconfiguration file. Here is an example of how to set it up in the dhcpd.conf
for version 3 of the ISC DHCP server (the dhcp3-server Debian package).
-->
事前設定ファイルをネットワークからダウンロードするよう指定するのに、
DHCP も使用できます。DHCP はファイル名の指定ができます。
通常これは netboot のファイルですが、URL 形式になっていると、
ネットワーク preseed をサポートするインストールメディアが、
URL からファイルをダウンロードし、事前設定ファイルとして使用します。
以下は、ISC DHCP サーバのバージョン 3 用 dhcpd.conf で設定するサンプルです。

</para>

<informalexample><screen>
if substring (option vendor-class-identifier, 0, 3) = "d-i" {
    filename "http://host/preseed.cfg";
}
</screen></informalexample>

<para>

<!--
Note that the above example limits this filename to DHCP clients that identify
themselves as "d-i", so it will not affect regular DHCP clients, but only
the installer. You can also put the text in a stanza for only one particular
host to avoid preseeding all installs on your network.
-->
上記の例は、
"d-i" を名乗る DHCP クライアントにこのファイル名を渡すよう制限されており、
通常の DHCP クライアントではなく、
インストーラにのみ影響を与えることに注意してください。
この文字列で、ネットワーク上の全マシンに preseed でインストールするのではなく、
特定のホストに対して行うようにもできます。

</para><para>

<!--
A good way to use the DHCP preseeding is to only preseed values specific to
your network, such as the Debian mirror to use. This way installs on your
network will automatically get a good mirror selected, but the rest of the
installation can be performed interactively. Using DHCP preseeding to fully
automate Debian installs should only be done with care.
-->
DHCP preseed を使用するよい方法は、自分のネットワークには、
Debian ミラーサイトのような preseed の値のみ指定することです。
自分のネットワークにこの方法でインストールすると、
選択したよいミラーサイトから自動で取得しますが、
インストールの残りのプロセスはインタラクティブに行われます。
DHCP preseed を用いた Debian の完全自動インストールは、
充分注意しなければ行うべきではありません。

</para>
  </sect2>
 </sect1>


 <sect1 id="preseed-creating">
<!--
 <title>Creating a preconfiguration file</title>
-->
 <title>事前設定ファイルの作成</title>
<para>

<!--
The preconfiguration file is in the format used by the
<command>debconf-set-selections</command> command. The general format of
a line in a preconfiguration file is:
-->
事前設定ファイルのフォーマットは、<command>debconf-set-selections</command>
コマンドで使用されるものと同じです。
事前設定ファイルの行の一般的なフォーマットは以下のようになります。

<!--
<informalexample><screen>
&lt;owner&gt; &lt;question name&gt; &lt;question type&gt; &lt;value&gt;
</screen></informalexample>
-->
<informalexample><screen>
&lt;所有者&gt; &lt;質問名&gt; &lt;質問タイプ&gt; &lt;値&gt;
</screen></informalexample>

</para><para>

<!--
There are a few rules to keep in mind when writing a preconfiguration file.
-->
事前設定ファイルを記述する際には、
ちょっとした規則があると気に留めておいてください

</para>

<itemizedlist>
<listitem><para>
<!--
  Put only a single space or tab between type and value: any additional
  whitespace will be interpreted as belonging to the value.
-->
  型と値の間には、空白かタブを 1 つだけおいてください。
  空白を追加すると、値の一部として解釈されます。
</para></listitem>
<listitem><para>
<!--
  A line can be split into multiple lines by appending a backslash
  (<quote><literal>\</literal></quote>) as the line continuation character.
  A good place to split a line is after the question name; a bad place is
  between type and value.
-->
  行継続文字としてバックスラッシュ (<quote><literal>\</literal></quote>) 
  を付けて複数行に分割できます。
  質問名の後で分割するのが適当でしょう。
  型と値の間はよくありません。
</para></listitem>
<listitem><para>
<!--
  Most questions need to be preseeded using the values valid in English and
  not the translated values. However, there are some questions (for example
  in <classname>partman</classname>) where the translated values need to be
  used.
-->
  ほとんどの質問では、訳した値ではなく英語の値を指定する必要がありますが、
  (<classname>partman</classname> など) 
  訳した値を使用できる質問もあります。
</para></listitem>
<listitem><para>
<!--
  Some questions take a code as value instead of the English text that is
  shown during installation.
-->
  質問の中には、インストール中に表示される英語のテキストの代わりに、
  コードを取るものがあります。
</para></listitem>
</itemizedlist>

<para>

<!--
The easiest way to create a preconfiguration file is to use the example file
linked in <xref linkend="preseed-contents"/> as basis and work from there.
-->
事前設定ファイルを作成する簡単な方法は、<xref linkend="preseed-contents"/> 
にあるサンプルファイルを元にして作業することです。

</para><para>

<!--
An alternative method is to do a manual installation and then, after
rebooting, use the <command>debconf-get-selections</command> from the
<classname>debconf-utils</classname> package to dump both the debconf
database and the installer's cdebconf database to a single file:
-->
その他には、手動インストールを行い、再起動してから 
<classname>debconf-utils</classname> パッケージの
<command>debconf-get-selections</command> を使用します。
以下のように debconf データベースとインストーラの cdebconf データベースを
1 ファイルに出力してください。

<informalexample><screen>
$ debconf-get-selections --installer &gt; <replaceable>file</replaceable>
$ debconf-get-selections &gt;&gt; <replaceable>file</replaceable>
</screen></informalexample>

</para><para>

<!--
However, a file generated in this manner will have some items that should
not be preseeded, and the example file is a better starting place for most
users.
-->
しかし、この方法で生成したファイルでは preseed されない項目があります。
ほとんどのユーザはサンプルファイルから始めるのがよいでしょう。

</para>

<note><para>

<!--
This method relies on the fact that, at the end of the installation, the
installer's cdebconf database is saved to the installed system in
<filename>/var/log/installer/cdebconf</filename>. However, because the
database may contain sensitive information, by default the files are only
readable by root.
-->
この方法は、インストーラの cdebconf データベースが、
インストールしたシステムの <filename>/var/log/installer/cdebconf</filename> 
に保存されているのを前提にしています。
しかし、データベースに機密情報が含まれる可能性がありますので、
デフォルトでは root にのみ読み込みが許可されています。

</para><para>

<!--
The directory <filename>/var/log/installer</filename> and all files in it
will be deleted from your system if you purge the package
<classname>installation-report</classname>.
-->
<filename>/var/log/installer</filename> ディレクトリとその中のファイルは、
<classname>installation-report</classname> パッケージを完全削除することで、
削除されます。

</para></note>

<para>

<!--
To check possible values for questions, you can use <command>nano</command>
to examine the files in <filename>/var/lib/cdebconf</filename> while an
installation is in progress. View <filename>templates.dat</filename> for
the raw templates and <filename>questions.dat</filename> for the current
values and for the values assigned to variables.
-->
有効な質問の値をチェックするのに、
インストール中に <filename>/var/lib/cdebconf</filename> のファイルを、
<command>nano</command> を使用して確認できます。
生のテンプレートは <filename>templates.dat</filename> を、
現在の値や変数に割り当てられた値は <filename>questions.dat</filename> 
を確認してください。

</para><para>

<!--
To check if the format of your preconfiguration file is valid before performing
an install, you can use the command <command>debconf-set-selections -c
<replaceable>preseed.cfg</replaceable></command>.
-->
インストールを実行する前に、
事前設定ファイルのフォーマットが適切かどうかを調べるには、
<command>debconf-set-selections -c
<replaceable>preseed.cfg</replaceable></command> が使えます。

</para>
 </sect1>


 <sect1 id="preseed-contents">
<!--
 <title>Contents of the preconfiguration file</title>
-->
 <title>事前設定ファイルの内容</title>
<para>

<!--
The configuration fragments used in this appendix are also available as an
example preconfiguration file from &urlset-example-preseed;.
-->
本付録で使用する設定の断片は、
&urlset-example-preseed; のサンプル事前設定ファイルでも利用できます。

</para><para>

<!--
Note that this example is based on an installation for the Intel x86
architecture. If you are installing a different architecture, some of the
examples (like keyboard selection and bootloader installation) may not be
relevant and will need to be replaced by debconf settings appropriate for
your architecture.
-->
本サンプルは、
Intel x86 アーキテクチャ用インストールを元にしていることに注意してください。
他のアーキテクチャにインストールする場合、
サンプルのいくつか (キーボードの選択やブートローダの選択など) 
は適切でないかもしれませんので、
そのアーキテクチャ用に適切な debconf 設定で置き換える必要があるでしょう。

</para>
 
  <sect2 id="preseed-l10n">
<!--
  <title>Localization</title>
-->
  <title>地域化</title>
<para>

<!--
Setting localization values will only work if you are using initrd preseeding.
With all other methods the preconfiguration file will only be loaded after
these questions have been asked.
-->
地域化の設定値は initrd preseed を利用しているときのみ動作します。
他のすべての方法では、
この質問をされた後にしか事前設定ファイルを読み込めません。

</para><para>

<!--
The locale can be used to specify both language and country.
To specify the locale as a boot parameter, use
<userinput>locale=<replaceable>en_US</replaceable></userinput>.
-->
ロケールは言語と国を両方指定します。
ブートパラメータでロケールを指定するには、
<userinput>locale=<replaceable>en_US</replaceable></userinput>
としてください。

<informalexample role="example"><screen>
# Locale sets language and country.
d-i debian-installer/locale string en_US
</screen></informalexample>

</para><para>

<!--
Keyboard configuration consists of selecting a keyboard architecture and a
keymap. In most cases the correct keyboard architecture is selected by
default, so there's normally no need to preseed it. The keymap must
be valid for the selected  keyboard architecture.
-->
キーボード設定は、
キーボードアーキテクチャとキーマップを選択することから成っています。
ほとんどの場合、正しいキーボードアーキテクチャはデフォルトで選択されています。
そのため、通常 preseed する必要はありません。
キーマップは選択したキーボードアーキテクチャで、有効でなくてはなりません。

<informalexample role="example"><screen>
# Keyboard selection.
#d-i console-tools/archs select at
d-i console-keymaps-at/keymap select us
# Example for a different keyboard architecture
#d-i console-keymaps-usb/keymap select mac-usb-us
</screen></informalexample>

</para><para>

<!--
To skip keyboard configuration, preseed
<classname>console-tools/archs</classname> with
<userinput>skip-config</userinput>.
This will result in the kernel keymap remaining active.
-->
キーボード設定をスキップするには、
<classname>console-tools/archs</classname> を 
<userinput>skip-config</userinput> と preseed してください。
これにより、カーネルのキーマップが有効になったままとなります。

</para>

<note><para>

<!--
The changes in the input layer for 2.6 kernels have made the keyboard
architecture virtually obsolete. For 2.6 kernels normally a <quote>PC</quote>
(<userinput>at</userinput>) keymap should be selected.
-->
カーネル 2.6 では入力レイヤが変更され、
キーボードアーキテクチャは事実上時代遅れです。
カーネル 2.6 では通常、<quote>PC</quote> (<userinput>at</userinput>) 
キーマップが既に選択されています。

</para></note>
  </sect2>

  <sect2 id="preseed-network">
<!--
  <title>Network configuration</title>
-->
  <title>ネットワーク設定</title>
<para>

<!--
Of course, preseeding the network configuration won't work if you're
loading your preconfiguration file from the network. But it's great when
you're booting from CD or USB stick. If you are loading preconfiguration
files from the network, you can pass network config parameters by using
kernel boot parameters.
-->
もちろん、ネットワークから事前設定ファイルを読み込む場合、
preseed のネットワーク設定は動作しません。
しかし、CD や USB メモリから起動するときには重要です。
ネットワークから事前設定ファイルを読み込む場合、
ネットワーク設定パラメータは、カーネルブートパラメータで渡すことになります。

</para><para>

<!--
If you need to pick a particular interface when netbooting before loading
a preconfiguration file from the network, use a boot parameter such as
<userinput>interface=<replaceable>eth1</replaceable></userinput>.
-->
ネットワークから事前設定ファイルを読み込む前に netboot するとき、
特定のインターフェースを選ぶ必要があるなら、
<userinput>interface=<replaceable>eth1</replaceable></userinput>
のようにブートパラメータを使用してください。

</para><para>

<!--
Although preseeding the network configuration is normally not possible when
using network preseeding (using <quote>preseed/url</quote>), you can use
the following hack to work around that, for example if you'd like to set a
static address for the network interface. The hack is to force the network
configuration to run again after the preconfiguration file has been loaded
by creating a <quote>preseed/run</quote> script containing the following
lines:
-->
<quote>preseed/url</quote> でネットワーク preseed を使用する際、
ネットワーク設定の preseed は通常不可能ですが、
例えば、ネットワークインターフェースに静的アドレスを設定するといった、
以下のハックを利用して動作させることができます。
このハックは、以下の行を含む <quote>preseed/run</quote> スクリプトを作成し、
事前設定ファイルを読み込んだ後でネットワークの設定を強制的に再度行う、
というものです。

<informalexample><screen>
killall.sh dhclient
netcfg
</screen></informalexample>

</para>

<informalexample role="example"><screen>
# netcfg will choose an interface that has link if possible. This makes it
# skip displaying a list if there is more than one interface.
d-i netcfg/choose_interface select auto

# To pick a particular interface instead:
#d-i netcfg/choose_interface select eth1

# If you have a slow dhcp server and the installer times out waiting for
# it, this might be useful.
#d-i netcfg/dhcp_timeout string 60

# If you prefer to configure the network manually, uncomment this line and
# the static network configuration below.
#d-i netcfg/disable_dhcp boolean true

# If you want the preconfiguration file to work on systems both with and
# without a dhcp server, uncomment these lines and the static network
# configuration below.
#d-i netcfg/dhcp_failed note
#d-i netcfg/dhcp_options select Configure network manually

# Static network configuration.
#d-i netcfg/get_nameservers string 192.168.1.1
#d-i netcfg/get_ipaddress string 192.168.1.42
#d-i netcfg/get_netmask string 255.255.255.0
#d-i netcfg/get_gateway string 192.168.1.1
#d-i netcfg/confirm_static boolean true

# Any hostname and domain names assigned from dhcp take precedence over
# values set here. However, setting the values still prevents the questions
# from being shown, even if values come from dhcp.
d-i netcfg/get_hostname string unassigned-hostname
d-i netcfg/get_domain string unassigned-domain

# Disable that annoying WEP key dialog.
d-i netcfg/wireless_wep string
# The wacky dhcp hostname that some ISPs use as a password of sorts.
#d-i netcfg/dhcp_hostname string radish
</screen></informalexample>

  </sect2>

  <sect2 id="preseed-mirror">
<!--
  <title>Mirror settings</title>
-->
  <title>ミラーサイト設定</title>
<para>

<!--
Depending on the installation method you use, a mirror may be used to
download additional components of the installer, to install the base system,
and to set up the <filename>/etc/apt/sources.list</filename> for the installed
system.
-->
使用するインストール方法に依存しますが、
インストーラの追加コンポーネントのダウンロードや、基本システムのインストール、
インストールしたシステムの <filename>/etc/apt/sources.list</filename> の
セットアップにミラーサイトを使用できます。

</para><para>

<!--
The parameter <classname>mirror/suite</classname> determines the suite for
the installed system.
-->
<classname>mirror/suite</classname> パラメータでは、
インストールするシステム用の組を設定します。

</para><para>

<!--
The parameter <classname>mirror/udeb/suite</classname> determines the suite
for additional components for the installer. It is only useful to set this
if components are actually downloaded over the network and should match the
suite that was used to build the initrd for the installation method used for
the installation.
By default the value for <classname>mirror/udeb/suite</classname> is the
same as <classname>mirror/suite</classname>.
-->
<classname>mirror/udeb/suite</classname> パラメータでは、
インストーラの追加コンポーネントの組を設定します。
実際にコンポーネントをネットワークでダウンロードする場合に役立つだけです。
また、インストールで使用するインストール方法のための initrd を生成するには、
この組が一致していなければなりません。
<classname>mirror/udeb/suite</classname> のデフォルト値は、
<classname>mirror/suite</classname> と同じです。

</para>

<informalexample role="example"><screen>
d-i mirror/country string enter information manually
d-i mirror/http/hostname string http.us.debian.org
d-i mirror/http/directory string /debian
d-i mirror/http/proxy string

# Suite to install.
#d-i mirror/suite string testing
# Suite to use for loading installer components (optional).
#d-i mirror/udeb/suite string testing
</screen></informalexample>

  </sect2>

  <sect2 id="preseed-partman">
<!--
  <title>Partitioning</title>
-->
  <title>パーティション分割</title>
<para>

<!--
Using preseeding to partition the harddisk is very much limited to what is
supported by <classname>partman-auto</classname>. You can choose to partition
either existing free space on a disk or a whole disk. The layout of the
disk can be determined by using a predefined recipe, a custom recipe from
a recipe file or a recipe included in the preconfiguration file. It is
currently not possible to partition multiple disks using preseeding.
-->
ハードディスクのパーティション分割に preseed を使用するのは、
<classname>partman-auto</classname> でサポートしている機能に限定されています。
パーティションはディスクに既存の空き領域とディスク全体のどちらかから選べます。
ディスクレイアウトは、あらかじめ定義したレシピ、
レシピファイルによるカスタムレシピ、
事前設定ファイルに書いたレシピから選択できます。
現在のところ、パーティションに preseed 
を用いて複数のディスクを割り当てることはできません。

</para>

<warning><para>

<!--
The identification of disks is dependent on the order in which their drivers
are loaded. If there are multiple disks in the system, make very sure the
correct one will be selected before using preseeding.
-->
ディスクの識別は、ドライバの読み込み順に依存します。
複数のディスクがシステムにある場合、preseed を使用する前に、
正しいディスクを確実に選択できるようにしなければなりません。

</para></warning>

<informalexample role="example"><screen>
# If the system has free space you can choose to only partition that space.
# Note: this must be preseeded with a localized (translated) value.
#d-i partman-auto/init_automatically_partition \
#      select Guided - use the largest continuous free space

# Alternatively, you can specify a disk to partition. The device name
# can be given in either devfs or traditional non-devfs format.
# For example, to use the first disk:
d-i partman-auto/disk string /dev/discs/disc0/disc
# In addition, you'll need to specify the method to use.
# The presently available methods are: "regular", "lvm" and "crypto"
d-i partman-auto/method string lvm

# If one of the disks that are going to be automatically partitioned
# contains an old LVM configuration, the user will normally receive a
# warning. This can be preseeded away...
d-i partman-auto/purge_lvm_from_device boolean true
# And the same goes for the confirmation to write the lvm partitions.
d-i partman-lvm/confirm boolean true

# You can choose from any of the predefined partitioning recipes.
# Note: this must be preseeded with a localized (translated) value.
d-i partman-auto/choose_recipe \
       select All files in one partition (recommended for new users)
#d-i partman-auto/choose_recipe \
#       select Separate /home partition
#d-i partman-auto/choose_recipe \
#       select Separate /home, /usr, /var, and /tmp partitions

# Or provide a recipe of your own...
# The recipe format is documented in the file devel/partman-auto-recipe.txt.
# If you have a way to get a recipe file into the d-i environment, you can
# just point at it.
#d-i partman-auto/expert_recipe_file string /hd-media/recipe

# If not, you can put an entire recipe into the preconfiguration file in one
# (logical) line. This example creates a small /boot partition, suitable
# swap, and uses the rest of the space for the root partition:
#d-i partman-auto/expert_recipe string                         \
#      boot-root ::                                            \
#              40 50 100 ext3                                  \
#                      $primary{ } $bootable{ }                \
#                      method{ format } format{ }              \
#                      use_filesystem{ } filesystem{ ext3 }    \
#                      mountpoint{ /boot }                     \
#              .                                               \
#              500 10000 1000000000 ext3                       \
#                      method{ format } format{ }              \
#                      use_filesystem{ } filesystem{ ext3 }    \
#                      mountpoint{ / }                         \
#              .                                               \
#              64 512 300% linux-swap                          \
#                      method{ swap } format{ }                \
#              .

# This makes partman automatically partition without confirmation.
d-i partman/confirm_write_new_label boolean true
d-i partman/choose_partition \
       select Finish partitioning and write changes to disk
d-i partman/confirm boolean true
</screen></informalexample>

  </sect2>

  <sect2 id="preseed-partman-raid">
<!--
  <title>Partitioning using RAID</title>
-->
  <title>RAID を用いたパーティション分割</title>
<para>

<!--
You can also use preseeding to set up partitions on software RAID arrays.
Supported are RAID levels 0, 1 and 5, creating degraded arrays and
specifying spare devices.
If you are using RAID 1, you can preseed grub to install to all devices
used in the array; see <xref linkend="preseed-bootloader"/>.
-->
ソフトウェア RAID アレイにパーティションをセットアップすることも、
preseed を使用してできます。
サポートしているのは、RAID 0, 1, 5、や縮退アレイの作成、
スペアデバイスの指定です。
RAID 1 を使用する際には、アレイで使用する全デバイスへインストールするよう、
preseed で探せます。<xref linkend="preseed-bootloader"/> をご覧ください。

</para>

<warning><para>

<!--
This type of automated partitioning is easy to get wrong. It is also a
very new component that may still have some bugs or missing error
handling. The responsibility to get the various recipes right (so they
make sense and don't conflict) lies with the user.
Check <filename>/var/log/syslog</filename> if you run into problems.
-->
自動パーティション分割でのこの形式は、誤動作をしやすいです。
また、とても新しいコンポーネントで、まだバグやエラー処理漏れがあるはずです。
様々な条件で正しく動作するかの責任 (理解でき衝突しない限り) は、
ユーザの側にあります。
問題が発生したら、<filename>/var/log/syslog</filename> をチェックしてください。

</para><para>

<!--
Note that only RAID 0 and RAID 1 have been tested by the developers of the
component. RAID 5 is untested. Advanced RAID setup with degraded arrays or
spare devices has only been tested lightly.
-->
コンポーネントの開発者によってテストされているのは、
RAID 0 と RAID 1 のみであることに注意してください。
RAID 5 はテストされていません。
縮退アレイやスペアデバイスを使用した、
拡張 RAID セットアップは軽くテストしただけです。

</para></warning>

<informalexample><screen>
# NOTE: this option is of beta release quality and should be used carefully

# The method should be set to "raid".
#d-i partman-auto/method string raid
# Specify the disks to be partitioned. They will all get the same layout,
# so this will only work if the disks are the same size.
#d-i partman-auto/disk string /dev/discs/disc0/disc /dev/discs/disc1/disc

# Next you need to specify the physical partitions that will be used. 
#d-i partman-auto/expert_recipe string \
#      multiraid ::                                         \
#              1000 5000 4000 raid                          \
#                      $primary{ } method{ raid }           \
#              .                                            \
#              64 512 300% raid                             \
#                      method{ raid }                       \
#              .                                            \
#              500 10000 1000000000 raid                    \
#                      method{ raid }                       \
#              .

# Last you need to specify how the previously defined partitions will be
# used in the RAID setup. Remember to use the correct partition numbers
# for logical partitions.
# Parameters are:
# &lt;raidtype&gt; &lt;devcount&gt; &lt;sparecount&gt; &lt;fstype&gt; &lt;mountpoint&gt; \
#          &lt;devices&gt; &lt;sparedevices&gt;
# RAID levels 0, 1 and 5 are supported; devices are separated using "#"
#d-i partman-auto-raid/recipe string \
#    1 2 0 ext3 /                                           \
#          /dev/discs/disc0/part1#/dev/discs/disc1/part1    \
#    .                                                      \
#    1 2 0 swap -                                           \
#          /dev/discs/disc0/part5#/dev/discs/disc1/part5    \
#    .                                                      \
#    0 2 0 ext3 /home                                       \
#          /dev/discs/disc0/part6#/dev/discs/disc1/part6    \
#    .

# This makes partman automatically partition without confirmation.
d-i partman-md/confirm boolean true
d-i partman/confirm_write_new_label boolean true
d-i partman/choose_partition \
       select Finish partitioning and write changes to disk
d-i partman/confirm boolean true
</screen></informalexample>

  </sect2>

  <sect2 id="preseed-time">
<!--
  <title>Clock and time zone setup</title>
-->
  <title>時計・タイムゾーン設定</title>

<informalexample role="example"><screen>
# Controls whether or not the hardware clock is set to UTC.
d-i clock-setup/utc boolean true

# You may set this to any valid setting for $TZ; see the contents of
# /usr/share/zoneinfo/ for valid values.
d-i time/zone string US/Eastern
</screen></informalexample>

  </sect2>

  <sect2 id="preseed-apt">
<!--
  <title>Apt setup</title>
-->
  <title>apt 設定</title>
<para>

<!--
Setup of the <filename>/etc/apt/sources.list</filename> and basic configuration
options is fully automated based on your installation method and answers to
earlier questions. You can optionally add other (local) repositories.
-->
<filename>/etc/apt/sources.list</filename>
のセットアップと基本設定オプションは、
インストール方法と初期の質問への回答から、完全に自動的に行われます。
さらに、他の (ローカルな) リポジトリを追加できます。

</para>

<informalexample role="example"><screen>
# You can choose to install non-free and contrib software.
#d-i apt-setup/non-free boolean true
#d-i apt-setup/contrib boolean true
# Uncomment this to avoid adding security sources, or
# add a hostname to use a different server than security.debian.org.
#d-i apt-setup/security_host string

# Additional repositories, local[0-9] available
#d-i apt-setup/local0/repository string \
#       deb http://local.server/debian stable main
#d-i apt-setup/local0/comment string local server
# Enable deb-src lines
#d-i apt-setup/local0/source boolean true
# URL to the public key of the local repository; you must provide a key or
# apt will complain about the unauthenticated repository and so the
# sources.list line will be left commented out
#d-i apt-setup/local0/key string http://local.server/key
</screen></informalexample>

  </sect2>

  <sect2 id="preseed-account">
<!--
  <title>Account setup</title>
-->
  <title>アカウント設定</title>
<para>

<!--
The password for the root account and name and password for a first regular
user's account can be preseeded. For the passwords you can use either clear
text values or MD5 <emphasis>hashes</emphasis>.
-->
root アカウント用のパスワードや、
最初のユーザアカウントの名前・パスワードは preseed できます。
パスワードには、クリアテキストか MD5 <emphasis>ハッシュ</emphasis>のどちらかを
使用できます。

</para>
<warning><para>

<!--
Be aware that preseeding passwords is not completely secure as everyone
with access to the preconfiguration file will have the knowledge of these
passwords. Using MD5 hashes is considered slightly better in terms of
security but it might also give a false sense of security as access to a
MD5 hash allows for brute force attacks.
-->
preseed のパスワードは、
パスワードを知っている事前設定ファイルが誰でもアクセスできるために、
完全に安全というわけではないことを知っておいてください。
MD5 ハッシュを使えば、セキュリティ的には多少ましと言えますが、
MD5 ハッシュは総当たり攻撃にかけられることを考えると、
セキュリティ的に誤解を与えるかもしれません。

</para></warning>

<informalexample role="example"><screen>
# Skip creation of a root account (normal user account will be able to
# use sudo).
#d-i passwd/root-login boolean false
# Alternatively, to skip creation of a normal user account.
#d-i passwd/make-user boolean false

# Root password, either in clear text
#d-i passwd/root-password password r00tme
#d-i passwd/root-password-again password r00tme
# or encrypted using an MD5 hash.
#d-i passwd/root-password-crypted password [MD5 hash]

# To create a normal user account.
#d-i passwd/user-fullname string Debian User
#d-i passwd/username string debian
# Normal user's password, either in clear text
#d-i passwd/user-password password insecure
#d-i passwd/user-password-again password insecure
# or encrypted using an MD5 hash.
#d-i passwd/user-password-crypted password [MD5 hash]
</screen></informalexample>

<para>

<!--
The <classname>passwd/root-password-crypted</classname> and
<classname>passwd/user-password-crypted</classname> variables can also
be preseeded with <quote>!</quote> as their value. In that case, the
corresponding account is disabled. This may be convenient for the root
account, provided of course that an alternative method is setup to allow
administrative activities or root login (for instance by using SSH key
authentication or <command>sudo</command>).
-->
<classname>passwd/root-password-crypted</classname> 変数や
<classname>passwd/user-password-crypted</classname> 変数では、
preseed で <quote>!</quote> という値を取れます。
この場合、そのアカウントは無効となります。
もちろん管理権限での実行や root ログインを許可する代替手段
(例えば SSH キー認証や <command>sudo</command>) を用意しておいた上で、
root アカウントに設定すると便利です。

</para><para>

<!--
An MD5 hash for a password can be generated using the following command.
-->
パスワードの MD5 ハッシュは以下のコマンドで生成できます。

<informalexample><screen>
$ echo "r00tme" | mkpasswd -s -H MD5
</screen></informalexample>

</para>
  </sect2>

  <sect2 id="preseed-base-installer">
<!--
  <title>Base system installation</title>
-->
  <title>基本システムのインストール</title>
<para>

<!--
There is actually not very much that can be preseeded for this stage of the
installation. The only questions asked concern the installation of the kernel.
-->
インストールのこの段階では、実際にはうまく preseed できないことがあります。
その唯一のものが、カーネルのインストールについての質問です。

</para>

<informalexample role="example"><screen>
# Select the initramfs generator used to generate the initrd for 2.6 kernels.
#d-i base-installer/kernel/linux/initramfs-generators string yaird
</screen></informalexample>

  </sect2>

  <sect2 id="preseed-bootloader">
<!--
  <title>Boot loader installation</title>
-->
  <title>ブートローダのインストール</title>

<informalexample role="example"><screen>
# Grub is the default boot loader (for x86). If you want lilo installed
# instead, uncomment this:
#d-i grub-installer/skip boolean true

# This is fairly safe to set, it makes grub install automatically to the MBR
# if no other operating system is detected on the machine.
d-i grub-installer/only_debian boolean true

# This one makes grub-installer install to the MBR if it also finds some other
# OS, which is less safe as it might not be able to boot that other OS.
d-i grub-installer/with_other_os boolean true

# Alternatively, if you want to install to a location other than the mbr,
# uncomment and edit these lines:
#d-i grub-installer/only_debian boolean false
#d-i grub-installer/with_other_os boolean false
#d-i grub-installer/bootdev  string (hd0,0)
# To install grub to multiple disks:
#d-i grub-installer/bootdev  string (hd0,0) (hd1,0) (hd2,0)
</screen></informalexample>

  </sect2>

  <sect2 id="preseed-pkgsel">
<!--
  <title>Package selection</title>
-->
  <title>パッケージ選択</title>
<para>

<!--
You can choose to install any combination of tasks that are available.
Available tasks as of this writing include:
-->
有効なタスクを組み合わせてインストールするものを選ぶことができます。
有効なタスクを以下に書き出します。

</para>

<itemizedlist>
<listitem><para>
  <userinput>standard</userinput>
</para></listitem>
<listitem><para>
  <userinput>desktop</userinput>
</para></listitem>
<listitem><para>
  <userinput>gnome-desktop</userinput>
</para></listitem>
<listitem><para>
  <userinput>kde-desktop</userinput>
</para></listitem>
<listitem><para>
  <userinput>web-server</userinput>
</para></listitem>
<listitem><para>
  <userinput>print-server</userinput>
</para></listitem>
<listitem><para>
  <userinput>dns-server</userinput>
</para></listitem>
<listitem><para>
  <userinput>file-server</userinput>
</para></listitem>
<listitem><para>
  <userinput>mail-server</userinput>
</para></listitem>
<listitem><para>
  <userinput>sql-database</userinput>
</para></listitem>
<listitem><para>
  <userinput>laptop</userinput>
</para></listitem>
</itemizedlist>

<para>

<!--
You can also choose to install no tasks, and force the installation of a
set of packages in some other way. We recommend always including the
<userinput>standard</userinput> task.
-->
タスクをインストールしないこともできますし、
他の方法でパッケージのセットが強制的にインストールされることもあります。
<userinput>standard</userinput> タスクは常に含めるのをお奨めします。

</para><para>

<!--
If you want to install some individual packages in addition to packages
installed by tasks, you can use the parameter
<classname>pkgsel/include</classname>. The value of this parameter can be
a list of packages separated by either commas or spaces, which allows it
to be used easily on the kernel command line as well.
-->
タスクでインストールするパッケージに加えて、
特定のパッケージをインストールする場合、
<classname>pkgsel/include</classname> パラメータを使用できます。
このパラメータの値は、カーネルコマンドラインにそのまま渡されるので、
カンマか空白で区切ったパッケージのリストを取れます。

</para>

<informalexample role="example"><screen>
tasksel tasksel/first multiselect standard, desktop
#tasksel tasksel/first multiselect standard, web-server
#tasksel tasksel/first multiselect standard, kde-desktop

# Individual additional packages to install
#d-i pkgsel/include string openssh-server build-essential

# Some versions of the installer can report back on what software you have
# installed, and what software you use. The default is not to report back,
# but sending reports helps the project determine what software is most
# popular and include it on CDs.
#popularity-contest popularity-contest/participate boolean false
</screen></informalexample>

  </sect2>

  <sect2 id="preseed-finish">
<!--
  <title>Finishing up the first stage install</title>
-->
  <title>インストール第 1 段階の仕上げ</title>

<informalexample role="example"><screen>
# Avoid that last message about the install being complete.
d-i finish-install/reboot_in_progress note

# This will prevent the installer from ejecting the CD during the reboot,
# which is useful in some situations.
#d-i cdrom-detect/eject boolean false
</screen></informalexample>

  </sect2>

  <sect2 id="preseed-mailer">
<!--
  <title>Mailer configuration</title>
-->
  <title>メール設定</title>
<para>

<!--
During a normal install, exim asks only a few questions. Here's how to
avoid even those. More complicated preseeding is possible.
-->
通常のインストールでは、exim は少々質問しますが、
さらにこれを抑制する方法もあります。
もっと複雑な preseed も可能です。

</para>

<informalexample role="example"><screen>
exim4-config exim4/dc_eximconfig_configtype \
       select no configuration at this time
exim4-config exim4/no_config boolean true
exim4-config exim4/no_config boolean true
exim4-config exim4/dc_postmaster string
</screen></informalexample>

  </sect2>

  <sect2 id="preseed-X">
<!--
  <title>X configuration</title>
-->
  <title>X の設定</title>
<para>

<!--
Preseeding Debian's X config is possible, but you probably need to know
some details about the video hardware of the machine, since Debian's X
configurator does not do fully automatic configuration of everything.
-->
Debian の X 設定を preseed 可能です。
しかし、マシンのビデオハードウェアについて、
詳細を知っている必要があるかもしれません。
Debian の X コンフィグレータはすべてを自動設定するわけには行かないのです。

</para>

<informalexample role="example"><screen>
# X can detect the right driver for some cards, but if you're preseeding,
# you override whatever it chooses. Still, vesa will work most places.
#xserver-xorg xserver-xorg/config/device/driver select vesa

# A caveat with mouse autodetection is that if it fails, X will retry it
# over and over. So if it's preseeded to be done, there is a possibility of
# an infinite loop if the mouse is not autodetected.
#xserver-xorg xserver-xorg/autodetect_mouse boolean true

# Monitor autodetection is recommended.
xserver-xorg xserver-xorg/autodetect_monitor boolean true
# Uncomment if you have an LCD display.
#xserver-xorg xserver-xorg/config/monitor/lcd boolean true
# X has three configuration paths for the monitor. Here's how to preseed
# the "medium" path, which is always available. The "simple" path may not
# be available, and the "advanced" path asks too many questions.
xserver-xorg xserver-xorg/config/monitor/selection-method \
       select medium
xserver-xorg xserver-xorg/config/monitor/mode-list \
       select 1024x768 @ 60 Hz
</screen></informalexample>

  </sect2>

  <sect2 id="preseed-other">
<!--
  <title>Preseeding other packages</title>
-->
  <title>他パッケージの preseed</title>

<informalexample role="example"><screen>
# Depending on what software you choose to install, or if things go wrong
# during the installation process, it's possible that other questions may
# be asked. You can preseed those too, of course. To get a list of every
# possible question that could be asked during an install, do an
# installation, and then run these commands:
#   debconf-get-selections --installer > file
#   debconf-get-selections >> file
</screen></informalexample>

  </sect2>
 </sect1>


 <sect1 id="preseed-advanced">
<!--
 <title>Advanced options</title>
-->
 <title>高度なオプション</title>

  <sect2 id="preseed-hooks">
<!--
  <title>Running custom commands during the installation</title>
-->
  <title>インストール中のカスタムコマンド実行</title>
<para>

<!--
A very powerful and flexible option offered by the preconfiguration tools
is the ability to run commands or scripts at certain points in the
installation.
-->
事前設定ツールには、
インストール中の一定の箇所でコマンドやスクリプトを実行するといった、
とても強力で柔軟なオプションが存在します。

</para>

<informalexample role="example"><screen>
# d-i preseeding is inherently not secure. Nothing in the installer checks
# for attempts at buffer overflows or other exploits of the values of a
# preconfiguration file like this one. Only use preconfiguration files from
# trusted locations! To drive that home, and because it's generally useful,
# here's a way to run any shell command you'd like inside the installer,
# automatically.

# This first command is run as early as possible, just after
# preseeding is read.
#d-i preseed/early_command string anna-install some-udeb

# This command is run just before the install finishes, but when there is
# still a usable /target directory. You can chroot to /target and use it
# directly, or use the apt-install and in-target commands to easily install
# packages and run commands in the target system.
#d-i preseed/late_command string apt-install zsh; in-target chsh -s /bin/zsh
</screen></informalexample>

  </sect2>
  
  <sect2 id="preseed-seenflag">
<!--
  <title>Using preseeding to change default values</title>
-->
  <title>preseed を用いたデフォルト値変更</title>
<para>

<!--
It is possible to use preseeding to change the default answer for a
question, but still have the question asked. To do this the
<firstterm>seen</firstterm> flag must be reset to <quote>false</quote> after
setting the value for a question.
-->
preseed を用いて、質問へのデフォルトの回答を変更できます。
この場合でも質問は行われます。
これには、質問への回答を設定した後で、
<firstterm>seen</firstterm> フラグを <quote>false</quote> 
にリセットしなければなりません。

</para>

<informalexample><screen>
d-i foo/bar string value
d-i foo/bar seen false
</screen></informalexample>

  </sect2>

  <sect2 id="preseed-chainload">
<!--
  <title>Chainloading preconfiguration files</title>
-->
  <title>事前設定ファイルの多重読み込み</title>
<para>

<!--
It is possible to include other preconfiguration files from a preconfiguration
file. Any settings in those files will override pre-existing settings from
files loaded earlier. This makes it possible to put, for example, general
networking settings for your location in one file and more specific
settings for certain configurations in other files.
-->
事前設定ファイルから他の事前設定ファイルを読み込めます。
前に読み込まれたファイルの既存設定を、
後から読み込まれたいずれの設定でも上書きします。
これは例えば、あるファイルに一般的なネットワークの設定を書いておき、
他のファイルでより確かな設定を指定するという使い方ができます。

</para>

<informalexample><screen>
# More than one file can be listed, separated by spaces; all will be
# loaded. The included files can have preseed/include directives of their
# own as well. Note that if the filenames are relative, they are taken from
# the same directory as the preconfiguration file that includes them.
#d-i preseed/include string x.cfg

# The installer can optionally verify checksums of preconfiguration files
# before using them. Currently only md5sums are supported, list the md5sums
# in the same order as the list of files to include.
#d-i preseed/include/checksum string 5da499872becccfeda2c4872f9171c3d

# More flexibly, this runs a shell command and if it outputs the names of
# preconfiguration files, includes those files. 
#d-i preseed/include_command \
#      string echo if [ "`hostname`" = bob ]; then echo bob.cfg; fi

# Most flexibly of all, this downloads a program and runs it. The program
# can use commands such as debconf-set to manipulate the debconf database.
# More than one script can be listed, separated by spaces.
# Note that if the filenames are relative, they are taken from the same
# directory as the preconfiguration file that runs them.
#d-i preseed/run string foo.sh
</screen></informalexample>

<para>

<!--
It is also possible to chainload from the initrd or file preseeding phase,
into network preseeding by setting preseed/url in the earlier files.
This will cause network preseeding to be performed when the network comes
up.  You need to be careful when doing this, since there will be two
distinct runs at preseeding, meaning for example that you get another
chance to run the preseed/early command, the second one happening after the
network comes up.
-->
また、
あらかじめ用意したファイルの preseed/url で設定したネットワーク preseed  へ、
initrd やファイル preseed の段階で、多重読み込みを行うことができます。
これにより、ネットワークに接続した時点でネットワーク preseed を行えます。
この場合、2 種類の異なる preseed が実行されることに注意してください。
例えば、preseed/early コマンドを実行する機会が 2 度あり、
2 回目はネットワークに接続した時に発生するということです。

</para>

  </sect2>
 </sect1>
</appendix>
