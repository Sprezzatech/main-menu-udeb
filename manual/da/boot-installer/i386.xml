<!-- retain these comments for translator revision tracking -->
<!-- original version: 22664 untranslated -->

  <sect2 arch="x86"><title>Booting from a CD-ROM</title>

&boot-installer-intro-cd.xml;

<!-- We'll comment the following section until we know exact layout -->
<!-- 
CD #1 of official Debian CD-ROM sets for &arch-title; will present a
<prompt>boot:</prompt> prompt on most hardware. Press
<keycap>F3</keycap> to see the list of kernel options available
from which to boot. Just type your chosen flavor name (idepci,
vanilla, compact, bf24) at the <prompt>boot:</prompt> prompt
followed by &enterkey;.

</para><para>

If your hardware doesn't support booting of multiple images, put one
of the other CDs in the drive. It appears that most SCSI CD-ROM drives 
do not support <command>isolinux</command> multiple image booting, so users
with SCSI CD-ROMs should try either CD2 (vanilla) or CD3 (compact), 
or CD5 (bf2.4). 

</para><para>

CD's 2 through 5 will each boot a 
different ``flavor'' depending on which CD-ROM is
inserted. See <xref linkend="kernel-choice"/> for a discussion of the
different flavors.  Here's how the flavors are laid out on the
different CD-ROMs:

<variablelist>
<varlistentry>
<term>CD 1</term><listitem><para>

Allows a selection of kernel images to boot from (the idepci flavor is
the default if no selection is made). 

</para></listitem></varlistentry>
<varlistentry>
<term>CD 2</term><listitem><para>

Boots the `vanilla' flavor.

</para></listitem></varlistentry>
<varlistentry>
<term>CD 3</term><listitem><para>

Boots the `compact' flavor.

</para></listitem></varlistentry>
<varlistentry>
<term>CD 4</term><listitem><para>

Boots the `idepci' flavor.

</para></listitem></varlistentry>
<varlistentry>
<term>CD 5</term><listitem><para>

Boots the `bf2.4' flavor.

</para></listitem></varlistentry>

 </variablelist>

</para><para>

-->

  </sect2>

<!-- FIXME the documented procedure does not exactly work, commented out
     until fixes

  <sect2 arch="x86" id="install-from-dos">
  <title>Booting from a DOS partition</title>

&boot-installer-intro-hd.xml;

<para>

Boot into DOS (not Windows) without any drivers being loaded.  To do
this, you have to press <keycap>F8</keycap> at exactly the right
moment (and optionally select the `safe mode command prompt only'
option).  Enter the subdirectory for the flavor you chose, e.g.,

<informalexample><screen>

cd c:\install

</screen></informalexample>.  

Next, execute <command>install.bat</command>.
The kernel will load and launch the installer system. 

</para><para>

Please note, there is currently a loadlin problem (#142421) which
precludes <filename>install.bat</filename> from being used with the
bf2.4 flavor. The symptom of the problem is an
<computeroutput>invalid compressed format</computeroutput> error.

</para>
  </sect2>

END FIXME -->

  <sect2 arch="x86" id="boot-initrd">
  <title>Booting from linux using <command>LILO</command> or
  <command>GRUB</command></title>

<para>
To boot the installer from hard disk, you must first download
and place the needed files as described in <xref linkend="boot-drive-files"/>.
</para>

<para>
If you intend to use the hard drive only for booting and then
download everything over the network, you should download the
<filename>netboot/debian-installer/i386/initrd.gz</filename> file and its corresponding kernel.
This will allow you
to repartition the hard disk from which you boot the installer, although
you should do so with care.
</para>

<para>
Alternatively, if you intend to keep an existing partition on the hard
drive unchanged during the install, you can download the
<filename>hd-media/initrd.gz</filename>
file and its kernel, as well as copy a CD iso to the drive (make sure the
file is named ending in ".iso". The installer can then boot from the drive
and install from the CD image, without needing the network.
</para>

<para>
For <command>LILO</command>, you will need to configure two
essential things in <filename>/etc/lilo.conf</filename>:
<itemizedlist>
<listitem><para>

to load the <filename>initrd.gz</filename> installer at boot time;

</para></listitem>
<listitem><para>

have the <filename>vmlinuz</filename> kernel use a RAM disk as
its root partition.

</para></listitem>
</itemizedlist>

Here is a <filename>/etc/lilo.conf</filename> example:

</para><para>

<informalexample><screen>

image=/boot/newinstall/vmlinuz
       label=newinstall
       initrd=/boot/newinstall/initrd.gz
       root=/dev/ram
       append="devfs=mount,dall ramdisk_size=17000

</screen></informalexample>

For more details, refer to the
<citerefentry><refentrytitle>initrd</refentrytitle>
<manvolnum>4</manvolnum></citerefentry> and
<citerefentry><refentrytitle>lilo.conf</refentrytitle>
<manvolnum>5</manvolnum></citerefentry> man pages. Now run
<userinput>lilo</userinput> and reboot.

</para><para>

The procedure for <command>GRUB</command> is quite similar. Locate your
<filename>menu.lst</filename> in the <filename>/boot/grub/</filename>
directory (sometimes in the <filename>/boot/boot/grub/</filename>),
add the following lines:

<informalexample><screen>

title  New Install
kernel (hd0,0)/boot/newinstall/vmlinuz root=/dev/ram devfs=mount,dall ramdisk_size=17000
initrd (hd0,0)/boot/newinstall/initrd.gz

</screen></informalexample>

and reboot. Note that the value of the <userinput>ramdisksize</userinput>
may need to be adjusted for the size of the initrd image. 
From now on, there should be no difference between <command>GRUB</command>
or <command>LILO</command>.

</para>
  </sect2>

  <sect2 arch="x86" id="usb-boot">
  <title>Booting from USB memory stick</title>
<para>

Lets assume you have prepared everything from <xref
linkend="boot-dev-select"/> and <xref linkend="boot-usb-files"/>.  Now
just plug your USB stick into some free USB connector and reboot the
computer.  The system should boot up, and you should be presented with
the <prompt>boot:</prompt> prompt.  Here you can enter optional boot
arguments, or just hit &enterkey;.

</para><para>

In case your computer doesn't support booting from USB memory devices,
you can still use a single floppy to do the initial boot and then
switch to USB. Boot your system as described in <xref linkend="floppy-boot"/>;
the kernel on the boot floppy should detect your USB stick automatically.
When it asks for the root floppy, simply press &enterkey;. You should see
&d-i; starting.

</para>
  </sect2>

  <sect2 arch="x86" id="floppy-boot">
  <title>Booting from Floppies</title>
<para>

You will have already downloaded the floppy images you needed and
created floppies from the images in <xref linkend="create-floppy"/>.
<!-- missing-doc FIXME If you need to, you can also modify the boot floppy; see 
<xref linkend="rescue-replace-kernel"/>. -->

</para><para>

To boot from the installer boot floppy, place it in the primary floppy
drive, shut down the system as you normally would, then turn it back
on.

</para><para>

For installing from a LS-120 drive (ATAPI version) with a set of
floppies, you need to specify the virtual location for the floppy
device.  This is done with the <emphasis>root=</emphasis> boot
argument, giving the device that the ide-floppy driver maps the device
to. For example, if your LS-120 drive is connected as the first IDE
device (master) on the second cable, you enter
<userinput>linux root=/dev/hdc</userinput> at the boot prompt.
Installation from LS-120 is only supported by 2.4 and later kernels.

</para><para>

Note that on some machines, <keycombo><keycap>Control</keycap>
<keycap>Alt</keycap> <keycap>Delete</keycap></keycombo> does not
properly reset the machine, so a ``hard'' reboot is recommended.  If
you are installing from an existing operating system (e.g., from a DOS
box) you don't have a choice. Otherwise, please do a hard reboot when
booting.

</para><para>

The floppy disk will be accessed, and you should then see a screen
that introduces the boot floppy and ends with the <prompt>boot:</prompt>
prompt.

</para><para>

Once you press &enterkey;, you should see the message
<computeroutput>Loading...</computeroutput>, followed by
<computeroutput>Uncompressing Linux...</computeroutput>, and
then a screenful or so of information about the hardware in your
system.  More information on this phase of the boot process can be
found below in <xref linkend="kernel-msgs"/>.

</para><para>

After booting from the boot floppy, the root floppy is
requested. Insert the root floppy and press &enterkey;, and the
contents are loaded into memory. The installer program
<command>debian-installer</command> is automatically launched.

</para>
  </sect2>
  
  <sect2 arch="x86" id="boot-tftp"><title>Booting with TFTP</title>
 
&boot-installer-intro-net.xml;
 
<para>

There are various ways to do a TFTP boot on i386.

</para>

   <sect3><title>NIC or Motherboard that support PXE</title>
<para>

It could be that your Network Interface Card or Motherboard provides
PXE boot functionality.
This is a <trademark class="trade">Intel</trademark> re-implemention
of TFTP boot. If so you may be able to configure your BIOS to boot from the
network.

</para>
   </sect3>
   
   <sect3><title>NIC with network bootROM</title>
<para>

It could be that your Network Interface Card provides
TFTP boot functionality.

</para><para condition="FIXME">

Let us (<email>&email-debian-boot-list;</email>) know how did you manage it.
Please refer to this document.

</para>
   </sect3>

   <sect3><title>Etherboot</title>
<para>

The <ulink url="http://www.etherboot.org">etherboot project</ulink>
provides bootdiskettes and even bootroms that do a TFTPboot.

</para>
   </sect3>
  </sect2>

  <sect2 arch="x86"><title>i386 Boot Parameters</title>
<para>

When the installer boots, you will be presented with the boot prompt,
<prompt>boot:</prompt>. You can do two things at the <prompt>boot:</prompt>
prompt. You can press the function keys <keycap>F1</keycap> through
<keycap>F10</keycap> to view a few pages of helpful information, or
you can press <keycap>Enter</keycap> to boot the system.

</para><para>

Information on boot parameters which might be useful can be found by
pressing <keycap>F3</keycap> through <keycap>F7</keycap>.  If you add any
parameters to
the boot command line, be sure to type the boot method (the default is
<userinput>linux</userinput>) and a space before the first parameter (e.g.,
<userinput>linux floppy=thinkpad</userinput>). If you simply press &enterkey;,
that's the same as typing <userinput>linux</userinput> without any special
parameters.

</para><para>

Some systems have floppies with ``inverted DCLs''. If you receive
errors reading from the floppy, even when you know the floppy is good,
try the parameter <userinput>floppy=thinkpad</userinput>.

</para><para>

On some systems, such as the IBM PS/1 or ValuePoint (which have ST-506
disk drivers), the IDE drive may not be properly recognized.  Again,
try it first without the parameters and see if the IDE drive is
recognized properly.  If not, determine your drive geometry
(cylinders, heads, and sectors), and use the parameter
<userinput>hd=<replaceable>cylinders</replaceable>,<replaceable>heads</replaceable>,<replaceable>sectors</replaceable></userinput>.

</para><para>

If you have a very old machine, and the kernel hangs after saying
<computeroutput>Checking 'hlt' instruction...</computeroutput>, then
you should try the <userinput>no-hlt</userinput> boot argument, which
disables this test.

</para><para>

If your screen begins to show a weird picture while the kernel boots,
eg. pure white, pure black or colored pixel garbage, your system may
contain a problematic video card which does not switch to the
framebuffer mode properly.  Then you can use the boot parameter
<userinput>debian-installer/framebuffer=false</userinput> or
<userinput>video=vga16:off</userinput> to disable the framebuffer
console. Only the english
language will be available during the installation due to limited
console features. See <xref linkend="boot-parms"/> for details.

</para>
  </sect2>


  <sect2 arch="x86">
  <title>System freeze during the PCMCIA configuration phase</title>

<para>

Some laptop models produced by Dell are known to crash when PCMCIA device
detection tries to access some hardware addresses. Other laptops may display
similar problems. If you experience such a problem and you don't need PCMCIA
support during the installation, you can disable PCMCIA using the
<userinput>hw-detect/start_pcmcia=false</userinput> boot parameter. You can
then configure PCMCIA after the installation is completed and exclude the
resource range causing the problems.

</para><para>

Alternatively, you can boot the installer in expert mode. You will
then be asked to enter the resource range options your hardware
needs. For example, if you have one of the Dell laptops mentioned
above, you should enter <userinput>exclude port
0x800-0x8ff</userinput> here. There is also a list of some common
resource range options in the <ulink
url="http://pcmcia-cs.sourceforge.net/ftp/doc/PCMCIA-HOWTO-2.html#ss2.5">System
resource settings section of the PCMCIA HOWTO</ulink>. Note that you
have to omit the commas, if any, when you enter this value in the
installer.

</para>
  </sect2>

  <sect2 arch="x86">
  <title>System freeze while loading the USB modules</title>
<para>

The kernel normally tries to install USB modules and the USB keyboard driver
in order to support some non-standard USB keyboards. However, there are some
broken USB systems where the driver hangs on loading. A possible workaround
may be disabling the USB controller in your mainboard BIOS setup. Another option
is passing the <userinput>debian-installer/probe/usb=false</userinput> parameter
at the boot prompt, which will prevent the modules from being loaded.

</para>
  </sect2>
