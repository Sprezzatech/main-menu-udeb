<!-- retain these comments for translator revision tracking -->
<!-- original version: 64779 -->

 <sect1 condition="bootable-usb" id="boot-usb-files">
 <title>Dateien vorbereiten für das Booten von einem USB-Memory-Stick</title>

<para arch="x86">

Es gibt zwei mögliche Installationsmethoden, wenn Sie von USB-Stick booten.
Die erste ist, den USB-Stick nur zum Booten des Installers zu verwenden und
die eigentliche Installation komplett über Netzwerk durchzuführen. Die zweite
Möglichkeit ist, zusätzlich ein CD-Image auf den Stick zu kopieren und
dieses als Paketquelle zu nutzen, eventuell in Kombination mit einem
Spiegel-Server.

</para><para>

Um den USB-Stick vorzubereiten, benötigen Sie ein System, auf dem
GNU/Linux bereits läuft und das USB unterstützt. Auf aktuellen GNU/Linux-Systemen
sollte der USB-Stick automatisch erkannt werden, sobald Sie ihn einstecken.
Falls nicht, sollten Sie sicherstellen, dass das usb-storage-Kernelmodul geladen
ist. Beim Einstecken wird dem USB-Stick ein Gerät namens
<filename>/dev/sdX</filename> zugewiesen, wobei <quote>X</quote>
ein Buchstabe im Bereich zwischen a und z ist. Es sollte Ihnen möglich sein zu
erkennen, welches Gerät dem Stick zugewiesen wurde, indem Sie den Befehl
<command>dmesg</command> ausführen, nachdem der USB-Stick eingesteckt wurde.
Um den Stick zu beschreiben, müssen Sie eventuell noch mit dem entsprechenden
Schalter am Stick den Schreibschutz deaktivieren.

</para><warning><para>

Die in diesem Abschnitt beschriebenen Methoden werden alle Daten zerstören,
die sich bereits auf dem Gerät befinden! Versichern Sie sich, dass
Sie den korrekten Gerätenamen (nämlich den Ihres USB-Sticks) verwenden.
Wenn Sie einen falschen Namen verwenden, könnte dies dazu führen, dass Sie
z.B. alle Daten auf Ihrer Festplatte verlieren!

</para></warning><para arch="x86">

Um einen USB-Stick vorzubereiten, der lediglich den Installer bootet, welcher
dann wiederum die Installation komplett per Netzwerk fortführt, müssen Sie
das <filename>mini.iso</filename>-Image aus dem
<filename>netboot</filename>-Verzeichnis herunterladen
(<xref linkend="where-files"/> gibt nähere Informationen, wo Sie dies finden
können) und direkt
auf den USB-Stick schreiben; dadurch wird der bisherige Inhalt des Sticks
überschrieben. Diese Methode funktioniert auch mit sehr kleinen USB-Sticks,
schon ein paar Megabyte reichen aus.

</para><para arch="x86">

Auf einem vorhandenen GNU/Linux-System kann die
<filename>mini.iso</filename>-Datei z.B. mit folgenden Befehlen auf den
USB-Stick geschrieben werden:

<informalexample><screen>
# cat mini.iso &gt; /dev/<replaceable>sdX</replaceable>
# sync
</screen></informalexample>

Um Firmware auf einen USB-Stick zu schreiben, der auf diese Art vorbereitet
wurde, beschaffen Sie sich die nötigen Firmware-Dateien. Weitere Informationen
finden Sie unter <xref linkend="loading-firmware"/>. Entfernen Sie nun den
Stick und stecken Sie erneut ein; es sollten nun zwei Partitionen darauf
sichtbar sein. Sie sollten die zweite der beiden Partitionen in Ihr
Dateisystem einbinden und die Firmware darauf entpacken:

<informalexample><screen>
# mount /dev/<replaceable>sdX2</replaceable> /mnt
# cd /mnt
# tar zxvf <replaceable>/ihr/pfad/zu/</replaceable>firmware.tar.gz
# cd /
# umount
</screen></informalexample>
</para><para>

Um einen USB-Stick vorzubereiten, der Pakete aus einem auf dem Stick
enthaltenen CD-Image installiert, verwenden Sie die Installer-Images aus dem
<filename>hd-media</filename>-Verzeichnis. Sie können sowohl den
<quote>einfachen</quote> wie auch den <quote>flexiblen Weg</quote>
benutzen, um das Image auf den Stick zu kopieren. Für diese
Installationsmethode müssen Sie auch ein CD-Image herunterladen. Das
Installations-Image und das CD-Image müssen auf der gleichen &d-i;-Version
basieren. Falls die Versionen nicht übereinstimmen, werden
wahrscheinlich während der Installation Fehler<footnote>

<para>
Die höchstwahrscheinlich angezeigte Fehlermeldung wird sein, dass keine
Kernel-Module gefunden werden können. Dies bedeutet, dass sich die Version
der Kernel-Modul-udeb-Dateien auf dem CD-Image von der Version des
laufenden Kernels unterscheidet.
</para>

</footnote> auftreten.

</para><para>

Beachten Sie, dass der USB-Stick mindestens 256 MB groß sein sollte
(kleinere Setups sind möglich, wenn Sie gemäß
<xref linkend="usb-copy-flexible"/> vorgehen).

</para>

  <sect2 id="usb-copy-easy">
  <title>Die Dateien kopieren &ndash; der einfache Weg</title>
<para>

Es gibt ein <quote>Alles-in-einem</quote>-Image
<filename>hd-media/boot.img.gz</filename>, das alle Dateien des Installers
enthält (inklusive Kernel)<phrase
arch="x86"> sowie den Bootloader <classname>syslinux</classname> mit
der zugehörigen Konfigurationsdatei</phrase><phrase
arch="powerpc"> sowie den Bootloader <classname>yaboot</classname> mit
der zugehörigen Konfigurationsdatei</phrase>.

</para><para>

Bedenken Sie, dass diese Methode, obwohl sie bequem ist, einen
gravierenden Nachteil hat: die logische Größe des Sticks ist begrenzt
auf 256MB, auch wenn die Kapazität des USB-Sticks eigentlich größer ist.
Falls Sie den Stick jemals wieder für einen anderen Zweck verwenden
und die volle Kapazität zurückbekommen möchten, müssen Sie ihn neu
paritionieren und die Dateisysteme neu erstellen. Ein zweiter großer
Nachteil ist, dass Sie nicht ein Komplett-CD-Image auf den Stick
kopieren können, sondern nur die kleineren Businesscard- oder
Netinst-CD-Images.

</para><para arch="x86">

Um dieses Image zu verwenden, extrahieren Sie es einfach direkt auf Ihren
USB-Stick:

<informalexample><screen>
# zcat boot.img.gz &gt; /dev/<replaceable>sdX</replaceable>
</screen></informalexample>

</para><para arch="powerpc">

Erstellen Sie eine Partition des Typs <quote>Apple_Bootstrap</quote> auf
Ihrem USB-Stick, indem Sie das <userinput>C</userinput>-Kommando von
<command>mac-fdisk</command> verwenden. Entpacken Sie dann das Image direkt
dorthin:

<informalexample><screen>
# zcat boot.img.gz &gt; /dev/<replaceable>sdX2</replaceable>
</screen></informalexample>

</para><para>

Hängen Sie danach den USB-Memory-Stick ins Dateisystem ein <phrase
arch="x86">(<userinput>mount /dev/<replaceable>sdX</replaceable>
/mnt</userinput>),</phrase><phrase arch="powerpc">(<userinput>mount
/dev/<replaceable>sdX2</replaceable> /mnt</userinput>),</phrase>
der jetzt ein <phrase
arch="x86">FAT-Dateisystem</phrase><phrase
arch="powerpc">HFS-Dateisystem</phrase> enthält, und kopieren ein
Debian-<quote>netinst</quote>- oder <quote>businesscard</quote>-ISO-Image
dorthin. Hängen Sie den Stick aus dem Dateisystem aus
(<userinput>umount /mnt</userinput>) &ndash; das war's.

</para>
  </sect2>

  <sect2 id="usb-copy-flexible">
  <title>Die Dateien kopieren &ndash; der flexible Weg</title>
<para>

Wenn Sie flexibler sein oder einfach nur wissen möchten, was passiert,
sollten Sie die folgende Methode nutzen, um die Dateien auf den Stick zu
befördern. Ein Vorteil dieser Methode ist, dass Sie &ndash; falls die Kapazität
Ihres USB-Sticks dafür ausreicht &ndash; die Möglichkeit haben, ein
Komplett-CD-ISO-Image darauf zu kopieren.

</para>

&usb-setup-x86.xml;
&usb-setup-powerpc.xml;

  </sect2>

  <!-- TODO: doesn't this section belong later? -->
  <sect2 arch="x86">
  <title>Vom USB-Stick booten</title>
<warning><para>

Falls Ihr System nicht vom USB-Speichermedium bootet, könnte die Ursache
ein defekter Master-Boot-Record (MBR) auf dem Medium sein. Um dies zu beheben,
nutzen Sie folgenden <command>install-mbr</command>-Befehl aus dem Paket
<classname>mbr</classname>:

<informalexample><screen>
# install-mbr /dev/<replaceable>sdX</replaceable>
</screen></informalexample>

</para></warning>
  </sect2>
 </sect1>
