#! /bin/sh -e

. /usr/share/debconf/confmodule

# set -x

ARCH=`udpkg --print-architecture`
MOUNTPOINT="/target"
DEFAULT=/

if [ "$ARCH" = "i386" -o "$ARCH" = "hppa" ]; then
    TMP=`sfdisk -d /dev/discs/*/disc | grep Id=83 | cut -d\  -f 1`
elif [ "$ARCH" = "s390" -o "$ARCH" = "s390x" ]; then
    TMP=`for i in /dev/dasd/*/disc; do fdasd -p $i | grep "Linux native" | cut -d\  -f 2; done`
elif [ "$ARCH" = "ia64" ]; then
    TMP=$(for i in /dev/discs/*/disc; do
		dev=$(parted $i print | sed -n "s|^Disk geometry for \([^:]*\)/disc:.*$|\1|p")
		parted $i print | sed -n "s|^\([0-9]\+\) \+[0-9\.]\+ \+[0-9\.]\+ \+ext[23].*$|$dev/part\1|p"
	done)
fi

for P in $TMP; do
    if mount | grep -q "^${DEFAULT}"; then
        DEFAULT="${P}"
    fi
    if [ "$PARTS" ]; then
        PARTS="$PARTS, $P"
    else
        PARTS="$P"
    fi
done
PARTS=`echo "$PARTS" | sed 's/, $//'`

db_subst di-utils-mount-partitions/which-partition PARTITIONS $PARTS

if [ "$DEFAULT" ]; then
    db_set di-utils-mount-partitions/which-partition "$DEFAULT"
fi

db_input critical di-utils-mount-partitions/which-partition
db_go

db_get di-utils-mount-partitions/which-partition
PARTITION="$RET"
db_subst di-utils-mount-partitions/mountpoint PARTITION $PARTITION

db_metaget di-utils-mount-partitions/mountpoint choices
MPS=$(echo "$RET" | sed -e 's%,%%g')
for M in $MPS; do
    if mount | grep -q " on /target${M%/}"; then
        continue
    fi

    db_set di-utils-mount-partitions/mountpoint "$M"
    break
done

db_input critical di-utils-mount-partitions/mountpoint
db_go

db_get di-utils-mount-partitions/mountpoint
MOUNTPOINT="$RET"

if [ "$MOUNTPOINT" = "manual" ]; then
    db_subst di-utils-mount-partitions/manual-mountpoint PARTITION $PARTITION
    db_input critical di-utils-mount-partitions/manual-mountpoint
    db_go

    db_get di-utils-mount-partitions/manual-mountpoint
    MOUNTPOINT="$RET"
fi

if [ "$MOUNTPOINT" = "/" ]; then
    pass=1
else
    pass=2
fi

mkdir -p "/target$MOUNTPOINT"

mount "$PARTITION" "/target$MOUNTPOINT"

# This goes after the mount, since else /target/etc might not have
# been mounted yet

mkdir -p "/target/etc/"
if [ ! -e /target/etc/fstab ]; then
    cat > /target/etc/fstab <<EOF
# /etc/fstab: static file system information.
#
# <file system>	<mount point>	<type>	<options>		<dump>	<pass>
proc		/proc		proc	defaults		0	0
EOF
fi

device=`mapdevfs $PARTITION`
echo "$device	$MOUNTPOINT	auto	errors=remount-ro	0	$pass" >> /target/etc/fstab

exit 0
