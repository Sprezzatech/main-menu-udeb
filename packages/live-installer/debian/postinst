#! /bin/sh
set -e

. /usr/share/debconf/confmodule
db_capb backup

. /usr/lib/base-installer/library.sh

NEWLINE="
"

db_input low live-installer/mode || true
db_go || exit 10 # back to menu
db_get live-installer/mode
mode="$RET"

install_live_system () {
	# Look at
	PLACES=""
	PLACE_FOUND=0

	# Load filesystem support
	for script in $(ls /lib/live-installer/*); do
		. $script
	done

	for place in $PLACES; do
		[ ! -e $place ] && continue

		SUPPORT=$(echo $place | sed 's,.*\.\(.*\)$,\1,g')
		info "Using $SUPPORT support for $place"

		PLACE_FOUND=1

		eval ${SUPPORT}_prepare
		STEPS=$(eval ${SUPPORT}_count)

		db_progress INFO live-installer/progress/copying

		COUNT=0
		OLD_IFS=$IFS
		IFS=$NEWLINE
		for item in `find .`; do
			# We need to be ensure it's not a symbolic link otherwise
			# it breaks links for directories.
			if [ -d "$item" ] && [ ! -h "$item" ]; then
				mkdir -p /target/"$item"
			else
				mkdir -p /target/"$(dirname $item)"
				rm -f /target/"$item"
				cp -a "$item" /target/"$item"
			fi

			COUNT=$(($COUNT + 1))
			CURRENT=$(($COUNT * 100 / $STEPS))

			[ x$CURRENT = x$LAST_UPDATE ] && continue

			LAST_UPDATE=$CURRENT
			db_progress STEP 1
		done
		IFS=$OLD_IFS
	done

	if [ ${PLACE_FOUND} -eq 0 ]; then
		error "Could not find any live images"
		exit 1
	fi

	# if we're dumping it, we need to set boot=live
	if [ "$mode" = live ]; then
		# set the init script to use
		if [ -d /cdrom/casper ]; then
			db_set debian-installer/add-kernel-opts "boot=casper"
		else
			db_set debian-installer/add-kernel-opts "boot=live"
		fi

		# skip the hooks
		return
	fi

	# run the scripts found in hook directory after copying the system
	partsdir="/usr/lib/live-installer.d"
	if [ -d "$partsdir" ]; then
		for script in $(ls "$partsdir"/*); do
			base=$(basename $script | sed 's/[0-9]*//')
			if ! db_progress INFO live-installer/progress/$base; then
				db_subst live-installer/progress/fallback SCRIPT "$base"
				db_progress INFO live-installer/progress/fallback
			fi

			if [ -x "$script" ] ; then
				# be careful to preserve exit code
				if log-output -t live-installer "$script"; then
					:
				else
					warning "$script returned error code $?"
				fi
			else
				error "Unable to execute $script"
			fi
		done
	fi
}

waypoint 1	check_target
waypoint 1	get_mirror_info
waypoint 1	pre_install_hooks
waypoint 100	install_live_system
#waypoint 1	setup_dev
waypoint 1	configure_apt_preferences
waypoint 1	configure_apt
waypoint 3	apt_update
#waypoint 2	install_filesystems
waypoint 5	post_install_hooks
#waypoint 1	pick_kernel
#waypoint 20	install_linux
#waypoint 10	install_extra
waypoint 0	cleanup

run_waypoints live-installer/progress/installing

# mount /dev and /proc on target otherwise grub-installer will fail
mount -o bind /dev /target/dev

if [ ! -e /target/proc/version ]; then
	mount -o bind /proc /target/proc
fi

exit 0
