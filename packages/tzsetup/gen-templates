#!/usr/bin/perl
# Given a partial templates file on stdin which can contain some
# existing templates for countries, generates a complete templates file on
# stdout for all countries listed in the zone.tab.
#
# Most countries have only one time zone, and for these a simple dummy
# template is generated, which is not intended to ever be displayed, but
# only to deliver the correct default timezone value.
#
# Countries that have more than one time zone should ideally be included
# in the input file, since generating a usable list of time zones for a
# country is difficult, and it doesn't try very hard to make it
# understandable.

use warnings;
use strict;

print "# This file was generated automatically, edit its source file instead\n";

my %seencc;
{
	local $/="\n\n";
	while (<>) {
		if (m!Template: tzsetup/country/([A-Z]+)!) {
			$seencc{$1}=1;
		}
		print;
	}
}

my $zonetab="/usr/share/zoneinfo/zone.tab";
my %cc2zone;
my %zonedesc;
open (IN, $zonetab) || die "$zonetab: $!";
while (<IN>) {
	chomp;
	next if /#/;
	next unless length;
	my ($cc, $coord, $zone, $comments)=split(' ', $_, 4);
	push @{$cc2zone{$cc}}, $zone unless $seencc{$cc};
	if (defined $comments) {
		$comments=~s/,/\\,/g; # escape for choices list
		$zonedesc{$zone}="$zone ($comments)"; 
	}
	else {
		$zonedesc{$zone}=$zone;
	}
}
close IN;

foreach my $cc (sort keys %cc2zone) {
	print "\nTemplate: tzsetup/country/$cc\n";
	print "Type: select\n";
	if (@{$cc2zone{$cc}} > 1) {
		print "__Choices: ".join(", ", @{$cc2zone{$cc}})."\n";
		print "Choices-en.UTF-8: ".join(", ", map { $zonedesc{$_} } @{$cc2zone{$cc}})."\n";
		print "_Description: Select your time zone:\n";
	}
	else {
		# Not for display, so not translatable and no
		# description needed.
		print "Choices: ".join(", ", @{$cc2zone{$cc}})."\n";
	}
}
