#!/bin/sh
set -e

. /usr/share/os-prober/common.sh

partitions () {
	find /dev/discs/ -follow -type b | grep /part
}

realdev () {
	# Using 'readlink -f' here would be simpler but is not (yet) supported by busybox
	disk=$(echo $1 | cut -d"/" -f1-4)
	[ -z "$disk" ] && return 1
	part=$(echo $1 | sed "s:$disk::")

	realdev=$(readlink $disk | sed "s:^\.\./::")
	[ -z "$realdev" ] && return 1
	echo "/dev/$realdev$part"
	return 0
}

test_raid () {
	[ -f /proc/mdstat ] || return 1

	# /proc/mdstat has the device names without leading /dev/
	if grep -q "^md.*$(echo $1 | sed "s:^/dev/::")" /proc/mdstat ; then
		debug "$1: part of software raid array"
		return 0
	else
		return 1
	fi
}

rm -f /var/lib/os-prober/*

for prog in /usr/lib/os-probes/init/*; do
	if [ -x $prog ] && [ -f $prog ]; then
		debug "running init $prog"
		$prog || true
	fi
done

for partition in $(partitions); do

	# Partman mounts partitions on /dev/ide/ and /dev/scsi, not /dev/discs
	# Determine the real device for the partition (on failure use $partition)
	if ! realpart=$(realdev $partition) ; then
		realpart=$partition
	fi

	# Skip partitions used in software RAID arrays
	test_raid $realpart && continue

	if ! grep -q "^$realpart " /proc/mounts ; then
		for test in /usr/lib/os-probes/*; do
			if [ -f $test ] && [ -x $test ]; then
				debug "running $test on $partition"
				if $test $partition; then
					debug "os detected by $test"
			   		break
				fi
			fi
		done
	else
		mpoint=$(grep "^$realpart " /proc/mounts | cut -d " " -f 2)
		if [ "$mpoint" != "/target" ] && [ "$mpoint" != "/" ]; then
			type=$(grep "^$realpart " /proc/mounts | cut -d " " -f 3)
			for test in /usr/lib/os-probes/mounted/*; do
				if [ -f $test ] && [ -x $test ]; then
					debug "running $test on mounted $partition"
					if $test $partition $mpoint $type; then
						debug "os detected by $test"
						break
					fi
				fi
			done
		fi
	fi
done
