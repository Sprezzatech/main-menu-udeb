#!/bin/sh
set -e

. /usr/share/debconf/confmodule

if [ -f /etc/mtab ]; then
    MTAB=/etc/mtab
else
    MTAB=/proc/mounts
fi

# detect which is the root partition: /target
rootfs=`grep ' /target ' $MTAB |cut -d' ' -f1 -s`

# Find all partitions with fat filesystems and the boot flag set.  May be
# enough just to look for one of those.  OTOH, elilo will convert any
# partition you give it to FAT...  Also translates /dev/discs paths in to
# real /dev/scsi (or ide) paths.

rm -f /tmp/efi_boot.list

for d in /dev/discs/*/disc; do
    parted $d print | ( while read minor start end fs nameflags ; do
      case "$minor" in
      Disk)
	if [ "$start" = geometry ]; then
	    dev=$(echo $fs | sed -n "s|\([^:]*\)/disc:|\1|p")
	fi
	;;
      [1-9])
	case "$fs" in
	fat16|fat32)
	    if echo "$nameflags" | grep "boot" >/dev/null; then
		echo ${dev}/part${minor} >> /tmp/efi_boot.list
	    fi
	    ;;
	esac
	;;
      esac
    done)
done	
if [ -s /tmp/efi_boot.list ]; then
    for d in `cat /tmp/efi_boot.list`; do
	if [ -n "$BOOTPARTS" ]; then
	    BOOTPARTS="$BOOTPARTS, $d"
	else
	    BOOTPARTS=$d
	fi
    done
else
	db_input critical elilo-installer/no-bootpart
	db_go
	exit 1
fi
db_subst elilo-installer/bootpart BOOTPARTS $BOOTPARTS

db_fset elilo-installer/bootpart seen false
db_input critical elilo-installer/bootpart
db_go

db_get elilo-installer/bootpart
bootpart=$RET

bootpart=`mapdevfs $bootpart`
rootfs=`mapdevfs $rootfs`

# Write out elilo.conf

chroot /target /usr/sbin/elilo --autoconf --boot $bootpart --root $rootfs --efiboot

