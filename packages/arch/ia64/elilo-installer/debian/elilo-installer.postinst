#!/bin/sh
set -e

. /usr/share/debconf/confmodule

db_capb backup

log=/var/log/messages

log() {
	logger -t elilo-installer "$@"
}

error() {
	log "error: $@"
}

info() {
    log "info: $@"
}

if [ -f /etc/mtab ]; then
    MTAB=/etc/mtab
else
    MTAB=/proc/mounts
fi

# detect which is the root partition: /target
rootfs=`grep ' /target ' $MTAB |cut -d' ' -f1 -s`

# Find all partitions with fat filesystems and the boot flag set.  May be
# enough just to look for one of those.  OTOH, elilo will convert any
# partition you give it to FAT...  Also translates /dev/discs paths in to
# real /dev/scsi (or ide) paths.

rm -f /tmp/efi_boot.list

for d in /dev/discs/*/disc; do
    parted $d print | ( while read minor start end fs nameflags ; do
      case "$minor" in
      Disk)
	if [ "$start" = geometry ]; then
	    dev=$(echo $fs | sed -n "s|\([^:]*\)/disc:|\1|p")
	fi
	;;
      [1-9])
	case "$fs" in
	fat16|fat32)
	    if echo "$nameflags" | grep "boot" >/dev/null; then
		echo ${dev}/part${minor} >> /tmp/efi_boot.list
	    fi
	    ;;
	esac
	;;
      esac
    done)
done	
if [ -s /tmp/efi_boot.list ]; then
    for d in `cat /tmp/efi_boot.list`; do
	if [ -n "$BOOTPARTS" ]; then
	    BOOTPARTS="$BOOTPARTS, $d"
	else
	    BOOTPARTS=$d
	fi
    done
else
	db_input critical elilo-installer/no-bootpart
	db_go
	exit 1
fi
rm -f /tmp/efi_boot.list
db_subst elilo-installer/bootpart BOOTPARTS $BOOTPARTS

db_input critical elilo-installer/bootpart
db_go

db_get elilo-installer/bootpart
bootpart=$RET

bootpart=`mapdevfs $bootpart`
rootfs=`mapdevfs $rootfs`

# Write out elilo.conf

db_progress START 0 2 elilo-installer/title

db_progress INFO elilo-installer/progress_installing

if ! apt-install elilo ; then
	info "Calling 'apt-install elilo' failed"
	# Hm, unable to install elilo into /target/, what should we do?
	db_input critical elilo-installer/apt-install-failed || [ $? -eq 30 ]
	if ! db_go; then
		db_progress STOP
		exit 10 # back up to menu
	fi
	db_get elilo-installer/apt-install-failed
	if [ true != "$RET" ] ; then
		db_progress STOP
		exit 1
	fi
fi

db_progress STEP 1

db_subst elilo-installer/progress_running bootdev "$bootpart"
db_progress INFO elilo-installer/progress_running

chroot /target /usr/sbin/elilo --autoconf --boot $bootpart \
      --root $rootfs --efiboot
errcode=$?
if [ "$errcode" = 0 ] ; then
	info "Boot loader successfully installed into EFI partition"
else
	db_subst elilo-installer/failed ERRCODE "$errcode"
	db_input critical elilo-installer/failed || [ $? -eq 30 ]
	db_progress STOP
	db_go || exit 10 # back up
	exit 1
fi

db_progress STEP 1

db_progress STOP

exit 0
