#!/bin/sh
set -e

if [ -f /etc/mtab ]; then
    MTAB=/etc/mtab
else
    MTAB=/proc/mounts
fi

# detect which is the root partition: /target
rootfs=`/target/bin/sed -ne '/^[^ ]* \/target /s/ .*//p' $MTAB`

# detect which hard drive has /target/boot mounted on it. this does *not*
# have to be the same as the drive /target is mounted on.
bootfs=`/target/bin/sed -ne '/^[^ ]* \/target\/boot /s/ .*//p' $MTAB`

if [ "$bootfs" = '' ]; then
	bootfs=$rootfs
fi

# kernels go in /boot, so palo must go on that device
rootdev=`/target/bin/echo $rootfs | /target/bin/sed 's/part[0-9]\+$/disc/'` 
bootdev=`/target/bin/echo $bootfs | /target/bin/sed 's/part[0-9]\+$/disc/'` 

bootpart=`/target/bin/echo $bootfs | /target/bin/sed 's/^.*part\([0-9]\+\)$/\1/'`

if [ "$rootfs" = "$bootfs" ]; then
  kernel=$bootpart/boot/vmlinux
else
  kernel=$bootpart/vmlinux
fi

bootdev=`mapdevfs $bootdev`
rootfs=`mapdevfs $rootfs`

# See /build/boot-floppies/boot-floppies-cvs/utilities/dbootstrap/bootconfig.c

vmlinux=`cd /target/boot && ls -l vmlinux | /target/bin/sed 's/^.* -> \(.*\)$/\1/'`
#write out palo.conf
/target/bin/echo "--commandline=$kernel root=$rootfs HOME=/" > /target/etc/palo.conf
/target/bin/echo "--recoverykernel=/boot/$vmlinux" >> /target/etc/palo.conf
/target/bin/echo "--init-partitioned=$bootdev" >> /target/etc/palo.conf

chroot /target /sbin/palo

