#! /bin/sh

set -e

. /usr/share/debconf/confmodule

db_get debian-installer/locale
LOCALE="$RET"

# Set locale to C if it has not yet been set
# This can happen during e.g. s390 installs where localechooser is not run
[ "$LOCALE" ] || LOCALE="C"

if [ "$LOCALE" != "C" ] ; then
	db_get debian-installer/language
	LANGLIST="$RET"
fi

EXTRAS=""
if db_get localechooser/supported-locales ; then
	EXTRAS="$(echo "$RET" | sed 's/,//g')"
fi

LANGUAGE="${LOCALE%%_*}"

# Enable translations. We use belocs-locales-data for languages which
# don't have a locale in the locales package.
if [ "$LOCALE" != "C" ] || [ "$EXTRAS" ]; then
	# Which locale package to install
	case "$LANGUAGE" in
		ku|sa)
			apt-install belocs-locales-data || true
			apt-install belocs-locales-bin || true
			;;
		*)
			apt-install locales || true
			;;
	esac
fi

# Set global locale and language, and make sure the glibc locale is
# generated.
DESTFILE="/target/etc/environment"
echo "LANG=\"$LOCALE\"" >> $DESTFILE
if [ "$LANGLIST" ]; then
	echo "LANGUAGE=\"$LANGLIST\"" >> $DESTFILE
fi
# If the locale isn't already valid, append it to locale.gen
gen=
if log-output -t localechooser --pass-stdout \
    chroot /target/ /usr/sbin/validlocale "$LOCALE" \
    >> /target/etc/locale.gen; then
	: # Nothing to do
else
	# New locale added to locale.gen, generate it
	gen=1
fi
for loc in $EXTRAS; do
	if [ "$loc" = "$LOCALE" ]; then
		continue
	fi
	if log-output -t localechooser --pass-stdout \
	    chroot /target/ /usr/sbin/validlocale "$loc" \
	    >> /target/etc/locale.gen; then
		: # Nothing to do
	else
		# New locale added to locale.gen, generate it
		gen=1
	fi
done
if [ "$gen" ]; then
	log-output -t localechooser \
	    chroot /target /usr/sbin/locale-gen --keep-existing
fi

exit 0
