#!/usr/bin/perl
#
# Author: Petter Reinholdtsen (2003)
# 	  Christian Perrier (2004)
#
# Extract language options for debian-installer

use strict;
use warnings;

my $list       = shift;
my $template   = shift;
my $templatein = shift;

my $debug = 0;

my %codes;
my %translationmap;

sub get_language_names {
    my $list = shift;
    my $level = shift;
    my @names;
    print "Loading $list for display level $level\n" if ($debug);
    open(L, "< $list") || die "Unable to read $list";
    while (<L>) {
	print if ($debug);
	chomp;
	next if m/^\#/;
	my ($code, $name, $translation, $lev, ) = split(/;/);
	push(@names, $name) if ("$lev" <= "$level");

	$codes{$name} = $code;

	$translation = $name .
	               (" " x (22 - length($name))).
	               "- $translation";
	$translationmap{$name} = $translation;
    }
    close(L);
    return @names;
}

my @languagenames_ascii = get_language_names($list,0);
my @languagenames_latin = get_language_names($list,1);
my @languagenames_fb    = get_language_names($list,3);
my @languagenames_all   = get_language_names($list,4);

sub order_trans {
    my ($a_language)=$translationmap{$a}=~/^(\w+)/;
    my ($b_language)=$translationmap{$b}=~/^(\w+)/;
    return $a_language cmp $b_language;
}

#Sorts languages, making sure that the C locale is listed first
sub sort_C_first {
    my @full_list = @_;
    my @C_locale = grep /^C$/, @full_list;
    my @languages = grep !/^C$/, @full_list;
    my @new_list = sort order_trans @languages;
    unshift @new_list, @C_locale;
    return @new_list;
}

my @translations_ascii;
my @translations_latin;
my @translations_fb;
my @translations_all;
my @languagecodes_ascii;
my @languagecodes_latin;
my @languagecodes_fb;
my @languagecodes_all;
my @sortedlanguagenames_ascii;
my @sortedlanguagenames_latin;
my @sortedlanguagenames_fb;
my @sortedlanguagenames_all;
for my $name (sort_C_first @languagenames_ascii) {
    if (exists $translationmap{$name}) {
	push(@translations_ascii, $translationmap{$name});
	push(@languagecodes_ascii, $codes{$name});
	push(@sortedlanguagenames_ascii, $name);
    }
}
for my $name (sort_C_first @languagenames_latin) {
    if (exists $translationmap{$name}) {
	push(@translations_latin, $translationmap{$name});
	push(@languagecodes_latin, $codes{$name});
	push(@sortedlanguagenames_latin, $name);
    }
}
for my $name (sort_C_first @languagenames_fb) {
    if (exists $translationmap{$name}) {
	push(@translations_fb, $translationmap{$name});
	push(@languagecodes_fb, $codes{$name});
	push(@sortedlanguagenames_fb, $name);
    }
}
for my $name (sort_C_first @languagenames_all) {
    if (exists $translationmap{$name}) {
	push(@translations_all, $translationmap{$name});
	push(@languagecodes_all, $codes{$name});
	push(@sortedlanguagenames_all, $name);
    }
}

my $codes_ascii=join(", ", @languagecodes_ascii);
my $langstr_ascii=join(", ", @sortedlanguagenames_ascii);
my $nativemessages_ascii=join(", ", @translations_ascii);
my $codes_latin=join(", ", @languagecodes_latin);
my $langstr_latin=join(", ", @sortedlanguagenames_latin);
my $nativemessages_latin=join(", ", @translations_latin);
my $codes_fb=join(", ", @languagecodes_fb);
my $langstr_fb=join(", ", @sortedlanguagenames_fb);
my $nativemessages_fb=join(", ", @translations_fb);
my $codes_all=join(", ", @languagecodes_all);
my $langstr_all=join(", ", @sortedlanguagenames_all);
my $nativemessages_all=join(", ", @translations_all);

open(TIN, "< $templatein") || die "Unable to read $templatein";
open(TOUT, "> $template") || die "Unable to write $template";
while (<TIN>) {
    s/\@languagecodes_ascii\@/$codes_ascii/;
    s/\@languagenames_ascii\@/$langstr_ascii/;
    s/\@nativemessages_ascii\@/$nativemessages_ascii/;
    s/\@languagecodes_latin\@/$codes_latin/;
    s/\@languagenames_latin\@/$langstr_latin/;
    s/\@nativemessages_latin\@/$nativemessages_latin/;
    s/\@languagecodes_fb\@/$codes_fb/;
    s/\@languagenames_fb\@/$langstr_fb/;
    s/\@nativemessages_fb\@/$nativemessages_fb/;
    s/\@languagecodes_all\@/$codes_all/;
    s/\@languagenames_all\@/$langstr_all/;
    s/\@nativemessages_all\@/$nativemessages_all/;
    print TOUT;
}
close(TOUT) || warn;
close(TIN) || warn;
