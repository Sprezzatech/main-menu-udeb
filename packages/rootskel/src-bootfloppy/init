#!/usr/lib/klibc/bin/sh.shared
# This is a special init for the boot floppy image.
# It loads the main d-i initrd from either a second floppy, or a USB
# storage device.
#
# INSTALL_MEDIA_DEV can be passed as a boot parameter to force only 
# one device or set of devices to be scanned.

set -e

# Add klibc path
PATH=/usr/lib/klibc/bin:$PATH

# The identification of this floppy and the desired root floppy.
SYSTEM="debian-installer"
ROOT_LABEL="Root floppy"
ROOT_FS="ext2"

MODULE_DIR="/lib/modules/*"


abort () {
	echo $1 >&2
	echo "Giving up!" >&2
	exit 1
}

debugshell () {
	if [ "$BOOT_DEBUG" -gt 2 ]; then
		echo "This is a debug shell ($1)."
		/usr/lib/klibc/bin/sh.shared
	fi
}

if [ "$BOOT_DEBUG" -gt 1 ]; then
	set -x
fi

mount -t proc proc proc
mount -t sysfs sysfs sys


# TODO: no modprobe in klibc
if ! insmod $MODULE_DIR/kernel/drivers/block/floppy.ko 2>/dev/null; then
	abort "Cannot load floppy module"
fi

makedev () {
    [ -e "$1" ] || mknod "$1" "$2" "$3" "$4"
}

mkdir -p 755 /dev

for i in 0 1 2 3 4 5 6 7; do
	if sys_dev=$(cat /sys/block/fd$i/dev 2>/dev/null); then
		case $sys_dev in
			2:0) makedev  /dev/fd"$i" b 2 0 ;;	    
			2:1) makedev  /dev/fd"$i" b 2 1 ;;	    
			2:2) makedev  /dev/fd"$i" b 2 2 ;;	    
			2:3) makedev  /dev/fd"$i" b 2 3 ;;	    
			2:128) makedev  /dev/fd"$i" b 2 128 ;;	    
			2:129) makedev  /dev/fd"$i" b 2 129 ;;	    
			2:130) makedev  /dev/fd"$i" b 2 130 ;;	    
			2:131) makedev  /dev/fd"$i" b 2 131 ;;
			*) echo "Unknown device major:minor for /dev/fd$i" ;;
		esac
	fi
done
debugshell "after hardware detection"

echo
echo
echo
echo
echo

LOADED=0
while [ "$LOADED" = 0 ]; do
	nb_timeout=3
	
	echo
	echo "Insert the $ROOT_LABEL."
		
	OLDPRINTK=$(cat /proc/sys/kernel/printk)
	echo 0 > /proc/sys/kernel/printk
	echo -n "Press Enter when ready"
	if [ $nb_timeout = 0 ]; then
		echo -n ":"
		read line
	else
		# boot floppy has no USB keyboard driver
		# so we use a timeout instead
		READ_TIMEOUT=30 #seconds
		echo -n ", or wait $READ_TIMEOUT seconds: "
		if read -t $READ_TIMEOUT line; then
			# it is not a usb keyboard so
			# we no longer need a timeout
			nb_timeout=0
		else
			nb_timeout=$(($nb_timeout -1))
		fi
	fi
	echo ""
	echo $OLDPRINTK > /proc/sys/kernel/printk
	
	# Look for any storage devices we can find.
	# Only ones that we have modules loaded for should exist,
	# so this is not at brute-force as it may seem.
	# It's done each time through the loop as USB devices may
	# be inserted at any time.
	DEVS=""
	if [ -z "$INSTALL_MEDIA_DEV" ]; then
		DEVS=/dev/fd?
	elif [ -e "$INSTALL_MEDIA_DEV" ]; then
		DEVS="$INSTALL_MEDIA_DEV"
	fi
		
	for dev in $DEVS; do
		if [ "$LOADED" = 0 ] && [ -b $dev ]; then
			if ! mount -t tmpfs -o size=100M tmpfs mnt 2>/dev/null && \
			   ! mount -t shm shm mnt 2>/dev/null; then
				abort "Cannot mount mnt"
			fi
			cd mnt
			echo -n "Trying $dev..."
			# cpio -V will add dots as the floppy is read.
			# Make sure to catch errors from the cat (tricky).
			# Also, klibc zcat refuses to read device files, so the
			# use of cat below is not useless. zcat will also
			# complain about trailing NULL padding, so /dev/null it.
			echo 0 > /tmp/cat_failure
			if ( cat $dev || echo 1 > /tmp/cat_failure ) | zcat 2>/dev/null | cpio -i -V  && \
			   [ "$(cat /tmp/cat_failure)" = 0 ]; then
				LOADED=1
				echo "loaded."
				cd ..
			else
				echo "install media seems to be bad, or $ROOT_LABEL not inserted!" >&2
				cd ..
				umount mnt
			fi
		fi
	done

	if [ "$LOADED" = 0 ]; then
		if [ -z "$DEVS" ]; then
			echo "No devices found!"
		else
			echo "Cannot find $ROOT_LABEL"
		fi
	fi
done

debugshell "filesystem loaded and set up"

umount proc

echo "Starting the installer..."
exec run-init mnt /init
