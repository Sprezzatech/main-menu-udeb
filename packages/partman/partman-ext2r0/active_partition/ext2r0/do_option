#!/bin/sh

. /lib/partman/definitions.sh

dev=$2
id=$3
part=$dev/$id

cd $dev

[ -f $part/method -a -f $part/acting_filesystem ] || return 0
filesystem=$(cat $part/acting_filesystem)

do_mountpoint () {
    local noninteractive
    noninteractive=true
    while true; do
	if [ -f "$part/mountpoint" ]; then
	    old_mountpoint=$(cat $part/mountpoint)
	else
	    old_mountpoint=/
	fi
	db_fset partman-ext2r0/mountpoint seen false
	db_set partman-ext2r0/mountpoint "$old_mountpoint"
	db_input critical partman-ext2r0/mountpoint || $noninteractive
	db_go || return 1
	db_get partman-ext2r0/mountpoint

	case "$RET" in
	    Do?not?mount?it)
                [ ! -f "$part/mountpoint" ] || rm $part/mountpoint
		break
		;;
	    Enter?manually)
		if do_mountpoint_manual; then break; fi
		noninteractive="return 1"
		;;
	    *)
		echo $RET >$part/mountpoint
		break
	esac
    done
}

do_mountpoint_manual () {
    local noninteractive
    noninteractive=true
    while true; do
	new_mountpoint=''
	while [ ! "$new_mountpoint" ]; do
	    if [ -f "$part/mountpoint" ]; then
		old_mountpoint=$(cat $part/mountpoint)
	    else
		old_mountpoint=/
	    fi
	    db_fset partman-ext2r0/mountpoint_manual seen false
	    db_set partman-ext2r0/mountpoint_manual "$old_mountpoint"
	    db_input critical partman-ext2r0/mountpoint_manual || $noninteractive
	    db_go || return 1
	    db_get partman-ext2r0/mountpoint_manual
	    
	    if expr "$RET" : '/[^ ]*' >/dev/null; then
		new_mountpoint=$RET
	    else
		db_fset partman-ext2r0/bad_mountpoint seen false
		db_input high partman-ext2r0/bad_mountpoint || true
		db_go || true
	    fi
	done
	echo $RET >$part/mountpoint
	break
    done
}

case $1 in
    mountpoint)
	do_mountpoint
	update_partition $dev $id
	;;
    options)
	;;
esac

