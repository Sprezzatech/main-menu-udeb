#!/bin/sh

# This script sets the boot flag for partitions whose method is
# newworld. It doesn't remove it for non-newworld partitions: although I
# don't know of a reason to make a partition other than Apple_Bootstrap
# bootable, removing boot flags might be a bit hostile if there are
# cases I don't know about.

. /lib/partman/definitions.sh

dev=$1
num=$2
id=$3
size=$4
type=$5
fs=$6
path=$7
name=$8

cd $dev

if [ $fs = free ]; then
    exit 0
fi

method=
if [ -f $id/method ]; then
    method=$(cat $id/method)
fi

has_boot=no
flags=''
open_dialog GET_FLAGS $id
while { read_line flag; [ "$flag" ]; }; do
    if [ "$flag" != boot ]; then
	if [ "$flags" ]; then
	    flags="$flags
$flag"
	else
	    flags="$flag"
	fi
    else
	has_boot=yes
    fi
done
close_dialog

if [ "$method" = newworld ]; then
    if [ "$has_boot" = no ]; then
	open_dialog SET_FLAGS $id
	write_line "$flags"
	write_line boot
	write_line NO_MORE
	close_dialog
    fi
    [ -d "$id" ] || mkdir "$id"
    >"$id/bootable"
fi


# The following is a hack and will be removed in future versions of
# partman.  It ensures that the newworld partition can not be used for
# some regular file system.
if [ "$method" = newworld ]; then
    if [ -f $id/format ]; then
	# yaboot's mkofboot will do this for us when installing the
	# bootloader.
	rm $id/format
    fi
    if [ -f $id/detected_filesystem ]; then
	# Nothing to see here. Move along.
	rm $id/detected_filesystem
    fi
fi

