#!/bin/sh
#
# Copy modules into the right directories in preparation for building udebs.
# This script is named after the its counterpart in the original
# kernel-image-di package by Joey Hess <joeyh@debian.org>.
#
# Copyright (c) 2001-2002 Herbert Xu <herbert@debian.org>
#
# $Id: copy-modules,v 1.3 2003/10/21 15:46:40 joeyh Exp $

set -e

deplist() {
	deps=$1
	list=$2
	cp $list $tmpdir/work

	# recursively append external dependencies to $list
	while :; do

		# list external dependencies of $work
		join -o 2.2 $tmpdir/work $deps | sort -u | comm -23 - $list \
			> $tmpdir/work.new
		mv $tmpdir/work.new $tmpdir/work

		# exit if work is empty
		[ -s $tmpdir/work ] || break
      
		# append work to $list
		sort -um -o $list $list $tmpdir/work
	done
}

flavour=$1
version=$version-$flavour
home=$PWD

trap 'rm -rf $tmpdir' EXIT
tmpdir=$(tempfile)
rm $tmpdir
mkdir $tmpdir

moddir=/lib/modules/$version

# get module dependencies from modules.dep
# sort it by by field 2
moddir_awk="\/lib\/modules\/$version\/kernel\/"
awk '
	{
		gsub(/'"$moddir_awk"'/, "", $0)
	}

	$1 ~ /:$/ {
		module = substr($1, 1, length($1) - 1)
		if ($2) {
			print module "\t" $2
		}
		next
	}

	$1 {
		print module "\t" $1
	}
' $moddir/modules.dep | sort -k 2,2 > $tmpdir/deps
unset moddir_awk

mkdir $tmpdir/module-deps $tmpdir/module-list

# loop over all udebs, sort that all 
# dependent modules are processed before
# the module
for i in $(
	{
		find modules/ -maxdepth 1 -type f -printf "%f\t%f\n"
		cat module-deps
	} | tsort | tac
); do

	# write dependent (direct and indirect) udebs to exclude
	# write dependencies to module-deps/$i
	echo $i | join -o 2.2 - $home/module-deps | {	# dependent modules
		cd $tmpdir/module-deps
		xargs -r sh -c 'printf "%s\n" "$@"; cat "$@"' sh #direct and indirect deps
	} | sort -u | tee $tmpdir/module-deps/$i | {	# write deps
		cd $tmpdir/module-list
		xargs -r cat
	} | sort -u > $tmpdir/exclude			# modules to exclude

	cp $home/modules/$i $tmpdir/module-list

	# exclude modules in exclude from dependency list
	join -2 2 -v 2 $tmpdir/exclude $tmpdir/deps |
		sort -k 1,1 > $tmpdir/tmpdeps

	# include dependent modules which are not in a
	# dependent udeb into module-list/$i
	deplist $tmpdir/tmpdeps $tmpdir/module-list/$i

	# copy kernel modules to debian/$i-$version-di
	cd $moddir/kernel
	tar cfT - $tmpdir/module-list/$i |
	(
		dir=$home/debian/$i-$version-di/lib/modules/$version/kernel
		mkdir -p $dir
		cd $dir
		tar xf -
	)
done
