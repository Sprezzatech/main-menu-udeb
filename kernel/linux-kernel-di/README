This package generates kernel modules udebs for the debian installer. It
build-depends on the kernel image, and pulls modules out of it to create
the udebs. It also generates one udeb with only the kernel in it.

The udebs to be generated are listed in the package-lists file. The
kernel-versions file contains information about what versions
kernel(s) to use for each architecture. The gen-control program takes
these two files plus debian/control.stub and generates
debian/control. The udebs are named with the version of the kernel in
their package name, since that can be useful during kernel
transitions. The string -di is appended to prevent any posible
collisions in names with real debs.

The modules to put in each udeb are listed in the files in the
modules/<arch> directory (if modules/<arch>-<flavour> exists, it is used
instead). If module lists are the same across architectures, they can be
put in modules/common, and symlinked to modules/<arch>[1]. The files
contain paths relative to the top-level kernel modules directory
(/lib/modules/<kernel-version>/). In fact these files are used as the input
to a tar command, and can list either files, or whole directories, though
the latter is rarely used. Modules can have a "-" put in front of their
filename, if so that means the module is optional, and the build will not
fail if the module is not available.

The copy-modules script does the actual copying of modules to the temp dirs
that are used to build the package. It is complicated by the need to make
sure that all of a module's dependencies are included in its package, or in
a package on which it depends. If necessary, extra modules will be added to
a package to make sure the dependencies are satisfied.

The dependency information from modules.dep is compared with the output of
the module-deps script, which extracts dependency information from
package-lists, and formats it in a form used by tsort. If any additional
modules are needed to meet dependencies of modules in the udebs, they will
automatically be added. Since that might result in modules being copied to
multiple udebs, the find-dups program is used to scan for duplicates of
modules. When you have duplicates, you need to find (or make) a package
that both packages depend on, and move the duplicate modules to it.

SOURCEDIR can be set to a directory containing a tree of kernel modules and
kernel image, and it will be used instead of the usual tree. That directory
will need to have a modules.dep file already generated for this to work
though -- but the modules.dep can even be copied from another system and
it'll work. This can be useful if you cannot install the required
kernel-image package, or are cross-compiling.

[1] Since CVS doesn't do symlinks, files named .lnk can contain the
    text of the symlink, they are turned into symlinks at build time, and
    all symlinks are removed at clean time.
