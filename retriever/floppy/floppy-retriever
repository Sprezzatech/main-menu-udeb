#!/bin/sh -e

. /usr/share/debconf/confmodule

db_capb BACKUP

# FIXME FIXME FIXME
mountfloppy()
{
    if ! mount | cut -d' ' -f3 | grep -q '^/floppy$'; then
        if [ ! -d /dev/floppy ]; then
            modprobe floppy >> /var/log/messages 2>&1
        fi
        if [ ! -d /dev/floppy ]; then
            exit 1
        fi
        if ! grep -q ^vfat /proc/modules ; then
            modprobe vfat >> /var/log/messages 2>&1
        fi

        db_fset retriever/floppy/insert seen false || true
        db_fset retriever/floppy/fstype seen false || true

        db_input critical retriever/floppy/insert || true
        db_input low retriever/floppy/fstype || true
        db_go # no '|| true', we want it to exit on 30 (backup)

        db_get retriever/floppy/fstype
        case x$RET in
            xFAT)
                fstype=msdos
                ;;
            xFAT32)
                fstype=vfat
                ;;
            xExt2)
                fstype=ext2
                ;;
            *)
                fstype=auto
                ;;
        esac

        mount /dev/floppy/0 -t$fstype /floppy
    fi
}

case "x$1" in
    xretrieve)
        mountfloppy
        if [ -e /floppy/$2 ]; then
            ln -sf /floppy/$2 "$3"
            exit $?
        else
            exit 1
        fi
        ;;
    xpackages)
        # generate a Packages file based on what udebs are on the floppy
        if [ "$3" != "." ]; then
            # sorry, no compressed files
            exit 1
        fi
        if [ -n "$4" -a "$4" != "main" ]; then
            # only do 'main'
            exit 1
        fi
        mountfloppy
        rm -f "$2"
        touch "$2"
        for filename in /floppy/*.deb /floppy/*.udeb; do
            if [ -f "$filename" ]; then
                udpkg -f "$filename" >> "$2"
                path="`echo "$filename" | sed 's,^/floppy/,,'`"
                echo "Filename: $path" >> "$2"
                echo >> "$2"
            fi
        done
        ;;
    xcleanup)
        umount /floppy || true
        ;;
    *)
        # unknown command
        exit 1
        ;;
esac
