The files in this directory are used to build the Debian installer.
Basically it consists of downloading udebs, unpacking them, applying some
magic (library reduction etc.) and building an image.

Recipe:
 - Install the build-dependencies on the host system
   (run dpkg-checkbuilddeps).
 - Create your own sources.list.udeb.local, otherwise the build host's
   sources.list is taken as a template for sources.list.udeb.
 - Run "make" to get a list of available targets.
 - Build an image using one of the build_ targets (build_netboot,
   build_all, etc).
 - Look in dest/, and boot your new floppy, netboot image, hd-media
   image,  or mini iso. (Mini isos are created by make build_netboot,
   only on i386 for now.)
 
A more detailed overview of how the installer is built:

* 'sources.list.udeb' is used to configure apt to download udebs from a
  mirror. It is autogenerated based on '/etc/apt/sources.list', by the
   Makefile's 'sources.list.udeb' target. Or you can provide your own
   locally modified 'sources.list.udeb.local'.
* The Makefile is configured via the make fragments in the config
  directory. These are organized in a subarch/medium/flavour hierarchy and
  get included by the main Makefile.
* config/local can be added to override anything set in other fragments
  which are local to your system which you want to avoid accidentially
  committing.
* 'pkg-lists' has subdirectories for the different image types that list
  udebs that are put on each image. The pkg-lists/*/common files list
  udebs common to all architectures, and the files named by architecture list
  udebs specific to an architecture. These files can have #include lines to
  include files from pkg-lists. Also, ${kernel:Version} in these files is
  replaced with the kernel version, as set in the KERNELIMAGEVERSION variable
  (plus the KERNEL_FLAVOUR variable).
* Apt is used to download the required udebs. This does *not* include
  libraries; libraries used by udebs must be installed on the build system,
  and so are build-depended on.
* If you have some udebs that are not available on your mirror yet,
  you can drop them in 'localudebs/' and they will be used. 
  HOWEVER, the current way they are used does not make apt aware of the
  files in localudebs when it is installing other udebs. So if you have
  added a package to localudebs to satisfy a dependency of some other udeb
  that is not in localudebs, apt will still fail during the build. The way
  around this for now is to copy any such udebs into localudebs, then apt
  does not have to worry about installing them and everything will work.
* dpkg is used to unpack the udebs into the build directory.
* A customized set of reduced libraries is generated to correspond to the
  udebs that were installed.
* Some boot images have associated "driver" disks. These disks just get
  udebs put on them.
* The final images are put in the dest/ directory.
