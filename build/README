The files in this directory are used to build the Debian installer.
Basically it consists of downloading udebs, unpacking them, applying some magic
(library reduction etc.) and building an image.

Recipe:
 - install the build-dependencies on the host system
   (Check the field Build-Depends in debian/control or use
   dpkg-checkbuilddeps)
 - adjust apt sources (create sources.list.local - see sources.list)
 - run "{sudo,fakeroot} make build"
 - run "{sudo,fakeroot} make image"

A more detailed overview of how the installer is built:

* sources.list is used to configure apt to download udebs from a mirror.
  You can change it to use whatever debian archive is convenient for you.
* The Makefile is configured via the make fragements in the config
  directory. There are per-arch and per-image fragments that are included
  by the main Makefile. There is also a make subdirectory, with
  architecture-specific fragements that are included into the makefile for
  non-configuration items.
* pkg-lists/base contains udebs that are put on all systems; the other files
  in that directory define different types of debian installer systems
  by listing the udebs that they are composed of. Note that
  ${kernel:Version} in these files is replaced with the kernel version, as
  set in the KERNELIMAGEVERSION variable.
* There's a TYPE variable that selects one of the lists. Eg, 
  "fakeroot make TYPE=net"
* Apt is used to download the required udebs. This does *not* include
  libraries; libraries used by udebs must be installed on the build system,
  and so are build-depended on. You will be prompted during the
  build process when some libraries are missing.
  /* FIXME: add libnewt0 or alternative to build-deps when the situation
   * with it is clear */
* If you have some udebs that are not available on your mirror yet,
  you can drop them in localudebs/ and they will be used.
* dpkg is used to unpack the udebs into the build directory.
* A customized set of reduced libraries is generated to correspond to the
  udebs that were installed.
* "make demo" (run as root) will chroot into the system.
* To burn a demo CD image (ISO) with the created installation system,
  add the "image" argument to the the make call above. The resulting
  filesystem images will be placed in dest/.
