arch-image: $(IMAGE)

ifdef FLOPPY_SIZE
# Create a bootable floppy image.
# 1. make a dos filesystem image
# 2. copy over kernel, initrd
# 3. copy over elilo files
$(IMAGE): $(INITRD) tmp_mount
	dd if=/dev/zero of=$@.new bs=1k count=$(FLOPPY_SIZE)
	mkfs.msdos -i $(DOS_VOLUME_ID) -n $(DOS_VOLUME_LABEL) -C $@.new $(FLOPPY_SIZE)

	mmd -i$@.new ::/efi
	mmd -i$@.new ::/efi/boot
	$(foreach NAME,$(KERNELNAME), \
             gzip -9c $(TEMP)/$(NAME) | mcopy -i$@.new - ::/linux)
	mcopy -i$@.new $(INITRD) ::/initrd.gz
	mcopy -i$@.new /usr/lib/elilo/elilo.efi ::/efi/boot/bootia64.efi
	mcopy -i$@.new /usr/lib/elilo/elilo.efi ::/elilo.efi
	mcopy -i$@.new boot/ia64/elilo.conf ::/elilo.conf
	mcopy -i$@.new boot/ia64/elilo.conf ::/efi/boot/elilo.conf
	echo "elilo linux" | mcopy -i$@.new - ::/install.nsh

	# Finalize the image.
	mv $@.new $@
endif # FLOPPY_SIZE

# Copy files somewhere the CD build scripts can find them
# XXX Will only use the last kernel if there are several
cd_content: $(IMAGE)
	$(foreach NAME,$(KERNELNAME), \
		gzip -9c $(TEMP)/$(NAME) > $(DEST)/$(TYPE)-linux; )
	cp  boot/ia64/elilo.conf $(DEST)/$(TYPE)-elilo.conf
	cp  cp /usr/lib/elilo/elilo.efi $(DEST)/$(TYPE)-elilo.efi

cd_image: cd_content
	mkisofs -r -J -no-emul-boot -boot-load-size 1 \
		-b `basename $(IMAGE)` -o $(TYPE).iso $(DEST)
	mv $(TYPE).iso $(DEST)
