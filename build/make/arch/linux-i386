arch-image: $(IMAGE)

# Create a bootable floppy image.
# 1. make a dos filesystem image
# 2. copy over kernel, initrd
# 3. install syslinux
$(IMAGE): $(INITRD)
	-if [ "$(UPX)" ] ; then \
		$(foreach NAME,$(KERNELNAME), \
			$(UPX) -9 $(TEMP)/$(NAME); ) \
	fi

	mkfs.msdos -i $(DOS_VOLUME_ID) -n $(DOS_VOLUME_LABEL) -C $@.new $(FLOPPY_SIZE)
	# mkfs.msdos gets the mode wrong (bug filed)
	chmod 644 $@.new

	$(foreach NAME,$(KERNELNAME), \
	   mcopy -i$@.new $(TEMP)/$(NAME) ::\linux)
	
	mcopy -i$@.new $(INITRD) ::\initrd.gz
	
ifdef KERNELNAME
	# syslinux is used to make the floppy bootable
	sed 's/$$SYSLINUX_DEBCONF_PRIORITY/$(SYSLINUX_DEBCONF_PRIORITY)/' \
		boot/i386/syslinux.cfg | todos | \
		mcopy -i$@.new - ::\syslinux.cfg
	syslinux $(SYSLINUX_OPTS) $@.new
endif

	# Finalize the image.
	mv $@.new $@

# Copy files somewhere the CD build scripts can find them
# XXX Will only use the last kernel if there are several
cd_content: $(IMAGE)
	$(foreach NAME,$(KERNELNAME), \
		cp -f $(TEMP)/$(NAME) $(DEST)/$(TYPE)-linux; )
	cp  boot/i386/syslinux.cfg $(DEST)/$(TYPE)-syslinux.cfg

cd_image: cd_content
	mkisofs -r -J -b `basename $(IMAGE)` -o $(TYPE).iso $(DEST)
	mv $(TYPE).iso $(DEST)
