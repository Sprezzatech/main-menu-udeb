arch-image: $(IMAGE)

# Create a bootable floppy image.
# 1. make a dos filesystem image
# 2. copy over kernel, initrd
# 3. install syslinux
$(IMAGE): $(INITRD) tmp_mount
	dd if=/dev/zero of=$@.new bs=1k count=$(FLOPPY_SIZE)
	mkfs.msdos -i deb00001 -n 'Debian Installer' -C $@.new $(FLOPPY_SIZE)

ifdef USER_MOUNT_HACK
	ln -sf `pwd`/$@.new $(USER_MOUNT_HACK)
	mount $(TMP_MNT)
else
	mount -t vfat -o loop $@.new $(TMP_MNT)
endif

	# syslinux is used to make the floppy bootable.
	if $(foreach NAME,$(KERNELNAME), \
             cp -f $(TEMP)/$(NAME) $(TMP_MNT)/linux) \
	   && cp $(INITRD) $(TMP_MNT)/initrd.gz \
	   && cp boot/i386/syslinux.cfg $(TMP_MNT)/ \
	   && todos $(TMP_MNT)/syslinux.cfg ; \
	then \
		umount $(TMP_MNT) ; \
		true ; \
	else \
		umount $(TMP_MNT) ; \
		false ; \
	fi

ifdef USER_MOUNT_HACK
	syslinux $(SYSLINUX_OPTS) $(USER_MOUNT_HACK)
	rm -f $(USER_MOUNT_HACK)
else
	syslinux $(SYSLINUX_OPTS) $@.new
endif

	# Finalize the image.
	mv $@.new $@

# Copy files somewhere the CD build scripts can find them
# XXX Will only use the last kernel if there are several
cd_content: $(IMAGE)
	$(foreach NAME,$(KERNELNAME), \
		cp -f $(TEMP)/$(NAME) $(DEST)/$(TYPE)-linux; )
	cp  boot/i386/syslinux.cfg $(DEST)/$(TYPE)-syslinux.cfg

cd_image: cd_content
	mkisofs -r -J -b `basename $(IMAGE)` -o $(TYPE).iso $(DEST)
	mv $(TYPE).iso $(DEST)

